(()=>{var e={8430:(e,t,s)=>{var i={"./anketa.jpg":5187,"./body_background.jpg":2203,"./category/category_experiments.jpg":1616,"./category/category_kosmo.jpg":3245,"./category/category_rocket.jpg":2726,"./group/impact/blood/blood1.jpg":9831,"./group/impact/blood/blood2.jpg":5765,"./group/impact/blood/blood3.jpg":8531,"./group/impact/blood/blood4.jpg":8942,"./group/impact/blood/blood5.jpg":4442,"./group/impact/bones/bones1.jpg":447,"./group/impact/bones/bones2.jpg":5456,"./group/impact/bones/bones3.jpg":816,"./group/impact/bones/bones4.jpg":4665,"./group/impact/bones/bones5.jpg":7845,"./group/impact/endocrine/endocrine1.jpg":1367,"./group/impact/endocrine/endocrine2.jpg":8984,"./group/impact/endocrine/endocrine3.jpg":38,"./group/impact/endocrine/endocrine4.jpg":8070,"./group/impact/endocrine/endocrine5.jpg":3831,"./group/impact/nervous/nervous1.jpg":2388,"./group/impact/nervous/nervous2.jpg":8527,"./group/impact/nervous/nervous3.jpg":8295,"./group/impact/nervous/nervous4.jpg":8826,"./group/impact/nervous/nervous5.jpg":7255,"./group/impact/nervous/nervous6.jpg":396,"./group/impact/respiratory/respiratory1.jpg":3304,"./group/impact/respiratory/respiratory2.jpg":2744,"./group/impact/respiratory/respiratory3.jpg":2229,"./group/impact/respiratory/respiratory4.jpg":1059,"./group/impact/respiratory/respiratory5.jpg":2520,"./group/panorama1.jpg":698,"./group/panorama2.jpg":2596,"./group/panorama20x5.jpg":1062,"./group/panorama3.jpg":8277,"./group/rockets/buran/buran1.jpg":8458,"./group/rockets/buran/buran2.jpg":3998,"./group/rockets/buran/buran3.jpg":958,"./group/rockets/buran/buran4.jpg":9050,"./group/rockets/buran/buran5.jpg":7198,"./group/rockets/proton/proton1.jpg":8176,"./group/rockets/proton/proton2.jpg":4051,"./group/rockets/proton/proton3.jpg":1558,"./group/rockets/proton/proton4.jpg":892,"./group/rockets/proton/proton5.jpg":2601,"./group/rockets/souz/souz1.jpg":1261,"./group/rockets/souz/souz2.jpg":2861,"./group/rockets/souz/souz3.jpg":4830,"./group/rockets/souz/souz4.jpg":9655,"./group/spacers/gagarin/gagarin1.jpg":358,"./group/spacers/gagarin/gagarin10.jpg":6745,"./group/spacers/gagarin/gagarin11.jpg":7205,"./group/spacers/gagarin/gagarin2.jpg":7387,"./group/spacers/gagarin/gagarin3.jpg":4103,"./group/spacers/gagarin/gagarin4.jpg":5534,"./group/spacers/gagarin/gagarin5.jpg":3192,"./group/spacers/gagarin/gagarin6.jpg":1697,"./group/spacers/gagarin/gagarin7.jpg":8784,"./group/spacers/gagarin/gagarin8.jpg":5558,"./group/spacers/gagarin/gagarin9.jpg":936,"./group/spacers/leonov/leonov1.jpg":9262,"./group/spacers/leonov/leonov2.jpg":1013,"./group/spacers/leonov/leonov3.jpg":1550,"./group/spacers/leonov/leonov4.jpg":2795,"./group/spacers/leonov/leonov5.jpg":8732,"./group/spacers/leonov/leonov6.jpg":4334,"./group/spacers/leonov/leonov7.jpg":94,"./group/spacers/leonov/leonov8.jpg":2185,"./group/spacers/savitskaya/savitskaya1.jpg":9617,"./group/spacers/savitskaya/savitskaya10.jpg":7958,"./group/spacers/savitskaya/savitskaya2.jpg":7939,"./group/spacers/savitskaya/savitskaya3.jpg":410,"./group/spacers/savitskaya/savitskaya4.jpg":5314,"./group/spacers/savitskaya/savitskaya5.jpg":5511,"./group/spacers/savitskaya/savitskaya6.jpg":5720,"./group/spacers/savitskaya/savitskaya7.jpg":359,"./group/spacers/savitskaya/savitskaya8.jpg":867,"./group/spacers/savitskaya/savitskaya9.jpg":6156,"./group/spacers/titov/titov1.jpg":270,"./group/spacers/titov/titov2.jpg":8961,"./group/spacers/titov/titov3.jpg":169,"./group/spacers/titov/titov4.jpg":4489,"./group/spacers/titov/titov5.jpg":4241,"./group/spacers/titov/titov6.jpg":8835,"./group/spacers/titov/titov7.jpg":6780,"./logo.jpg":924,"./placeholder16x9.jpg":9069,"./placeholder5x5.jpg":5717,"./slider/btn_next.png":1363,"./slider/btn_prev.png":7839,"./slider/slider_item1.jpg":9930,"./slider/slider_item2.jpg":7887,"./slider/slider_item3.jpg":4204,"./slider/slider_item4.jpg":2875,"./slider/slider_item5.jpg":8059};function r(e){var t=a(e);return s(t)}function a(e){if(!s.o(i,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return i[e]}r.keys=function(){return Object.keys(i)},r.resolve=a,e.exports=r,r.id=8430},5187:(e,t,s)=>{"use strict";e.exports=s.p+"images/anketa.jpg"},2203:(e,t,s)=>{"use strict";e.exports=s.p+"images/body_background.jpg"},1616:(e,t,s)=>{"use strict";e.exports=s.p+"images/category/category_experiments.jpg"},3245:(e,t,s)=>{"use strict";e.exports=s.p+"images/category/category_kosmo.jpg"},2726:(e,t,s)=>{"use strict";e.exports=s.p+"images/category/category_rocket.jpg"},9831:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/impact/blood/blood1.jpg"},5765:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/impact/blood/blood2.jpg"},8531:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/impact/blood/blood3.jpg"},8942:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/impact/blood/blood4.jpg"},4442:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/impact/blood/blood5.jpg"},447:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/impact/bones/bones1.jpg"},5456:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/impact/bones/bones2.jpg"},816:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/impact/bones/bones3.jpg"},4665:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/impact/bones/bones4.jpg"},7845:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/impact/bones/bones5.jpg"},1367:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/impact/endocrine/endocrine1.jpg"},8984:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/impact/endocrine/endocrine2.jpg"},38:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/impact/endocrine/endocrine3.jpg"},8070:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/impact/endocrine/endocrine4.jpg"},3831:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/impact/endocrine/endocrine5.jpg"},2388:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/impact/nervous/nervous1.jpg"},8527:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/impact/nervous/nervous2.jpg"},8295:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/impact/nervous/nervous3.jpg"},8826:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/impact/nervous/nervous4.jpg"},7255:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/impact/nervous/nervous5.jpg"},396:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/impact/nervous/nervous6.jpg"},3304:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/impact/respiratory/respiratory1.jpg"},2744:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/impact/respiratory/respiratory2.jpg"},2229:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/impact/respiratory/respiratory3.jpg"},1059:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/impact/respiratory/respiratory4.jpg"},2520:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/impact/respiratory/respiratory5.jpg"},698:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/panorama1.jpg"},2596:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/panorama2.jpg"},1062:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/panorama20x5.jpg"},8277:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/panorama3.jpg"},8458:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/rockets/buran/buran1.jpg"},3998:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/rockets/buran/buran2.jpg"},958:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/rockets/buran/buran3.jpg"},9050:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/rockets/buran/buran4.jpg"},7198:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/rockets/buran/buran5.jpg"},8176:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/rockets/proton/proton1.jpg"},4051:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/rockets/proton/proton2.jpg"},1558:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/rockets/proton/proton3.jpg"},892:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/rockets/proton/proton4.jpg"},2601:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/rockets/proton/proton5.jpg"},1261:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/rockets/souz/souz1.jpg"},2861:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/rockets/souz/souz2.jpg"},4830:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/rockets/souz/souz3.jpg"},9655:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/rockets/souz/souz4.jpg"},358:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/spacers/gagarin/gagarin1.jpg"},6745:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/spacers/gagarin/gagarin10.jpg"},7205:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/spacers/gagarin/gagarin11.jpg"},7387:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/spacers/gagarin/gagarin2.jpg"},4103:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/spacers/gagarin/gagarin3.jpg"},5534:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/spacers/gagarin/gagarin4.jpg"},3192:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/spacers/gagarin/gagarin5.jpg"},1697:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/spacers/gagarin/gagarin6.jpg"},8784:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/spacers/gagarin/gagarin7.jpg"},5558:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/spacers/gagarin/gagarin8.jpg"},936:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/spacers/gagarin/gagarin9.jpg"},9262:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/spacers/leonov/leonov1.jpg"},1013:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/spacers/leonov/leonov2.jpg"},1550:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/spacers/leonov/leonov3.jpg"},2795:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/spacers/leonov/leonov4.jpg"},8732:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/spacers/leonov/leonov5.jpg"},4334:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/spacers/leonov/leonov6.jpg"},94:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/spacers/leonov/leonov7.jpg"},2185:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/spacers/leonov/leonov8.jpg"},9617:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/spacers/savitskaya/savitskaya1.jpg"},7958:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/spacers/savitskaya/savitskaya10.jpg"},7939:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/spacers/savitskaya/savitskaya2.jpg"},410:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/spacers/savitskaya/savitskaya3.jpg"},5314:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/spacers/savitskaya/savitskaya4.jpg"},5511:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/spacers/savitskaya/savitskaya5.jpg"},5720:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/spacers/savitskaya/savitskaya6.jpg"},359:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/spacers/savitskaya/savitskaya7.jpg"},867:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/spacers/savitskaya/savitskaya8.jpg"},6156:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/spacers/savitskaya/savitskaya9.jpg"},270:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/spacers/titov/titov1.jpg"},8961:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/spacers/titov/titov2.jpg"},169:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/spacers/titov/titov3.jpg"},4489:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/spacers/titov/titov4.jpg"},4241:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/spacers/titov/titov5.jpg"},8835:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/spacers/titov/titov6.jpg"},6780:(e,t,s)=>{"use strict";e.exports=s.p+"images/group/spacers/titov/titov7.jpg"},924:(e,t,s)=>{"use strict";e.exports=s.p+"images/logo.jpg"},9069:(e,t,s)=>{"use strict";e.exports=s.p+"images/placeholder16x9.jpg"},5717:(e,t,s)=>{"use strict";e.exports=s.p+"images/placeholder5x5.jpg"},1363:(e,t,s)=>{"use strict";e.exports=s.p+"images/slider/btn_next.png"},7839:(e,t,s)=>{"use strict";e.exports=s.p+"images/slider/btn_prev.png"},9930:(e,t,s)=>{"use strict";e.exports=s.p+"images/slider/slider_item1.jpg"},7887:(e,t,s)=>{"use strict";e.exports=s.p+"images/slider/slider_item2.jpg"},4204:(e,t,s)=>{"use strict";e.exports=s.p+"images/slider/slider_item3.jpg"},2875:(e,t,s)=>{"use strict";e.exports=s.p+"images/slider/slider_item4.jpg"},8059:(e,t,s)=>{"use strict";e.exports=s.p+"images/slider/slider_item5.jpg"}},t={};function s(i){var r=t[i];if(void 0!==r)return r.exports;var a=t[i]={exports:{}};return e[i](a,a.exports,s),a.exports}s.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),s.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;s.g.importScripts&&(e=s.g.location+"");var t=s.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var i=t.getElementsByTagName("script");i.length&&(e=i[i.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),s.p=e})(),(()=>{"use strict";function e(e,t="",s=""){const i=document.createElement(e);return t&&i.classList.add(t),s&&i.classList.add(s),i}class t{constructor(e){this.defs={text:""},e&&(this.defs=Object.assign(this.defs,e)),this.init()}init(){this.layout=e("footer","footer");const t=e("div","container"),s=e("div","footer__content");this.defs.text&&(s.innerText=this.defs.text),t.append(s),this.layout.append(t)}get element(){return this.layout}}const i={text:'Шадрова Ольга Владимировна, класс 11 "В", ГБОУ школа №2009'},r={menuItems:[{title:"Космонавты",name:"spacers",linkName:"/#spacers"},{title:"Ракеты",name:"rockets",linkName:"/#rockets"},{title:"Влияние на организм",name:"effect",linkName:"/#effect"}],mobileMenuItems:[{title:"Главная",name:"main",linkName:"/#"},{title:"Космонавты",name:"spacers",linkName:"/#spacers"},{title:"Ракеты",name:"rockets",linkName:"/#rockets"},{title:"Влияние на организм",name:"effect",linkName:"/#effect"}],logoIconLink:'./images/logo.jpg" alt="logo"',logoHref:"/#",title:"Ольга Шадрова",buttonSettings:{className:"button",addClassName:"yellow-button",text:"Cтать космонавтом"}},a={previewSettings:{slider:{slides:["./images/slider/slider_item1.jpg","./images/slider/slider_item2.jpg","./images/slider/slider_item3.jpg","./images/slider/slider_item4.jpg","./images/slider/slider_item5.jpg"]},theme:"Влияние космического пространства на организм человека",slogan:"Космонавтика имеет безграничное будущее, и ее перспективы беспредельны, как сама Вселенная.",sloganAuthor:"С.П. Королев"},tematicBlock:[{image:"./images/category/category_kosmo.jpg",title:"Российские и советские космонавты",text:["Юрий Гагарин – «Кедр», Алексей Леонов – «Алмаз», Сергей Крикалев – «Базальт», Светлана Савицкая – «Памир-2». Кто из детей хотя бы раз не мечтал стать космонавтом и с орбиты подать собственные позывные, которые услышит весь мир? Кому не хотелось хотя бы однажды, надев скафандр, оказаться в сверкающей бездне открытого космоса?","Но какой бы романтичной ни казалась профессия космонавт, она требует очень серьезной подготовки: долгого обучения, изматывающих физических тренировок, психологического напряжения. Только выдержав все подготовительные этапы, человек может стать покорителем космоса – сильным духом и здоровьем, для которого не существует границ в пространстве и времени."],link:"/#spacers",buttonText:"Узнать подробнее"},{image:"./images/category/category_rocket.jpg",title:"Космические аппараты",text:['Человек - земное существо, но сколько веков и тысячелетий бы не прошло, его все так же манит небесная даль звезд и планет, и в прошлом веке наконец многовековая мечта осуществилась: с помощью технологий мы не только запустили научно-исследовательское оборудование в далекие космические дали, но и сами смогли высадиться за пределами планеты Земля, успешно "погуляв" по Луне и вернувшись обратно.'],link:"/#rockets",buttonText:"Узнать подробнее"},{image:"./images/category/category_experiments.jpg",title:"Влияние космического пространства на организм человека",text:["Тема космического пространства и возможности жизни в нём никогда не потеряет своей актуальности, ведь космос - это неизвестность, которая таит в себе много нового, разгадка которого может вывести человечество на новый уровень развития.","Однако человеку, изъявившему желание полететь в космос, во время полёта и после приземления на Землю предстоит столкнуться с множеством трудностей."],link:"/#effect",buttonText:"Узнать подробнее"}]},o={spacers:{mainImage:"./images/group/panorama1.jpg",crumbs:[{title:"Главная",link:"/#"},{title:"Космонавты",link:null}],title:"Космонавты",text:"Среди всех достижений человечества, вызывающих гордость, особое место занимают подвиги российских космонавтов. Для многих поколений космонавты были человеческим идеалом – героями, покорителями местности, о которой нам мало что известно, смелыми и мужественными. До сих пор в школьных сочинениях дети пишут, что мечтают стать космонавтами.",blocks:[{id:"spacers/gagarin",image:"./images/group/spacers/gagarin/gagarin1.jpg",title:"Юрий Алексеевич Гагарин",description:"Первый человек в космосе",link:"/#spacers/gagarin"},{id:"spacers/titov",image:"./images/group/spacers/titov/titov3.jpg",title:"Герман Степанович Титов",description:"Первый человек, совершивший длительный космический полет",link:"/#spacers/titov"},{id:"spacers/leonov",image:"./images/group/spacers/leonov/leonov4.jpg",title:"Алексей Архипович Леонов",description:"Первый человек в открытом космосе",link:"/#spacers/leonov"},{image:"./images/group/spacers/savitskaya/savitskaya1.jpg",title:"Светлана Евгеньевна Савицкая",description:"Первая женщина, вышедшая в открытый космос",link:"/#spacers/savitskaya"}]},rockets:{mainImage:"./images/group/panorama2.jpg",crumbs:[{title:"Главная",link:"/#"},{title:"Космические аппараты",link:null}],title:"Космические аппараты",text:"В нaстoящee врeмя нaшa стрaнa являeтся oдним из лидeрoв нayчнo-тeхничeскoгo прoгрeссa блaгoдaря пoстoяннoмy внeдрeнию сoврeмeнных тeхнoлoгий рaкeтнo-кoсмичeскoй oтрaсли. Дoстижeния СССР, Рoссийскoй Фeдeрaции в кoсмичeскoй oтрaсли впeчaтляют. Нaши инoстрaнныe кoллeги дaвнo признaли бoльшиe зaслyги Рoссии в oблaсти oсвoeния кoсмoсa. С yвeрeннoстью мoжнo скaзaть, чтo oтeчeствeннaя кoсмичeскaя oтрaсль являeтся в мирe oднoй из сaмых рaзвитых и мoщных.",blocks:[{image:"./images/group/rockets/souz/souz1.jpg",title:'Ракета-носитель "Союз"⁠⁠',description:"Ракета среднего класса",link:"/#rockets/souz"},{image:"./images/group/rockets/proton/proton1.jpg",title:'Ракета-носитель "Протон"',description:"Ракета тяжелого класса",link:"/#rockets/proton"},{image:"./images/group/rockets/buran/buran1.jpg",title:'Космический корабль "Буран"',description:"Многоразовый космический корабль",link:"/#rockets/buran"}]},effect:{mainImage:"./images/group/panorama3.jpg",crumbs:[{title:"Главная",link:"/#"},{title:"Влияние на организм",link:null}],title:"Влияние космического пространства на организм человека",text:"Космическое пространство таит в себе много опасностей, которые способны повлиять не только на физическое, но и на психическое состояние человека. К таким опасностям относятся: <br /><br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-\tКосмическое излучение; <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-\tПроблемы с психикой; <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-\tКосмический грибок; <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- Микрогравитация; <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- Проблемы с иммунитетом; <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- Ухудшение зрения; <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- Мышечная атрофия; <br /><br /> и многие другие.",blocks:[{image:"./images/group/impact/blood/blood2.jpg",title:"Кровеносная система",description:"Уменьшение объёма крови",link:"/#effect/blood"},{image:"./images/group/impact/bones/bones4.jpg",title:"Опорно-двигательный аппарат",description:"Кости теряют свою плотность",link:"/#effect/bones"},{image:"./images/group/impact/endocrine/endocrine1.jpg",title:"Эндокринная система",description:"Опасность анемии",link:"/#effect/endocrine"},{image:"./images/group/impact/nervous/nervous2.jpg",title:"Нервная система",description:"Влияние на психику",link:"/#effect/nervous"},{image:"./images/group/impact/respiratory/respiratory1.jpg",title:"Респираторная система",description:"Уменьшение объема легких",link:"/#effect/respiratory"}]}},n=[{id:"spacers/gagarin",crumbs:[{link:"/#",title:"Главная"},{link:"/#spacers",title:"Космонавты"},{link:null,title:"Гагарин"}],title:"Юрий Алексеевич Гагарин",text:["Гагарин – первый космонавт СССР и мира, ставший символом развития советской авиации и науки в целом, человек, навсегда вписавший свое имя в историю исследования космического пространства.","Имя Юрия Гагарина с детства знакомо всем россиянам. Он первым из всех живущих на Земле людей побывал в космосе. Прославленный летчик-космонавт стал легендой и образцом для подражания не только для советских граждан, но и для многих жителей других стран мира. После полета в космос Гагарин активно занимался международной общественной деятельностью."],image:"./images/group/spacers/gagarin/gagarin7.jpg",btnText:"Галерея",slides:["./images/group/spacers/gagarin/gagarin1.jpg","./images/group/spacers/gagarin/gagarin2.jpg","./images/group/spacers/gagarin/gagarin3.jpg","./images/group/spacers/gagarin/gagarin4.jpg","./images/group/spacers/gagarin/gagarin5.jpg","./images/group/spacers/gagarin/gagarin6.jpg","./images/group/spacers/gagarin/gagarin7.jpg","./images/group/spacers/gagarin/gagarin8.jpg","./images/group/spacers/gagarin/gagarin9.jpg","./images/group/spacers/gagarin/gagarin10.jpg","./images/group/spacers/gagarin/gagarin11.jpg"]},{id:"spacers/titov",crumbs:[{link:"/#",title:"Главная"},{link:"/#spacers",title:"Космонавты"},{link:null,title:"Титов"}],title:"Герман Степанович Титов",text:["Герман Титов – известный космонавт, дублер Юрия Гагарина. Первый человек, пробывший в космосе больше суток. Самый молодой из всех космонавтов в истории мировой космонавтики. На момент старта ему было всего 25 лет. В 1961 году стал Героем Советского Союза. Доцент, доктор военных наук.","Говорят, что в памяти остаются только первые. Неправда. Во всяком случае, когда речь идет о Германе Титове – втором человеке после Гагарина, полетевшем к звездам. Несмотря на то, что он стал вторым, его имя навсегда впечатано в историю развития космонавтики.","Все люди ищут свое место в жизни, он не стал исключением. С ранних лет его приучили к мысли, что гарантом успеха является напряженная работа, будь то учеба или добывание обычного куска хлеба. Герман всегда рассчитывал только на свои силы, верил исключительно в себя, а не в счастливое стечение обстоятельств. И если ему сопутствовала удача, то это не от большого везения, а в результате упорного труда. Он принадлежал к тем людям, которых считали одержимыми."],image:"./images/group/spacers/titov/titov1.jpg",btnText:"Галерея",slides:["./images/group/spacers/titov/titov1.jpg","./images/group/spacers/titov/titov2.jpg","./images/group/spacers/titov/titov3.jpg","./images/group/spacers/titov/titov4.jpg","./images/group/spacers/titov/titov5.jpg","./images/group/spacers/titov/titov6.jpg","./images/group/spacers/titov/titov7.jpg"]},{id:"spacers/leonov",crumbs:[{link:"/#",title:"Главная"},{link:"/#spacers",title:"Космонавты"},{link:null,title:"Леонов"}],title:"Алексей Архипович Леонов",text:["Алексей Леонов – летчик-космонавт Советского Союза №11. Впервые совершил выход в космическое пространство. Два раза удостоен звания Герой Советского Союза, имел звание генерал-майора авиации.","Имя Алексея Леонова уже давно не на слуху. Многим оно ничего не говорит, так как космонавтикой интересуются единицы. Уже давно забыли, что он был в числе первых космонавтов СССР, не говоря уже о том, чем его полет отличался от полетов его коллег. Но, по мнению людей компетентных в этом вопросе, вклад Леонова в развитие космонавтики не менее важен, чем достижение Гагарина. Ведь он стал первым, кто покинул космический корабль и вышел в открытый космос. Помимо этого Леонов был творческим человеком, поэтому смог оценить красоту планеты Земля «со стороны»."],image:"./images/group/spacers/leonov/leonov7.jpg",btnText:"Галерея",slides:["./images/group/spacers/leonov/leonov1.jpg","./images/group/spacers/leonov/leonov2.jpg","./images/group/spacers/leonov/leonov3.jpg","./images/group/spacers/leonov/leonov4.jpg","./images/group/spacers/leonov/leonov5.jpg","./images/group/spacers/leonov/leonov6.jpg","./images/group/spacers/leonov/leonov7.jpg","./images/group/spacers/leonov/leonov8.jpg"]},{id:"spacers/savitskaya",crumbs:[{link:"/#",title:"Главная"},{link:"/#spacers",title:"Космонавты"},{link:null,title:"Савицкая"}],title:"Светлана Евгеньевна Савицкая",text:["Светлана Савицкая – известный советский космонавт, летчик-испытатель, общественный деятель, педагог. Имеет научную степень кандидата технических наук, звание полковника ВВС СССР. Она единственная женщина в СССР, кто удостоился стать дважды Героем Советского Союза.","Ее имя навсегда вписано в историю космонавтики, ее биография – пример для подражания не только для женщин, но и для многих мужчин. Вторая женщина-космонавт Светлана Савицкая, «маршальская дочка», первая в мире среди женщин, кто побывал в открытом космосе. Она стала достойным продолжателем Валентины Терешковой, «девушки из народа», 53-м космонавтом Советского Союза и 111-м в истории мировой космонавтики."],image:"./images/group/spacers/savitskaya/savitskaya4.jpg",btnText:"Галерея",slides:["./images/group/spacers/savitskaya/savitskaya1.jpg","./images/group/spacers/savitskaya/savitskaya2.jpg","./images/group/spacers/savitskaya/savitskaya3.jpg","./images/group/spacers/savitskaya/savitskaya4.jpg","./images/group/spacers/savitskaya/savitskaya5.jpg","./images/group/spacers/savitskaya/savitskaya6.jpg","./images/group/spacers/savitskaya/savitskaya7.jpg","./images/group/spacers/savitskaya/savitskaya8.jpg","./images/group/spacers/savitskaya/savitskaya9.jpg","./images/group/spacers/savitskaya/savitskaya10.jpg"]},{id:"rockets/souz",crumbs:[{link:"/#",title:"Главная"},{link:"/#rockets",title:"Космические аппараты"},{link:null,title:"Союз"}],title:'Ракета-носитель "Союз"',text:["Ракета-носитель «Союз-ФГ» — ракета среднего класса, разработана и производится в РКЦ «Прогресс» (г. Самара). Она предназначена для выведения на околоземную орбиту автоматических космических аппаратов социально-экономического, научно-исследовательского и специального назначения.","Ракеты-носители «Союз» в сочетании с разгонным блоком «Фрегат» предназначены для запусков космических аппаратов на околоземные орбиты различных высот и наклонений, включая геопереходные и геостационарную, а также отлетные траектории."],image:"./images/group/rockets/souz/souz1.jpg",btnText:"Галерея",slides:["./images/group/rockets/souz/souz1.jpg","./images/group/rockets/souz/souz2.jpg","./images/group/rockets/souz/souz3.jpg","./images/group/rockets/souz/souz4.jpg"]},{id:"rockets/proton",crumbs:[{link:"/#",title:"Главная"},{link:"/#rockets",title:"Космические аппараты"},{link:null,title:"Протон"}],title:'Ракета-носитель "Протон"',text:["«Протон» (УР-500 — Универсальная ракета, «Протон-К», «Протон-М») — одноразовая ракета-носитель (РН) тяжёлого класса, предназначенная для выведения автоматических космических аппаратов на орбиту Земли и далее в космическое пространство. Cпособна выводить на геостационарную орбиту (ГСО) грузы до 3,3 т. ","РН «Протон» явилась средством выведения всех советских и российских орбитальных станций «Салют-ДОС» и «Алмаз», модулей станций «Мир» и МКС, планировавшихся пилотируемых космических кораблей ТКС и Л-1/«Зонд» (советской лунно-облётной программы), а также тяжёлых ИСЗ различного назначения и межпланетных станций. "],image:"./images/group/rockets/proton/proton2.jpg",btnText:"Галерея",slides:["./images/group/rockets/proton/proton1.jpg","./images/group/rockets/proton/proton2.jpg","./images/group/rockets/proton/proton3.jpg","./images/group/rockets/proton/proton4.jpg","./images/group/rockets/proton/proton5.jpg"]},{id:"rockets/buran",crumbs:[{link:"/#",title:"Главная"},{link:"/#rockets",title:"Космические аппараты"},{link:null,title:"Буран"}],title:'Космический корабль "Буран"',text:["«Буран» — многоразовый космический корабль, способный как доставлять различные грузы на орбиту, так и возвращать их на Землю. Специалисты считают, что ракетоплан гипотетически мог спасти «Мир»: в его грузовой отсек спокойно поместился бы любой модуль советской орбитальной станции, затопленной в 2001 году. В том же отсеке конструкторы предлагали для пилотируемых испытательных полётов разместить спускаемый аппарат «Союза». В случае нештатной ситуации это позволило бы экипажу «эвакуироваться» с орбиты."],image:"./images/group/rockets/buran/buran3.jpg",btnText:"Галерея",slides:["./images/group/rockets/buran/buran1.jpg","./images/group/rockets/buran/buran2.jpg","./images/group/rockets/buran/buran3.jpg","./images/group/rockets/buran/buran4.jpg","./images/group/rockets/buran/buran5.jpg"]},{id:"effect/blood",crumbs:[{link:"/#",title:"Главная"},{link:"/#effect",title:"Влияние на организм"},{link:null,title:"Кровеностная система"}],title:"Воздействие на кровеносную систему",text:["Система кровообращения приспособлена к земной гравитации. Сердце расположено высоко по отношению к остальным органам, чтобы лучше снабжать кровью верхнюю часть тела и, конечно же, мозг. Но больше крови всё равно поступает в нижнюю часть тела и меньше — в верхнюю.","В условиях микрогравитации всё тело получает кровь (и остальные жидкости) в равном количестве. Из-за этого ноги становятся худее, а голова увеличивается в размерах. Это сбивает с толку организм: мозг получает сигналы об избытке жидкости в верхней части тела, и поэтому почки начинают активно удалять жидкость из организма, и человек не испытывает чувство жажды.","Такое поведение тела может привести к обезвоживанию, если космонавт не заставляет себя пить, даже когда ему этого не хочется."],image:"./images/group/impact/blood/blood5.jpg",btnText:"Галерея",slides:["./images/group/impact/blood/blood1.jpg","./images/group/impact/blood/blood2.jpg","./images/group/impact/blood/blood3.jpg","./images/group/impact/blood/blood4.jpg","./images/group/impact/blood/blood5.jpg"]},{id:"effect/bones",crumbs:[{link:"/#",title:"Главная"},{link:"/#effect",title:"Влияние на организм"},{link:null,title:"Опорно-двигательный аппарат"}],title:"Воздействие на опорно-двигательный аппарат",text:["Кости теряют свою плотность. Это явление связано с тем, что нахождение в невесомости с каждым месяцем уменьшает плотность костей космонавта на 1% из-за вымывания кальция. Это увеличивает вероятность перелома по возвращении на Землю."],image:"./images/group/impact/bones/bones5.jpg",btnText:"Галерея",slides:["./images/group/impact/bones/bones1.jpg","./images/group/impact/bones/bones2.jpg","./images/group/impact/bones/bones3.jpg","./images/group/impact/bones/bones4.jpg","./images/group/impact/bones/bones5.jpg"]},{id:"effect/endocrine",crumbs:[{link:"/#",title:"Главная"},{link:"/#effect",title:"Влияние на организм"},{link:null,title:"Энокринная система"}],title:"Воздействие на эндокринную систему",text:["Исследование гормональных изменений во время космического полёта — очень сложный процесс. Эндокринологам сложно отличить влияние микрогравитации от влияния стресса во время взлёта, пребывания на орбите и посадки. Хотя кое-что об эндокринной системе во время пребывания в космосе известно. ","Например, по-другому работает гормон эритропоэтин, из-за чего у космонавтов чаще, чем у обычных людей, наблюдается анемия. Гормоны, связанные с положительными эмоциональными реакциями вроде допамина, почему-то активизируются. А из-за снижения физических нагрузок падает и чувствительность к инсулину, что может привести к непредсказуемым последствиям."],image:"./images/group/impact/endocrine/endocrine5.jpg",btnText:"Галерея",slides:["./images/group/impact/endocrine/endocrine1.jpg","./images/group/impact/endocrine/endocrine2.jpg","./images/group/impact/endocrine/endocrine3.jpg","./images/group/impact/endocrine/endocrine4.jpg","./images/group/impact/endocrine/endocrine5.jpg"]},{id:"effect/nervous",crumbs:[{link:"/#",title:"Главная"},{link:"/#effect",title:"Влияние на организм"},{link:null,title:"Нервная система"}],title:"Воздействие на нервную систему",text:["Одна из проблем, с которыми сталкивается космонавт, — это то, что на орбите нет разделения на день и ночь. Космонавты видят рассвет и закат по несколько раз за день. В итоге у них нарушается работа циркадных ритмов, что может привести к постоянному ощущению усталости и дискомфорта.","Ещё одно испытание для нервной системы — условия микрогравитации. Мозг человека должен управлять конечностями в среде, где вертикальная ось тела больше не доминирует. На орбите становится сложнее делать хватательные движения: в невесомости легче промахнуться мимо нужного предмета, и это тоже вводит мозг в заблуждение. Мышцы двигаются по-новому и посылают в мозг сигналы, которые он не знает, как интерпретировать.","В итоге центральная нервная система адаптируется к новым условиям, но на это может потребоваться до шести месяцев."],image:"./images/group/impact/nervous/nervous5.jpg",btnText:"Галерея",slides:["./images/group/impact/nervous/nervous1.jpg","./images/group/impact/nervous/nervous2.jpg","./images/group/impact/nervous/nervous3.jpg","./images/group/impact/nervous/nervous4.jpg","./images/group/impact/nervous/nervous5.jpg","./images/group/impact/nervous/nervous6.jpg"]},{id:"effect/respiratory",crumbs:[{link:"/#",title:"Главная"},{link:"/#effect",title:"Влияние на организм"},{link:null,title:"Респираторная система"}],title:"Воздействие на респираторную систему",text:["Закаченный внутрь МКС воздух помогает космонавтам дышать без помощи каких-либо устройств, но человек дышит на орбите всё равно не так, как на Земле. Основная проблема заключается в изменении кровообращения — целостность дыхательного процесса нарушается из-за неустойчивости движения крови в невесомости. Это приводит к тому, что респираторная система пропускает меньшие потоки воздуха, хотя это и не влияет на жизнеспособность организма. Из-за этого в количественном выражении уменьшается брюшной охват, но это не приводит к изменению паттернов дыхания."],image:"./images/group/impact/respiratory/respiratory3.jpg",btnText:"Галерея",slides:["./images/group/impact/respiratory/respiratory1.jpg","./images/group/impact/respiratory/respiratory2.jpg","./images/group/impact/respiratory/respiratory3.jpg","./images/group/impact/respiratory/respiratory4.jpg","./images/group/impact/respiratory/respiratory5.jpg"]}];class p{constructor(){this.init()}init(){this.layout=(new DOMParser).parseFromString('\n    <div class="page404">\n        <h1 class="page404__title">Такой страницы не существует</h1>\n    </div>\n    ',"text/html").body.firstChild}destroy(){this.layout.remove()}get element(){return this.layout}}class g{constructor(e=[]){this.slides=e,this.init(),this.addEventListeners(),this.direction="next"}init(){this.slider=(new DOMParser).parseFromString(this.getSliderHtmlString(),"text/html").body.firstChild,this.sliderContainer=this.slider.querySelector(".slider__container"),this.slidesRow=this.slider.querySelector(".slider__row"),this.slidesRow.style.width=this.slidesRowWidth,this.addSliderItems(),this.getButtons()}getSliderHtmlString(){return'\n    <div class="slider">\n        <div class="slider__container">\n            <div class="slider__row"></div>\n        </div>\n    </div>\n    '}addSliderItems(){this.slides.forEach((e=>{const t=`\n        <div class="slider__item">\n            <img src="${e}" alt="slide" />\n        </div>\n        `,s=(new DOMParser).parseFromString(t,"text/html").body.firstChild;s.style.width=this.slideWidth,this.slidesRow.append(s)}))}getButtons(){const e=this.slider.querySelector(".slider__container");this.prevButton=(new DOMParser).parseFromString('\n    <button class="slider__btn-prev">\n        <img src="./images/slider/btn_prev.png" alt="button" />\n    </button>    \n    ',"text/html").body.firstChild,this.nextButton=(new DOMParser).parseFromString('\n    <button class="slider__btn-next">\n        <img src="./images/slider/btn_next.png" alt="button" />\n    </button>\n    ',"text/html").body.firstChild,e.append(this.prevButton,this.nextButton)}addEventListeners(){this.eventListeners.forEach((e=>{e.targetItem.addEventListener(e.event,e.callback.bind(this))}))}removeEventListeners(){this.eventListeners.forEach((e=>{e.targetItem.removeEventListener(e.event,e.callback)}))}showNextSlide(){"prev"===this.direction&&(this.direction="next",this.slidesRow.prepend(this.slidesRow.lastElementChild)),this.buttonsDisabled=!0,this.sliderContainer.style="justify-content: flex-start",this.slidesRow.style=`\n        width: ${this.slidesRowWidth};\n        transform: translateX(-${this.slideWidth})\n    `}showPreviousSlide(){"next"===this.direction&&(this.direction="prev",this.slidesRow.append(this.slidesRow.firstElementChild)),this.buttonsDisabled=!0,this.sliderContainer.style="justify-content: flex-end",this.slidesRow.style=`\n        width: ${this.slidesRowWidth};\n        transform: translateX(${this.slideWidth})\n    `}finishAnimation(){"next"===this.direction?this.slidesRow.append(this.slidesRow.firstElementChild):this.slidesRow.prepend(this.slidesRow.lastElementChild),this.slidesRow.style=`\n      transition: none;\n      transform: translateX(0);\n      width: ${this.slidesRowWidth};\n    `,this.buttonsDisabled=!1,setTimeout((()=>this.slidesRow.style.transition="0.3s"))}autoPlay(e){setInterval((()=>this.showNextSlide()),e)}destroy(){this.removeEventListeners(),this.slider.remove()}set buttonsDisabled(e){this.sliderButtons.forEach((t=>t.disabled=e))}get sliderButtons(){return[this.nextButton,this.prevButton]}get slideWidth(){return 100/this.slides.length+"%"}get slidesRowWidth(){return 100*this.slides.length+"%"}get eventListeners(){return[{targetItem:this.nextButton,event:"click",callback:this.showNextSlide},{targetItem:this.prevButton,event:"click",callback:this.showPreviousSlide},{targetItem:this.slidesRow,event:"transitionend",callback:this.finishAnimation}]}get element(){return this.slider}}class l{constructor(e){this.options={slider:{},theme:"",slogan:"",sloganAuthor:""},e&&(this.options=Object.assign(this.options,e)),this.init()}init(){this.preview=(new DOMParser).parseFromString(this.getPreviewHtml(),"text/html").body.firstChild,this.appendSlider(this.options.slider.slides)}getPreviewHtml(){return`\n        <div class="preview">\n          <div class="container">\n            <div class="preview__container">\n              <div class="preview__header">${this.options.theme}</div>\n              <div class="preview__wrapper">\n                <div class="preview__title-wrapper">\n                  <h3 class="preview__title">${this.options.slogan}</h3>\n                  <span class="preview__title-author">${this.options.sloganAuthor}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        `}appendSlider(e){const t=this.preview.querySelector(".preview__wrapper");this.slider=new g(e),t.prepend(this.slider.element),this.slider.autoPlay(5e3)}destroy(){this.slider.destroy(),this.preview.remove()}get element(){return this.preview}}class c{constructor(e){this.options={image:"",title:"",text:[],link:"",buttonText:""},e&&(this.options=Object.assign(this.options,e)),this.init(this.options)}init(e){this.block=(new DOMParser).parseFromString(this.getBlockHtmlString(),"text/html").body.firstChild,this.addTextToBlock(e)}getBlockHtmlString(){return`\n    <section class="category">\n    <div class="container">\n      <div class="category__wrapper">\n        <div class="category__content-wrapper">\n          <div class="category__left">\n            <div class="category__image">\n              <img src="${this.options.image}" alt="category_image" />\n            </div>\n          </div>\n          <div class="category__right">\n            <div class="category__title-wrapper">\n              <h2 class="category__title">${this.options.title}</h2>\n            </div>\n            <div class="category__text-wrapper">\n            </div>\n            <div class="category__buttons-wrapper">\n            <a href="${this.options.link}" class="link-button link-button__yellow">${this.options.buttonText}</a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n  `}addTextToBlock(e){const t=this.block.querySelector(".category__text-wrapper");e.text.forEach((e=>{const s=`<p class="category__text">${e}</p>`;t.append((new DOMParser).parseFromString(s,"text/html").body.firstChild)}))}destroy(){this.block.remove()}get element(){return this.block}}class u{constructor(e){this.options={id:"",image:"",title:"",description:"",link:""},e&&(this.options=Object.assign(this.options,e)),this.init()}init(){this.item=(new DOMParser).parseFromString(this.getItemMarkupHtml(),"text/html").body.firstChild}getItemMarkupHtml(){return`\n    <div class="group__item">\n        <div class="group__item-image">\n          <img src="${this.options.image}" alt="kosmo" />\n        </div>\n        <div class="group__item-content">\n          <a href="${this.options.link}" class="group__item-title">${this.options.title}</a>\n          <p class="group__item-description">${this.options.description}</p>\n        </div>\n    </div>\n    `}destroy(){this.item.remove()}get element(){return this.item}}class d{constructor(e){this.options={mainImage:"",crumbs:[],title:"",text:"",blocks:[]},e&&(this.options=Object.assign(this.options,e)),this.init()}init(){this.category=(new DOMParser).parseFromString(this.getCategoryMarkup(),"text/html").body.firstChild,this.appendCrumbs(this.options.crumbs),this.appendCategorisItem(this.options.blocks)}getCategoryMarkup(){return`\n    <section class="group">\n        <div class="container">\n          <div class="group__wrapper">\n            <div class="group__image-wrapper">\n              <img src="${this.options.mainImage}" alt="bg"  />\n            </div>\n            <div class="group__content">\n              <div class="bread-crumbs"></div>\n              <h2 class="group__title">${this.options.title}</h2>\n              <p class="grop__text">${this.options.text}</p>\n              <div class="group__items"></div>\n            </div>\n          </div>\n        </div>\n    </section>\n    `}appendCrumbs(e){const t=this.category.querySelector(".bread-crumbs");e.forEach(((e,s,i)=>{if(s!==i.length-1){const s=`\n            <a href="${e.link}" class="bread-crumbs__item white-color">${e.title}</a>\n            `;t.append((new DOMParser).parseFromString(s,"text/html").body.firstChild)}else{const s=`\n        <span class="bread-crumbs__item white-color">${e.title}</span>\n        `;t.append((new DOMParser).parseFromString(s,"text/html").body.firstChild)}}))}appendCategorisItem(e){const t=this.category.querySelector(".group__items");e.forEach((e=>t.append(new u(e).element)))}destroy(){this.category.remove()}get element(){return this.category}}class m{constructor(t,s){this.config={className:"",addClassName:"",text:""},this.callback=s,t&&(this.config=Object.assign(this.config,t)),this.button=e("button",this.config.className,this.config.addClassName),this.button.innerText=this.config.text,this.callback&&this.button.addEventListener("click",this.callback)}set disabled(e){this.button.disabled=e}get element(){return this.button}}class h{constructor(e="",t=null){this.title=e,this.content=t,this.init(),this.addDefautlButton(),this.addListeners()}init(){this.modal=(new DOMParser).parseFromString(this.getModalMarkup(),"text/html").body.firstChild,this.titleContainer=this.modal.querySelector(".modal__title"),this.contentContainer=this.modal.querySelector(".modal__content"),this.actions=this.modal.querySelector(".modal__actions"),this.closeIconBtn=this.modal.querySelector(".modal__close"),this.show(),this.title&&this.addTitle(this.title),this.content&&this.addContent(this.content)}addListeners(){this.closeIconBtn.addEventListener("click",this.hide.bind(this))}getModalMarkup(){return'\n        <div class="modal hidden">\n           <div class="modal__wrapper">\n             <div class="modal__header">\n               <div class="modal__title"></div>\n               <div class="modal__close"></div>\n             </div>\n             <div class="modal__content"></div>\n             <div class="modal__actions"></div>\n           </div>\n         </div>\n        '}addDefautlButton(){const e=new m({className:"button",addClassName:"yellow-button",text:"Закрыть"},this.hide.bind(this));this.actions.append(e.element)}show(){document.body.append(this.modal),setTimeout((()=>this.modal.classList.remove("hidden")),0)}hide(){this.modal.classList.add("hidden"),setTimeout((()=>this.modal.remove()),300)}addTitle(e){this.titleContainer.innerText=e||""}addContent(e){e&&e instanceof HTMLElement&&(this.contentContainer.innerHTML="",this.contentContainer.append(e))}get element(){return this.modal}}class v{constructor(e){this.options={id:"",crumbs:[],title:"",text:[],image:"",btnText:"",slides:[]},e&&(this.options=Object.assign(this.options,e)),this.init()}init(){this.page=(new DOMParser).parseFromString(this.getPageMarkup(),"text/html").body.firstChild,this.addBreadCrumbs(this.options.crumbs),this.addTextToPage(this.options.text),this.addGaleryButton()}getPageMarkup(){return`\n    <section class="detail">\n        <div class="container">\n          <div class="detail__wrapper">\n            <div class="bread-crumbs"></div>\n            <h2 class="detail__title">${this.options.title}</h2>\n            <div class="detail__text-wrapper"></div>\n            <div class="detail__image-wrapper">\n              <img src="${this.options.image}" alt="image" />\n            </div>\n            <div class="detail__buttons"></div>\n          </div>\n        </div>\n    </section>\n    `}addBreadCrumbs(e){const t=this.page.querySelector(".bread-crumbs");e.forEach(((e,s,i)=>{if(s!==i.length-1){const s=`<a href="${e.link}" class="bread-crumbs__item black-color">${e.title}</a>`;t.append((new DOMParser).parseFromString(s,"text/html").body.firstChild)}else{const s=`<span class="bread-crumbs__item">${e.title}</span>`;t.append((new DOMParser).parseFromString(s,"text/html").body.firstChild)}}))}addTextToPage(e){const t=this.page.querySelector(".detail__text-wrapper");e.forEach((e=>{const s=`<p class="detail__text">${e}</p>`;t.append((new DOMParser).parseFromString(s,"text/html").body.firstChild)}))}addGaleryButton(){const e=this.page.querySelector(".detail__buttons");this.galeryButton=new m({className:"button",addClassName:"yellow-button",text:this.options.btnText},this.showSlides.bind(this)),e.append(this.galeryButton.element)}showSlides(){new h(this.options.title,new g(this.options.slides).element)}destroy(){this.page.remove()}get element(){return this.page}}const b=[{path:"",component:class{constructor(e){this.page=document.createDocumentFragment(),this.preview=new l(e.previewSettings),this.tematicBlocks=[],this.page.appendChild(this.preview.element),this.addTematicBlocks(e)}addTematicBlocks(e){e.tematicBlock.forEach((e=>{const t=new c(e);this.tematicBlocks.push(t),this.page.appendChild(t.element)}))}destroy(){this.preview.destroy(),this.tematicBlocks.forEach((e=>e.destroy()))}get element(){return this.page}}},{path:"spacers",component:d},{path:"rockets",component:d},{path:"effect",component:d},{path:"spacers/gagarin",component:v},{path:"spacers/titov",component:v},{path:"spacers/leonov",component:v},{path:"spacers/savitskaya",component:v},{path:"rockets/souz",component:v},{path:"rockets/proton",component:v},{path:"rockets/buran",component:v},{path:"effect/blood",component:v},{path:"effect/bones",component:v},{path:"effect/endocrine",component:v},{path:"effect/nervous",component:v},{path:"effect/respiratory",component:v}];class j{constructor(){const e={mainPageData:a,categoriesPageData:o,detailPageData:n};this.routes=b,this.init(e)}init(t){this.content=e("div","content"),this.pageData,this.detailsData,this.id=null,this.activePage,this.start(t)}start(e){this.routes&&this.initRoutes(e)}initRoutes(e){window.addEventListener("hashchange",this.renderRoute.bind(this,e)),this.renderRoute(e)}renderRoute(e){const t=window.location.hash.slice(1),s=b.find((e=>e.path===t));if(this.activePage&&this.activePage.destroy(),s)switch(window.scrollTo(0,0),t){case"":this.pageData=e.mainPageData,this.appendHtml(s,this.pageData);break;case"spacers":case"rockets":case"effect":this.pageData=e.categoriesPageData[t],this.appendHtml(s,this.pageData);break;default:const i=e.detailPageData.find((e=>e.id===t));this.appendHtml(s,i)}else this.show404page()}appendHtml(e,t){this.activePage=new e.component(t),this.content.append(this.activePage.element)}show404page(){this.activePage=new p,this.content.append(this.activePage.element)}get element(){return this.content}}class k{constructor(e){this.options={className:"",placeholder:"",fieldName:""},e&&(this.options=Object.assign(this.options,e)),this.init()}init(){const e=`<input type="text" class="${this.options.className}" placeholder="${this.options.placeholder}" />`;this.textField=(new DOMParser).parseFromString(e,"text/html").body.firstChild,this.textField.addEventListener("input",(()=>this.valid?this.textField.classList.remove("anketa__filter__invalid"):null))}validate(){this.valid||this.textField.classList.add("anketa__filter__invalid")}get fieldName(){return this.options.fieldName}get value(){return this.textField.value}get valid(){return!!this.value}get element(){return this.textField}}class _{constructor(){this.init()}init(){this.anketa=(new DOMParser).parseFromString(this.getAnketaMarkup(),"text/html").body.firstChild,this.addFilters(),this.addButton(),this.modal=new h("Заявка в космонавты",this.element)}getAnketaMarkup(){return'\n    <div class="anketa">\n     <div class="anketa__content">\n       <div class="anketa__image-wrapper">\n         <img src="./images/anketa.jpg" alt="image" />\n       </div>\n       <div class="anketa__filters-wrapper">\n          <h3 class="anketa__title">Заполните все поля!</h3>\n          <div class="anketa__filters">\n   \n          <div class="anketa__buttons-wrapper"></div>\n       </div>\n     </div>\n   </div>\n'}getResultMarkup(){return`\n       <div class="anketa">\n         <div class="anketa__content">\n           <div class="anketa__result" >\n             <h3 class="anketa__result-title">${this.filters.firstName.value}, подзравляем!</h3>\n             <p class="anketa__result-text">\n               Ваша заявка на поступление в отряд космонавтов принята. В ближайшее время мы рассмотрим Вашу кандидатуру и о результатах\n               сообщим в школу №${this.filters.school.value}.\n             </p>\n           </div>\n         </div>\n       </div>\n    `}addFilters(){const e=this.anketa.querySelector(".anketa__filters");this.filters={},this.filterOptions.forEach((t=>{this.filters[t.fieldName]=new k(t),e.prepend(this.filters[t.fieldName].element)}))}addButton(){const e=this.anketa.querySelector(".anketa__buttons-wrapper");this.button=new m({className:"button",addClassName:"yellow-button",text:"Подать заявку"},this.acceptAnketa.bind(this)),e.append(this.button.element)}acceptAnketa(){if(Object.values(this.filters).forEach((e=>{e.validate()})),Object.values(this.filters).every((e=>e.valid))){const e=(new DOMParser).parseFromString(this.getResultMarkup(),"text/html").body.firstChild;this.modal.addContent(e)}}get filterOptions(){return[{className:"anketa__filter",placeholder:"Класс",fieldName:"class"},{className:"anketa__filter",placeholder:"Номер школы",fieldName:"school"},{className:"anketa__filter",placeholder:"Имя",fieldName:"firstName"},{className:"anketa__filter",placeholder:"Фамилия",fieldName:"lastName"}]}get element(){return this.anketa}}class y{constructor(e){this.options={menuItems:[],mobileMenuItems:[],logoIconLink:"",logoHref:"/#",title:"",buttonSettings:{}},e&&(this.options=Object.assign(this.options,e)),this.button=new m(this.options.buttonSettings),this.init()}init(){this.header=(new DOMParser).parseFromString(this.getHeaderHtmlString(this.options),"text/html").body.firstChild,this.header.querySelector(".header__btn").append(new m(this.options.buttonSettings,this.fillQuestionnaire).element),this.header.querySelector(".mobile-header__btn").append(new m(this.options.buttonSettings).element),this.addMenuItems(),this.mobileMenu=this.header.querySelector(".mobile-menu"),this.mobileMenuShowButton=this.header.querySelector(".mobile-header__menu"),this.mobileMenuShowButton.addEventListener("click",this.showMobileMenu.bind(this)),this.mobileMenuHideButton=this.header.querySelector(".mobile-menu__close"),this.mobileMenuHideButton.addEventListener("click",this.hideMobileMenu.bind(this))}getHeaderHtmlString(){return`\n    <header class="header">\n        <div class="container">\n            <div class="header__content-wrapper">\n            <div class="header__wrapper">\n                <div class="header__logo">\n                <a href="${this.options.logoHref}" class="header__logo-link">\n                    <img src="${this.options.logoIconLink}" alt="logo" />\n                </a>\n                </div>\n                <div class="header__title">${this.options.title}</div>\n                <div class="header__btn">  </div>\n                \n            </div>\n            <div class="menu"></div>\n            </div>\n        </div>\n        <div class="mobile-header">\n            <div class="mobile-header__menu">\n                <div class="mobile-menu__line"></div>\n            </div>\n            <div class="mobile-header__title">${this.options.title}</div>\n            <div class="mobile-header__btn">  </div>\n            <div class="mobile-menu mobile-menu__hidden">\n                <div class="mobile-menu__head">\n                    <div class="mobile-menu__close"></div>\n                </div>\n            <div class="mobile-menu__content"></div>\n          </div>\n        </div>\n      </header>\n    `}addMenuItems(){const e=this.header.querySelector(".menu"),t=this.header.querySelector(".mobile-menu__content");this.options.menuItems.forEach((t=>{const s=(new DOMParser).parseFromString(`<a href="${t.linkName}" class="menu__item" >${t.title}</a>`,"text/html").body.firstChild;e.append(s)})),this.options.mobileMenuItems.forEach((e=>{const s=(new DOMParser).parseFromString(`<a href="${e.linkName}" class="mobile-menu__item" >${e.title}</a>`,"text/html").body.firstChild;t.append(s),s.addEventListener("click",this.hideMobileMenu.bind(this))}))}hideMobileMenu(){this.mobileMenu.classList.add("mobile-menu__hidden")}showMobileMenu(){this.mobileMenu.classList.remove("mobile-menu__hidden")}fillQuestionnaire(){new _}get element(){return this.header}}class x{constructor(){this.app=document.querySelector("#app"),this.init()}init(){this.app.append(new y(r).element,(new j).element,new t(i).element)}get element(){return this.app}}s(8430),document.addEventListener("DOMContentLoaded",(()=>{const e=new x;document.body.append(e.element)}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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aEMsS0FBS2dQLElBQUkzTSxPQUFPLElBQUk2TCxFQUFPM0wsR0FBZ0JoQixTQUFTLElBQUlvSyxHQUFVcEssUUFBUyxJQUFJRyxFQUFPWSxHQUFnQmYsUUFDeEcsQ0FFSUEsY0FDRixPQUFPdkIsS0FBS2dQLEdBQ2QsRUNqQkYsUUFLRXJPLFNBQVN5RixpQkFBaUIsb0JBQW9CLEtBQzVDLE1BQU00SSxFQUFNLElBQUlELEVBQ2hCcE8sU0FBUzhELEtBQUtwQyxPQUFPMk0sRUFBSXpOLFFBQVEsRyIsInNvdXJjZXMiOlsid2VicGFjazovL3NwYWNlLXByb2plY3QvLi9zcmMvaW1hZ2VzLyBzeW5jIFxcLihwbmclN0NqcGclN0NzdmclN0NnaWYpJCIsIndlYnBhY2s6Ly9zcGFjZS1wcm9qZWN0L3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL3NwYWNlLXByb2plY3Qvd2VicGFjay9ydW50aW1lL2dsb2JhbCIsIndlYnBhY2s6Ly9zcGFjZS1wcm9qZWN0L3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vc3BhY2UtcHJvamVjdC93ZWJwYWNrL3J1bnRpbWUvcHVibGljUGF0aCIsIndlYnBhY2s6Ly9zcGFjZS1wcm9qZWN0Ly4vc3JjL2phdmFzY3JpcHQvbGliL2Z1bmN0aW9ucy5qcyIsIndlYnBhY2s6Ly9zcGFjZS1wcm9qZWN0Ly4vc3JjL2phdmFzY3JpcHQvY29tcG9uZW50cy9mb290ZXIuanMiLCJ3ZWJwYWNrOi8vc3BhY2UtcHJvamVjdC8uL3NyYy9qYXZhc2NyaXB0L2RhdGEvZGF0YS5qcyIsIndlYnBhY2s6Ly9zcGFjZS1wcm9qZWN0Ly4vc3JjL2phdmFzY3JpcHQvY29tcG9uZW50cy9wYWdlNDA0LmpzIiwid2VicGFjazovL3NwYWNlLXByb2plY3QvLi9zcmMvamF2YXNjcmlwdC9saWIvc2xpZGVyLmpzIiwid2VicGFjazovL3NwYWNlLXByb2plY3QvLi9zcmMvamF2YXNjcmlwdC9jb21wb25lbnRzL3ByZXZpZXcuanMiLCJ3ZWJwYWNrOi8vc3BhY2UtcHJvamVjdC8uL3NyYy9qYXZhc2NyaXB0L2NvbXBvbmVudHMvdGVtYXRpY0Jsb2NrLmpzIiwid2VicGFjazovL3NwYWNlLXByb2plY3QvLi9zcmMvamF2YXNjcmlwdC9saWIvY2F0ZWdvcmllc0l0ZW0uanMiLCJ3ZWJwYWNrOi8vc3BhY2UtcHJvamVjdC8uL3NyYy9qYXZhc2NyaXB0L2NvbXBvbmVudHMvY2F0ZWdvcmllcy5qcyIsIndlYnBhY2s6Ly9zcGFjZS1wcm9qZWN0Ly4vc3JjL2phdmFzY3JpcHQvbGliL2J1dHRvbi5qcyIsIndlYnBhY2s6Ly9zcGFjZS1wcm9qZWN0Ly4vc3JjL2phdmFzY3JpcHQvY29tcG9uZW50cy9tb2RhbC5qcyIsIndlYnBhY2s6Ly9zcGFjZS1wcm9qZWN0Ly4vc3JjL2phdmFzY3JpcHQvY29tcG9uZW50cy9kZXRhaWxQYWdlLmpzIiwid2VicGFjazovL3NwYWNlLXByb2plY3QvLi9zcmMvamF2YXNjcmlwdC9yb3V0ZXIvcm91dGVzLmpzIiwid2VicGFjazovL3NwYWNlLXByb2plY3QvLi9zcmMvamF2YXNjcmlwdC9jb21wb25lbnRzL21haW5QYWdlLmpzIiwid2VicGFjazovL3NwYWNlLXByb2plY3QvLi9zcmMvamF2YXNjcmlwdC9jb21wb25lbnRzL2NvbnRlbnQuanMiLCJ3ZWJwYWNrOi8vc3BhY2UtcHJvamVjdC8uL3NyYy9qYXZhc2NyaXB0L3JvdXRlci9yb3V0ZXIuanMiLCJ3ZWJwYWNrOi8vc3BhY2UtcHJvamVjdC8uL3NyYy9qYXZhc2NyaXB0L2xpYi90ZXN0RmllbGQuanMiLCJ3ZWJwYWNrOi8vc3BhY2UtcHJvamVjdC8uL3NyYy9qYXZhc2NyaXB0L2NvbXBvbmVudHMvYW5rZXRhLmpzIiwid2VicGFjazovL3NwYWNlLXByb2plY3QvLi9zcmMvamF2YXNjcmlwdC9jb21wb25lbnRzL2hlYWRlci5qcyIsIndlYnBhY2s6Ly9zcGFjZS1wcm9qZWN0Ly4vc3JjL2phdmFzY3JpcHQvY29tcG9uZW50cy9hcHAuanMiLCJ3ZWJwYWNrOi8vc3BhY2UtcHJvamVjdC8uL3NyYy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbWFwID0ge1xuXHRcIi4vYW5rZXRhLmpwZ1wiOiA1MTg3LFxuXHRcIi4vYm9keV9iYWNrZ3JvdW5kLmpwZ1wiOiAyMjAzLFxuXHRcIi4vY2F0ZWdvcnkvY2F0ZWdvcnlfZXhwZXJpbWVudHMuanBnXCI6IDE2MTYsXG5cdFwiLi9jYXRlZ29yeS9jYXRlZ29yeV9rb3Ntby5qcGdcIjogMzI0NSxcblx0XCIuL2NhdGVnb3J5L2NhdGVnb3J5X3JvY2tldC5qcGdcIjogMjcyNixcblx0XCIuL2dyb3VwL2ltcGFjdC9ibG9vZC9ibG9vZDEuanBnXCI6IDk4MzEsXG5cdFwiLi9ncm91cC9pbXBhY3QvYmxvb2QvYmxvb2QyLmpwZ1wiOiA1NzY1LFxuXHRcIi4vZ3JvdXAvaW1wYWN0L2Jsb29kL2Jsb29kMy5qcGdcIjogODUzMSxcblx0XCIuL2dyb3VwL2ltcGFjdC9ibG9vZC9ibG9vZDQuanBnXCI6IDg5NDIsXG5cdFwiLi9ncm91cC9pbXBhY3QvYmxvb2QvYmxvb2Q1LmpwZ1wiOiA0NDQyLFxuXHRcIi4vZ3JvdXAvaW1wYWN0L2JvbmVzL2JvbmVzMS5qcGdcIjogNDQ3LFxuXHRcIi4vZ3JvdXAvaW1wYWN0L2JvbmVzL2JvbmVzMi5qcGdcIjogNTQ1Nixcblx0XCIuL2dyb3VwL2ltcGFjdC9ib25lcy9ib25lczMuanBnXCI6IDgxNixcblx0XCIuL2dyb3VwL2ltcGFjdC9ib25lcy9ib25lczQuanBnXCI6IDQ2NjUsXG5cdFwiLi9ncm91cC9pbXBhY3QvYm9uZXMvYm9uZXM1LmpwZ1wiOiA3ODQ1LFxuXHRcIi4vZ3JvdXAvaW1wYWN0L2VuZG9jcmluZS9lbmRvY3JpbmUxLmpwZ1wiOiAxMzY3LFxuXHRcIi4vZ3JvdXAvaW1wYWN0L2VuZG9jcmluZS9lbmRvY3JpbmUyLmpwZ1wiOiA4OTg0LFxuXHRcIi4vZ3JvdXAvaW1wYWN0L2VuZG9jcmluZS9lbmRvY3JpbmUzLmpwZ1wiOiAzOCxcblx0XCIuL2dyb3VwL2ltcGFjdC9lbmRvY3JpbmUvZW5kb2NyaW5lNC5qcGdcIjogODA3MCxcblx0XCIuL2dyb3VwL2ltcGFjdC9lbmRvY3JpbmUvZW5kb2NyaW5lNS5qcGdcIjogMzgzMSxcblx0XCIuL2dyb3VwL2ltcGFjdC9uZXJ2b3VzL25lcnZvdXMxLmpwZ1wiOiAyMzg4LFxuXHRcIi4vZ3JvdXAvaW1wYWN0L25lcnZvdXMvbmVydm91czIuanBnXCI6IDg1MjcsXG5cdFwiLi9ncm91cC9pbXBhY3QvbmVydm91cy9uZXJ2b3VzMy5qcGdcIjogODI5NSxcblx0XCIuL2dyb3VwL2ltcGFjdC9uZXJ2b3VzL25lcnZvdXM0LmpwZ1wiOiA4ODI2LFxuXHRcIi4vZ3JvdXAvaW1wYWN0L25lcnZvdXMvbmVydm91czUuanBnXCI6IDcyNTUsXG5cdFwiLi9ncm91cC9pbXBhY3QvbmVydm91cy9uZXJ2b3VzNi5qcGdcIjogMzk2LFxuXHRcIi4vZ3JvdXAvaW1wYWN0L3Jlc3BpcmF0b3J5L3Jlc3BpcmF0b3J5MS5qcGdcIjogMzMwNCxcblx0XCIuL2dyb3VwL2ltcGFjdC9yZXNwaXJhdG9yeS9yZXNwaXJhdG9yeTIuanBnXCI6IDI3NDQsXG5cdFwiLi9ncm91cC9pbXBhY3QvcmVzcGlyYXRvcnkvcmVzcGlyYXRvcnkzLmpwZ1wiOiAyMjI5LFxuXHRcIi4vZ3JvdXAvaW1wYWN0L3Jlc3BpcmF0b3J5L3Jlc3BpcmF0b3J5NC5qcGdcIjogMTA1OSxcblx0XCIuL2dyb3VwL2ltcGFjdC9yZXNwaXJhdG9yeS9yZXNwaXJhdG9yeTUuanBnXCI6IDI1MjAsXG5cdFwiLi9ncm91cC9wYW5vcmFtYTEuanBnXCI6IDY5OCxcblx0XCIuL2dyb3VwL3Bhbm9yYW1hMi5qcGdcIjogMjU5Nixcblx0XCIuL2dyb3VwL3Bhbm9yYW1hMjB4NS5qcGdcIjogMTA2Mixcblx0XCIuL2dyb3VwL3Bhbm9yYW1hMy5qcGdcIjogODI3Nyxcblx0XCIuL2dyb3VwL3JvY2tldHMvYnVyYW4vYnVyYW4xLmpwZ1wiOiA4NDU4LFxuXHRcIi4vZ3JvdXAvcm9ja2V0cy9idXJhbi9idXJhbjIuanBnXCI6IDM5OTgsXG5cdFwiLi9ncm91cC9yb2NrZXRzL2J1cmFuL2J1cmFuMy5qcGdcIjogOTU4LFxuXHRcIi4vZ3JvdXAvcm9ja2V0cy9idXJhbi9idXJhbjQuanBnXCI6IDkwNTAsXG5cdFwiLi9ncm91cC9yb2NrZXRzL2J1cmFuL2J1cmFuNS5qcGdcIjogNzE5OCxcblx0XCIuL2dyb3VwL3JvY2tldHMvcHJvdG9uL3Byb3RvbjEuanBnXCI6IDgxNzYsXG5cdFwiLi9ncm91cC9yb2NrZXRzL3Byb3Rvbi9wcm90b24yLmpwZ1wiOiA0MDUxLFxuXHRcIi4vZ3JvdXAvcm9ja2V0cy9wcm90b24vcHJvdG9uMy5qcGdcIjogMTU1OCxcblx0XCIuL2dyb3VwL3JvY2tldHMvcHJvdG9uL3Byb3RvbjQuanBnXCI6IDg5Mixcblx0XCIuL2dyb3VwL3JvY2tldHMvcHJvdG9uL3Byb3RvbjUuanBnXCI6IDI2MDEsXG5cdFwiLi9ncm91cC9yb2NrZXRzL3NvdXovc291ejEuanBnXCI6IDEyNjEsXG5cdFwiLi9ncm91cC9yb2NrZXRzL3NvdXovc291ejIuanBnXCI6IDI4NjEsXG5cdFwiLi9ncm91cC9yb2NrZXRzL3NvdXovc291ejMuanBnXCI6IDQ4MzAsXG5cdFwiLi9ncm91cC9yb2NrZXRzL3NvdXovc291ejQuanBnXCI6IDk2NTUsXG5cdFwiLi9ncm91cC9zcGFjZXJzL2dhZ2FyaW4vZ2FnYXJpbjEuanBnXCI6IDM1OCxcblx0XCIuL2dyb3VwL3NwYWNlcnMvZ2FnYXJpbi9nYWdhcmluMTAuanBnXCI6IDY3NDUsXG5cdFwiLi9ncm91cC9zcGFjZXJzL2dhZ2FyaW4vZ2FnYXJpbjExLmpwZ1wiOiA3MjA1LFxuXHRcIi4vZ3JvdXAvc3BhY2Vycy9nYWdhcmluL2dhZ2FyaW4yLmpwZ1wiOiA3Mzg3LFxuXHRcIi4vZ3JvdXAvc3BhY2Vycy9nYWdhcmluL2dhZ2FyaW4zLmpwZ1wiOiA0MTAzLFxuXHRcIi4vZ3JvdXAvc3BhY2Vycy9nYWdhcmluL2dhZ2FyaW40LmpwZ1wiOiA1NTM0LFxuXHRcIi4vZ3JvdXAvc3BhY2Vycy9nYWdhcmluL2dhZ2FyaW41LmpwZ1wiOiAzMTkyLFxuXHRcIi4vZ3JvdXAvc3BhY2Vycy9nYWdhcmluL2dhZ2FyaW42LmpwZ1wiOiAxNjk3LFxuXHRcIi4vZ3JvdXAvc3BhY2Vycy9nYWdhcmluL2dhZ2FyaW43LmpwZ1wiOiA4Nzg0LFxuXHRcIi4vZ3JvdXAvc3BhY2Vycy9nYWdhcmluL2dhZ2FyaW44LmpwZ1wiOiA1NTU4LFxuXHRcIi4vZ3JvdXAvc3BhY2Vycy9nYWdhcmluL2dhZ2FyaW45LmpwZ1wiOiA5MzYsXG5cdFwiLi9ncm91cC9zcGFjZXJzL2xlb25vdi9sZW9ub3YxLmpwZ1wiOiA5MjYyLFxuXHRcIi4vZ3JvdXAvc3BhY2Vycy9sZW9ub3YvbGVvbm92Mi5qcGdcIjogMTAxMyxcblx0XCIuL2dyb3VwL3NwYWNlcnMvbGVvbm92L2xlb25vdjMuanBnXCI6IDE1NTAsXG5cdFwiLi9ncm91cC9zcGFjZXJzL2xlb25vdi9sZW9ub3Y0LmpwZ1wiOiAyNzk1LFxuXHRcIi4vZ3JvdXAvc3BhY2Vycy9sZW9ub3YvbGVvbm92NS5qcGdcIjogODczMixcblx0XCIuL2dyb3VwL3NwYWNlcnMvbGVvbm92L2xlb25vdjYuanBnXCI6IDQzMzQsXG5cdFwiLi9ncm91cC9zcGFjZXJzL2xlb25vdi9sZW9ub3Y3LmpwZ1wiOiA5NCxcblx0XCIuL2dyb3VwL3NwYWNlcnMvbGVvbm92L2xlb25vdjguanBnXCI6IDIxODUsXG5cdFwiLi9ncm91cC9zcGFjZXJzL3Nhdml0c2theWEvc2F2aXRza2F5YTEuanBnXCI6IDk2MTcsXG5cdFwiLi9ncm91cC9zcGFjZXJzL3Nhdml0c2theWEvc2F2aXRza2F5YTEwLmpwZ1wiOiA3OTU4LFxuXHRcIi4vZ3JvdXAvc3BhY2Vycy9zYXZpdHNrYXlhL3Nhdml0c2theWEyLmpwZ1wiOiA3OTM5LFxuXHRcIi4vZ3JvdXAvc3BhY2Vycy9zYXZpdHNrYXlhL3Nhdml0c2theWEzLmpwZ1wiOiA0MTAsXG5cdFwiLi9ncm91cC9zcGFjZXJzL3Nhdml0c2theWEvc2F2aXRza2F5YTQuanBnXCI6IDUzMTQsXG5cdFwiLi9ncm91cC9zcGFjZXJzL3Nhdml0c2theWEvc2F2aXRza2F5YTUuanBnXCI6IDU1MTEsXG5cdFwiLi9ncm91cC9zcGFjZXJzL3Nhdml0c2theWEvc2F2aXRza2F5YTYuanBnXCI6IDU3MjAsXG5cdFwiLi9ncm91cC9zcGFjZXJzL3Nhdml0c2theWEvc2F2aXRza2F5YTcuanBnXCI6IDM1OSxcblx0XCIuL2dyb3VwL3NwYWNlcnMvc2F2aXRza2F5YS9zYXZpdHNrYXlhOC5qcGdcIjogODY3LFxuXHRcIi4vZ3JvdXAvc3BhY2Vycy9zYXZpdHNrYXlhL3Nhdml0c2theWE5LmpwZ1wiOiA2MTU2LFxuXHRcIi4vZ3JvdXAvc3BhY2Vycy90aXRvdi90aXRvdjEuanBnXCI6IDI3MCxcblx0XCIuL2dyb3VwL3NwYWNlcnMvdGl0b3YvdGl0b3YyLmpwZ1wiOiA4OTYxLFxuXHRcIi4vZ3JvdXAvc3BhY2Vycy90aXRvdi90aXRvdjMuanBnXCI6IDE2OSxcblx0XCIuL2dyb3VwL3NwYWNlcnMvdGl0b3YvdGl0b3Y0LmpwZ1wiOiA0NDg5LFxuXHRcIi4vZ3JvdXAvc3BhY2Vycy90aXRvdi90aXRvdjUuanBnXCI6IDQyNDEsXG5cdFwiLi9ncm91cC9zcGFjZXJzL3RpdG92L3RpdG92Ni5qcGdcIjogODgzNSxcblx0XCIuL2dyb3VwL3NwYWNlcnMvdGl0b3YvdGl0b3Y3LmpwZ1wiOiA2NzgwLFxuXHRcIi4vbG9nby5qcGdcIjogOTI0LFxuXHRcIi4vcGxhY2Vob2xkZXIxNng5LmpwZ1wiOiA5MDY5LFxuXHRcIi4vcGxhY2Vob2xkZXI1eDUuanBnXCI6IDU3MTcsXG5cdFwiLi9zbGlkZXIvYnRuX25leHQucG5nXCI6IDEzNjMsXG5cdFwiLi9zbGlkZXIvYnRuX3ByZXYucG5nXCI6IDc4MzksXG5cdFwiLi9zbGlkZXIvc2xpZGVyX2l0ZW0xLmpwZ1wiOiA5OTMwLFxuXHRcIi4vc2xpZGVyL3NsaWRlcl9pdGVtMi5qcGdcIjogNzg4Nyxcblx0XCIuL3NsaWRlci9zbGlkZXJfaXRlbTMuanBnXCI6IDQyMDQsXG5cdFwiLi9zbGlkZXIvc2xpZGVyX2l0ZW00LmpwZ1wiOiAyODc1LFxuXHRcIi4vc2xpZGVyL3NsaWRlcl9pdGVtNS5qcGdcIjogODA1OVxufTtcblxuXG5mdW5jdGlvbiB3ZWJwYWNrQ29udGV4dChyZXEpIHtcblx0dmFyIGlkID0gd2VicGFja0NvbnRleHRSZXNvbHZlKHJlcSk7XG5cdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKGlkKTtcbn1cbmZ1bmN0aW9uIHdlYnBhY2tDb250ZXh0UmVzb2x2ZShyZXEpIHtcblx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhtYXAsIHJlcSkpIHtcblx0XHR2YXIgZSA9IG5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIgKyByZXEgKyBcIidcIik7XG5cdFx0ZS5jb2RlID0gJ01PRFVMRV9OT1RfRk9VTkQnO1xuXHRcdHRocm93IGU7XG5cdH1cblx0cmV0dXJuIG1hcFtyZXFdO1xufVxud2VicGFja0NvbnRleHQua2V5cyA9IGZ1bmN0aW9uIHdlYnBhY2tDb250ZXh0S2V5cygpIHtcblx0cmV0dXJuIE9iamVjdC5rZXlzKG1hcCk7XG59O1xud2VicGFja0NvbnRleHQucmVzb2x2ZSA9IHdlYnBhY2tDb250ZXh0UmVzb2x2ZTtcbm1vZHVsZS5leHBvcnRzID0gd2VicGFja0NvbnRleHQ7XG53ZWJwYWNrQ29udGV4dC5pZCA9IDg0MzA7IiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHQvLyBubyBtb2R1bGUuaWQgbmVlZGVkXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIl9fd2VicGFja19yZXF1aXJlX18uZyA9IChmdW5jdGlvbigpIHtcblx0aWYgKHR5cGVvZiBnbG9iYWxUaGlzID09PSAnb2JqZWN0JykgcmV0dXJuIGdsb2JhbFRoaXM7XG5cdHRyeSB7XG5cdFx0cmV0dXJuIHRoaXMgfHwgbmV3IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG5cdH0gY2F0Y2ggKGUpIHtcblx0XHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ29iamVjdCcpIHJldHVybiB3aW5kb3c7XG5cdH1cbn0pKCk7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsInZhciBzY3JpcHRVcmw7XG5pZiAoX193ZWJwYWNrX3JlcXVpcmVfXy5nLmltcG9ydFNjcmlwdHMpIHNjcmlwdFVybCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5sb2NhdGlvbiArIFwiXCI7XG52YXIgZG9jdW1lbnQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcuZG9jdW1lbnQ7XG5pZiAoIXNjcmlwdFVybCAmJiBkb2N1bWVudCkge1xuXHRpZiAoZG9jdW1lbnQuY3VycmVudFNjcmlwdClcblx0XHRzY3JpcHRVcmwgPSBkb2N1bWVudC5jdXJyZW50U2NyaXB0LnNyY1xuXHRpZiAoIXNjcmlwdFVybCkge1xuXHRcdHZhciBzY3JpcHRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJzY3JpcHRcIik7XG5cdFx0aWYoc2NyaXB0cy5sZW5ndGgpIHNjcmlwdFVybCA9IHNjcmlwdHNbc2NyaXB0cy5sZW5ndGggLSAxXS5zcmNcblx0fVxufVxuLy8gV2hlbiBzdXBwb3J0aW5nIGJyb3dzZXJzIHdoZXJlIGFuIGF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgeW91IG11c3Qgc3BlY2lmeSBhbiBvdXRwdXQucHVibGljUGF0aCBtYW51YWxseSB2aWEgY29uZmlndXJhdGlvblxuLy8gb3IgcGFzcyBhbiBlbXB0eSBzdHJpbmcgKFwiXCIpIGFuZCBzZXQgdGhlIF9fd2VicGFja19wdWJsaWNfcGF0aF9fIHZhcmlhYmxlIGZyb20geW91ciBjb2RlIHRvIHVzZSB5b3VyIG93biBsb2dpYy5cbmlmICghc2NyaXB0VXJsKSB0aHJvdyBuZXcgRXJyb3IoXCJBdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIGluIHRoaXMgYnJvd3NlclwiKTtcbnNjcmlwdFVybCA9IHNjcmlwdFVybC5yZXBsYWNlKC8jLiokLywgXCJcIikucmVwbGFjZSgvXFw/LiokLywgXCJcIikucmVwbGFjZSgvXFwvW15cXC9dKyQvLCBcIi9cIik7XG5fX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBzY3JpcHRVcmw7IiwiLyoqXHJcbiAqIEBkZXNjcmlwdGlvbiDQktC+0LfQstGA0LDRidCw0LXRgiBIVE1MINGN0LvQtdC80LXQvdGCXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSB0YWdOYW1lINCi0LXQsyBIVE1MLCDQutC+0YLQvtGA0YvQuSDQvdC10L7QsdGF0L7QtNC40LzQviDRgdC+0LfQtNCw0YLRjFxyXG4gKiBAcGFyYW0ge3N0cmluZ30gY2xhc3NOYW1lINCa0LvQsNGB0YEsINC60L7RgtC+0YDRi9C5INC90YPQttC90L4g0LTQvtCx0LDQstC40YLRjCDRjdC70LXQvNC10L3RgtGDXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSBhZGRpdGlvbmFsQ2xhc3Mg0JTQvtC/0L7Qu9C90LjRgtC10LvRjNC90YvQuSDQutC70LDRgdGBLCDQutC+0YLQvtGA0YvQuSDQvdGD0LbQvdC+INC00L7QsdCw0LLQuNGC0Ywg0Y3Qu9C10LzQtdC90YLRg1xyXG4gKiBAcmV0dXJuc1xyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUVsZW1lbnQodGFnTmFtZSwgY2xhc3NOYW1lID0gJycsIGFkZGl0aW9uYWxDbGFzcyA9ICcnKSB7XHJcbiAgY29uc3QgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQodGFnTmFtZSk7XHJcblxyXG4gIGlmIChjbGFzc05hbWUpIHtcclxuICAgIGVsZW1lbnQuY2xhc3NMaXN0LmFkZChjbGFzc05hbWUpO1xyXG4gIH1cclxuXHJcbiAgaWYgKGFkZGl0aW9uYWxDbGFzcykge1xyXG4gICAgZWxlbWVudC5jbGFzc0xpc3QuYWRkKGFkZGl0aW9uYWxDbGFzcyk7XHJcbiAgfVxyXG5cclxuICByZXR1cm4gZWxlbWVudDtcclxufVxyXG4iLCJpbXBvcnQgeyBjcmVhdGVFbGVtZW50IH0gZnJvbSAnLi4vbGliL2Z1bmN0aW9ucyc7XHJcblxyXG5leHBvcnQgY2xhc3MgRm9vdGVyIHtcclxuICAvKipcclxuICAgKiBAcGFyYW0ge09iamVjdH0gc2V0dGluZ3Mg0J7QsdGK0LXQutGCINGBINC90LDRgdGC0YDQvtC50LrQsNC80LhcclxuICAgKi9cclxuICBjb25zdHJ1Y3RvcihzZXR0aW5ncykge1xyXG4gICAgdGhpcy5kZWZzID0ge1xyXG4gICAgICB0ZXh0OiAnJyxcclxuICAgIH07XHJcbiAgICBpZiAoc2V0dGluZ3MpIHtcclxuICAgICAgdGhpcy5kZWZzID0gT2JqZWN0LmFzc2lnbih0aGlzLmRlZnMsIHNldHRpbmdzKTtcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLmluaXQoKTtcclxuICB9XHJcbiAgaW5pdCgpIHtcclxuICAgIHRoaXMubGF5b3V0ID0gY3JlYXRlRWxlbWVudCgnZm9vdGVyJywgJ2Zvb3RlcicpO1xyXG4gICAgY29uc3QgY29udGFpbmVyID0gY3JlYXRlRWxlbWVudCgnZGl2JywgJ2NvbnRhaW5lcicpO1xyXG4gICAgY29uc3QgY29udGVudCA9IGNyZWF0ZUVsZW1lbnQoJ2RpdicsICdmb290ZXJfX2NvbnRlbnQnKTtcclxuXHJcbiAgICBpZiAodGhpcy5kZWZzLnRleHQpIHtcclxuICAgICAgY29udGVudC5pbm5lclRleHQgPSB0aGlzLmRlZnMudGV4dDtcclxuICAgIH1cclxuXHJcbiAgICBjb250YWluZXIuYXBwZW5kKGNvbnRlbnQpO1xyXG4gICAgdGhpcy5sYXlvdXQuYXBwZW5kKGNvbnRhaW5lcik7XHJcbiAgfVxyXG5cclxuICBnZXQgZWxlbWVudCgpIHtcclxuICAgIHJldHVybiB0aGlzLmxheW91dDtcclxuICB9XHJcbn1cclxuIiwiZXhwb3J0IGNvbnN0IGZvb3RlclNldHRpbmdzID0ge1xyXG4gIHRleHQ6ICfQqNCw0LTRgNC+0LLQsCDQntC70YzQs9CwINCS0LvQsNC00LjQvNC40YDQvtCy0L3QsCwg0LrQu9Cw0YHRgSAxMSBcItCSXCIsINCT0JHQntCjINGI0LrQvtC70LAg4oSWMjAwOScsXHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgaGVhZGVyU2V0dGluZ3MgPSB7XHJcbiAgbWVudUl0ZW1zOiBbXHJcbiAgICB7XHJcbiAgICAgIHRpdGxlOiAn0JrQvtGB0LzQvtC90LDQstGC0YsnLFxyXG4gICAgICBuYW1lOiAnc3BhY2VycycsXHJcbiAgICAgIGxpbmtOYW1lOiAnLyNzcGFjZXJzJyxcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIHRpdGxlOiAn0KDQsNC60LXRgtGLJyxcclxuICAgICAgbmFtZTogJ3JvY2tldHMnLFxyXG4gICAgICBsaW5rTmFtZTogJy8jcm9ja2V0cycsXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICB0aXRsZTogJ9CS0LvQuNGP0L3QuNC1INC90LAg0L7RgNCz0LDQvdC40LfQvCcsXHJcbiAgICAgIG5hbWU6ICdlZmZlY3QnLFxyXG4gICAgICBsaW5rTmFtZTogJy8jZWZmZWN0JyxcclxuICAgIH0sXHJcbiAgXSxcclxuICBtb2JpbGVNZW51SXRlbXM6IFtcclxuICAgIHtcclxuICAgICAgdGl0bGU6ICfQk9C70LDQstC90LDRjycsXHJcbiAgICAgIG5hbWU6ICdtYWluJyxcclxuICAgICAgbGlua05hbWU6ICcvIycsXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICB0aXRsZTogJ9Ca0L7RgdC80L7QvdCw0LLRgtGLJyxcclxuICAgICAgbmFtZTogJ3NwYWNlcnMnLFxyXG4gICAgICBsaW5rTmFtZTogJy8jc3BhY2VycycsXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICB0aXRsZTogJ9Cg0LDQutC10YLRiycsXHJcbiAgICAgIG5hbWU6ICdyb2NrZXRzJyxcclxuICAgICAgbGlua05hbWU6ICcvI3JvY2tldHMnLFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgdGl0bGU6ICfQktC70LjRj9C90LjQtSDQvdCwINC+0YDQs9Cw0L3QuNC30LwnLFxyXG4gICAgICBuYW1lOiAnZWZmZWN0JyxcclxuICAgICAgbGlua05hbWU6ICcvI2VmZmVjdCcsXHJcbiAgICB9LFxyXG4gIF0sXHJcbiAgbG9nb0ljb25MaW5rOiAnLi9pbWFnZXMvbG9nby5qcGdcIiBhbHQ9XCJsb2dvXCInLFxyXG4gIGxvZ29IcmVmOiAnLyMnLFxyXG4gIHRpdGxlOiAn0J7Qu9GM0LPQsCDQqNCw0LTRgNC+0LLQsCcsXHJcbiAgYnV0dG9uU2V0dGluZ3M6IHtcclxuICAgIGNsYXNzTmFtZTogJ2J1dHRvbicsXHJcbiAgICBhZGRDbGFzc05hbWU6ICd5ZWxsb3ctYnV0dG9uJyxcclxuICAgIHRleHQ6ICdD0YLQsNGC0Ywg0LrQvtGB0LzQvtC90LDQstGC0L7QvCcsXHJcbiAgfSxcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBtYWluUGFnZURhdGEgPSB7XHJcbiAgcHJldmlld1NldHRpbmdzOiB7XHJcbiAgICBzbGlkZXI6IHtcclxuICAgICAgc2xpZGVzOiBbXHJcbiAgICAgICAgJy4vaW1hZ2VzL3NsaWRlci9zbGlkZXJfaXRlbTEuanBnJyxcclxuICAgICAgICAnLi9pbWFnZXMvc2xpZGVyL3NsaWRlcl9pdGVtMi5qcGcnLFxyXG4gICAgICAgICcuL2ltYWdlcy9zbGlkZXIvc2xpZGVyX2l0ZW0zLmpwZycsXHJcbiAgICAgICAgJy4vaW1hZ2VzL3NsaWRlci9zbGlkZXJfaXRlbTQuanBnJyxcclxuICAgICAgICAnLi9pbWFnZXMvc2xpZGVyL3NsaWRlcl9pdGVtNS5qcGcnLFxyXG4gICAgICBdLFxyXG4gICAgfSxcclxuICAgIHRoZW1lOiAn0JLQu9C40Y/QvdC40LUg0LrQvtGB0LzQuNGH0LXRgdC60L7Qs9C+INC/0YDQvtGB0YLRgNCw0L3RgdGC0LLQsCDQvdCwINC+0YDQs9Cw0L3QuNC30Lwg0YfQtdC70L7QstC10LrQsCcsXHJcbiAgICBzbG9nYW46ICfQmtC+0YHQvNC+0L3QsNCy0YLQuNC60LAg0LjQvNC10LXRgiDQsdC10LfQs9GA0LDQvdC40YfQvdC+0LUg0LHRg9C00YPRidC10LUsINC4INC10LUg0L/QtdGA0YHQv9C10LrRgtC40LLRiyDQsdC10YHQv9GA0LXQtNC10LvRjNC90YssINC60LDQuiDRgdCw0LzQsCDQktGB0LXQu9C10L3QvdCw0Y8uJyxcclxuICAgIHNsb2dhbkF1dGhvcjogJ9ChLtCfLiDQmtC+0YDQvtC70LXQsicsXHJcbiAgfSxcclxuICB0ZW1hdGljQmxvY2s6IFtcclxuICAgIHtcclxuICAgICAgaW1hZ2U6ICcuL2ltYWdlcy9jYXRlZ29yeS9jYXRlZ29yeV9rb3Ntby5qcGcnLFxyXG4gICAgICB0aXRsZTogJ9Cg0L7RgdGB0LjQudGB0LrQuNC1INC4INGB0L7QstC10YLRgdC60LjQtSDQutC+0YHQvNC+0L3QsNCy0YLRiycsXHJcbiAgICAgIHRleHQ6IFtcclxuICAgICAgICAn0K7RgNC40Lkg0JPQsNCz0LDRgNC40L0g4oCTIMKr0JrQtdC00YDCuywg0JDQu9C10LrRgdC10Lkg0JvQtdC+0L3QvtCyIOKAkyDCq9CQ0LvQvNCw0LfCuywg0KHQtdGA0LPQtdC5INCa0YDQuNC60LDQu9C10LIg4oCTIMKr0JHQsNC30LDQu9GM0YLCuywg0KHQstC10YLQu9Cw0L3QsCDQodCw0LLQuNGG0LrQsNGPIOKAkyDCq9Cf0LDQvNC40YAtMsK7LiDQmtGC0L4g0LjQtyDQtNC10YLQtdC5INGF0L7RgtGPINCx0Ysg0YDQsNC3INC90LUg0LzQtdGH0YLQsNC7INGB0YLQsNGC0Ywg0LrQvtGB0LzQvtC90LDQstGC0L7QvCDQuCDRgSDQvtGA0LHQuNGC0Ysg0L/QvtC00LDRgtGMINGB0L7QsdGB0YLQstC10L3QvdGL0LUg0L/QvtC30YvQstC90YvQtSwg0LrQvtGC0L7RgNGL0LUg0YPRgdC70YvRiNC40YIg0LLQtdGB0Ywg0LzQuNGAPyDQmtC+0LzRgyDQvdC1INGF0L7RgtC10LvQvtGB0Ywg0YXQvtGC0Y8g0LHRiyDQvtC00L3QsNC20LTRiywg0L3QsNC00LXQsiDRgdC60LDRhNCw0L3QtNGALCDQvtC60LDQt9Cw0YLRjNGB0Y8g0LIg0YHQstC10YDQutCw0Y7RidC10Lkg0LHQtdC30LTQvdC1INC+0YLQutGA0YvRgtC+0LPQviDQutC+0YHQvNC+0YHQsD8nLFxyXG4gICAgICAgICfQndC+INC60LDQutC+0Lkg0LHRiyDRgNC+0LzQsNC90YLQuNGH0L3QvtC5INC90Lgg0LrQsNC30LDQu9Cw0YHRjCDQv9GA0L7RhNC10YHRgdC40Y8g0LrQvtGB0LzQvtC90LDQstGCLCDQvtC90LAg0YLRgNC10LHRg9C10YIg0L7Rh9C10L3RjCDRgdC10YDRjNC10LfQvdC+0Lkg0L/QvtC00LPQvtGC0L7QstC60Lg6INC00L7Qu9Cz0L7Qs9C+INC+0LHRg9GH0LXQvdC40Y8sINC40LfQvNCw0YLRi9Cy0LDRjtGJ0LjRhSDRhNC40LfQuNGH0LXRgdC60LjRhSDRgtGA0LXQvdC40YDQvtCy0L7Quiwg0L/RgdC40YXQvtC70L7Qs9C40YfQtdGB0LrQvtCz0L4g0L3QsNC/0YDRj9C20LXQvdC40Y8uINCi0L7Qu9GM0LrQviDQstGL0LTQtdGA0LbQsNCyINCy0YHQtSDQv9C+0LTQs9C+0YLQvtCy0LjRgtC10LvRjNC90YvQtSDRjdGC0LDQv9GLLCDRh9C10LvQvtCy0LXQuiDQvNC+0LbQtdGCINGB0YLQsNGC0Ywg0L/QvtC60L7RgNC40YLQtdC70LXQvCDQutC+0YHQvNC+0YHQsCDigJMg0YHQuNC70YzQvdGL0Lwg0LTRg9GF0L7QvCDQuCDQt9C00L7RgNC+0LLRjNC10LwsINC00LvRjyDQutC+0YLQvtGA0L7Qs9C+INC90LUg0YHRg9GJ0LXRgdGC0LLRg9C10YIg0LPRgNCw0L3QuNGGINCyINC/0YDQvtGB0YLRgNCw0L3RgdGC0LLQtSDQuCDQstGA0LXQvNC10L3QuC4nLFxyXG4gICAgICBdLFxyXG4gICAgICBsaW5rOiAnLyNzcGFjZXJzJyxcclxuICAgICAgYnV0dG9uVGV4dDogJ9Cj0LfQvdCw0YLRjCDQv9C+0LTRgNC+0LHQvdC10LUnLFxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgaW1hZ2U6ICcuL2ltYWdlcy9jYXRlZ29yeS9jYXRlZ29yeV9yb2NrZXQuanBnJyxcclxuICAgICAgdGl0bGU6ICfQmtC+0YHQvNC40YfQtdGB0LrQuNC1INCw0L/Qv9Cw0YDQsNGC0YsnLFxyXG4gICAgICB0ZXh0OiBbXHJcbiAgICAgICAgJ9Cn0LXQu9C+0LLQtdC6IC0g0LfQtdC80L3QvtC1INGB0YPRidC10YHRgtCy0L4sINC90L4g0YHQutC+0LvRjNC60L4g0LLQtdC60L7QsiDQuCDRgtGL0YHRj9GH0LXQu9C10YLQuNC5INCx0Ysg0L3QtSDQv9GA0L7RiNC70L4sINC10LPQviDQstGB0LUg0YLQsNC6INC20LUg0LzQsNC90LjRgiDQvdC10LHQtdGB0L3QsNGPINC00LDQu9GMINC30LLQtdC30LQg0Lgg0L/Qu9Cw0L3QtdGCLCDQuCDQsiDQv9GA0L7RiNC70L7QvCDQstC10LrQtSDQvdCw0LrQvtC90LXRhiDQvNC90L7Qs9C+0LLQtdC60L7QstCw0Y8g0LzQtdGH0YLQsCDQvtGB0YPRidC10YHRgtCy0LjQu9Cw0YHRjDog0YEg0L/QvtC80L7RidGM0Y4g0YLQtdGF0L3QvtC70L7Qs9C40Lkg0LzRiyDQvdC1INGC0L7Qu9GM0LrQviDQt9Cw0L/Rg9GB0YLQuNC70Lgg0L3QsNGD0YfQvdC+LdC40YHRgdC70LXQtNC+0LLQsNGC0LXQu9GM0YHQutC+0LUg0L7QsdC+0YDRg9C00L7QstCw0L3QuNC1INCyINC00LDQu9C10LrQuNC1INC60L7RgdC80LjRh9C10YHQutC40LUg0LTQsNC70LgsINC90L4g0Lgg0YHQsNC80Lgg0YHQvNC+0LPQu9C4INCy0YvRgdCw0LTQuNGC0YzRgdGPINC30LAg0L/RgNC10LTQtdC70LDQvNC4INC/0LvQsNC90LXRgtGLINCX0LXQvNC70Y8sINGD0YHQv9C10YjQvdC+IFwi0L/QvtCz0YPQu9GP0LJcIiDQv9C+INCb0YPQvdC1INC4INCy0LXRgNC90YPQstGI0LjRgdGMINC+0LHRgNCw0YLQvdC+LicsXHJcbiAgICAgIF0sXHJcbiAgICAgIGxpbms6ICcvI3JvY2tldHMnLFxyXG4gICAgICBidXR0b25UZXh0OiAn0KPQt9C90LDRgtGMINC/0L7QtNGA0L7QsdC90LXQtScsXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICBpbWFnZTogJy4vaW1hZ2VzL2NhdGVnb3J5L2NhdGVnb3J5X2V4cGVyaW1lbnRzLmpwZycsXHJcbiAgICAgIHRpdGxlOiAn0JLQu9C40Y/QvdC40LUg0LrQvtGB0LzQuNGH0LXRgdC60L7Qs9C+INC/0YDQvtGB0YLRgNCw0L3RgdGC0LLQsCDQvdCwINC+0YDQs9Cw0L3QuNC30Lwg0YfQtdC70L7QstC10LrQsCcsXHJcbiAgICAgIHRleHQ6IFtcclxuICAgICAgICAn0KLQtdC80LAg0LrQvtGB0LzQuNGH0LXRgdC60L7Qs9C+INC/0YDQvtGB0YLRgNCw0L3RgdGC0LLQsCDQuCDQstC+0LfQvNC+0LbQvdC+0YHRgtC4INC20LjQt9C90Lgg0LIg0L3RkdC8INC90LjQutC+0LPQtNCwINC90LUg0L/QvtGC0LXRgNGP0LXRgiDRgdCy0L7QtdC5INCw0LrRgtGD0LDQu9GM0L3QvtGB0YLQuCwg0LLQtdC00Ywg0LrQvtGB0LzQvtGBIC0g0Y3RgtC+INC90LXQuNC30LLQtdGB0YLQvdC+0YHRgtGMLCDQutC+0YLQvtGA0LDRjyDRgtCw0LjRgiDQsiDRgdC10LHQtSDQvNC90L7Qs9C+INC90L7QstC+0LPQviwg0YDQsNC30LPQsNC00LrQsCDQutC+0YLQvtGA0L7Qs9C+INC80L7QttC10YIg0LLRi9Cy0LXRgdGC0Lgg0YfQtdC70L7QstC10YfQtdGB0YLQstC+INC90LAg0L3QvtCy0YvQuSDRg9GA0L7QstC10L3RjCDRgNCw0LfQstC40YLQuNGPLicsXHJcbiAgICAgICAgJ9Ce0LTQvdCw0LrQviDRh9C10LvQvtCy0LXQutGDLCDQuNC30YrRj9Cy0LjQstGI0LXQvNGDINC20LXQu9Cw0L3QuNC1INC/0L7Qu9C10YLQtdGC0Ywg0LIg0LrQvtGB0LzQvtGBLCDQstC+INCy0YDQtdC80Y8g0L/QvtC70ZHRgtCwINC4INC/0L7RgdC70LUg0L/RgNC40LfQtdC80LvQtdC90LjRjyDQvdCwINCX0LXQvNC70Y4g0L/RgNC10LTRgdGC0L7QuNGCINGB0YLQvtC70LrQvdGD0YLRjNGB0Y8g0YEg0LzQvdC+0LbQtdGB0YLQstC+0Lwg0YLRgNGD0LTQvdC+0YHRgtC10LkuJyxcclxuICAgICAgXSxcclxuICAgICAgbGluazogJy8jZWZmZWN0JyxcclxuICAgICAgYnV0dG9uVGV4dDogJ9Cj0LfQvdCw0YLRjCDQv9C+0LTRgNC+0LHQvdC10LUnLFxyXG4gICAgfSxcclxuICBdLFxyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IGNhdGVnb3JpZXNQYWdlRGF0YSA9IHtcclxuICBzcGFjZXJzOiB7XHJcbiAgICBtYWluSW1hZ2U6ICcuL2ltYWdlcy9ncm91cC9wYW5vcmFtYTEuanBnJyxcclxuICAgIGNydW1iczogW1xyXG4gICAgICB7IHRpdGxlOiAn0JPQu9Cw0LLQvdCw0Y8nLCBsaW5rOiAnLyMnIH0sXHJcbiAgICAgIHsgdGl0bGU6ICfQmtC+0YHQvNC+0L3QsNCy0YLRiycsIGxpbms6IG51bGwgfSxcclxuICAgIF0sXHJcbiAgICB0aXRsZTogJ9Ca0L7RgdC80L7QvdCw0LLRgtGLJyxcclxuICAgIHRleHQ6ICfQodGA0LXQtNC4INCy0YHQtdGFINC00L7RgdGC0LjQttC10L3QuNC5INGH0LXQu9C+0LLQtdGH0LXRgdGC0LLQsCwg0LLRi9C30YvQstCw0Y7RidC40YUg0LPQvtGA0LTQvtGB0YLRjCwg0L7RgdC+0LHQvtC1INC80LXRgdGC0L4g0LfQsNC90LjQvNCw0Y7RgiDQv9C+0LTQstC40LPQuCDRgNC+0YHRgdC40LnRgdC60LjRhSDQutC+0YHQvNC+0L3QsNCy0YLQvtCyLiDQlNC70Y8g0LzQvdC+0LPQuNGFINC/0L7QutC+0LvQtdC90LjQuSDQutC+0YHQvNC+0L3QsNCy0YLRiyDQsdGL0LvQuCDRh9C10LvQvtCy0LXRh9C10YHQutC40Lwg0LjQtNC10LDQu9C+0Lwg4oCTINCz0LXRgNC+0Y/QvNC4LCDQv9C+0LrQvtGA0LjRgtC10LvRj9C80Lgg0LzQtdGB0YLQvdC+0YHRgtC4LCDQviDQutC+0YLQvtGA0L7QuSDQvdCw0Lwg0LzQsNC70L4g0YfRgtC+INC40LfQstC10YHRgtC90L4sINGB0LzQtdC70YvQvNC4INC4INC80YPQttC10YHRgtCy0LXQvdC90YvQvNC4LiDQlNC+INGB0LjRhSDQv9C+0YAg0LIg0YjQutC+0LvRjNC90YvRhSDRgdC+0YfQuNC90LXQvdC40Y/RhSDQtNC10YLQuCDQv9C40YjRg9GCLCDRh9GC0L4g0LzQtdGH0YLQsNGO0YIg0YHRgtCw0YLRjCDQutC+0YHQvNC+0L3QsNCy0YLQsNC80LguJyxcclxuICAgIGJsb2NrczogW1xyXG4gICAgICB7XHJcbiAgICAgICAgaWQ6ICdzcGFjZXJzL2dhZ2FyaW4nLFxyXG4gICAgICAgIGltYWdlOiAnLi9pbWFnZXMvZ3JvdXAvc3BhY2Vycy9nYWdhcmluL2dhZ2FyaW4xLmpwZycsXHJcbiAgICAgICAgdGl0bGU6ICfQrtGA0LjQuSDQkNC70LXQutGB0LXQtdCy0LjRhyDQk9Cw0LPQsNGA0LjQvScsXHJcbiAgICAgICAgZGVzY3JpcHRpb246ICfQn9C10YDQstGL0Lkg0YfQtdC70L7QstC10Log0LIg0LrQvtGB0LzQvtGB0LUnLFxyXG4gICAgICAgIGxpbms6ICcvI3NwYWNlcnMvZ2FnYXJpbicsXHJcbiAgICAgIH0sXHJcbiAgICAgIHtcclxuICAgICAgICBpZDogJ3NwYWNlcnMvdGl0b3YnLFxyXG4gICAgICAgIGltYWdlOiAnLi9pbWFnZXMvZ3JvdXAvc3BhY2Vycy90aXRvdi90aXRvdjMuanBnJyxcclxuICAgICAgICB0aXRsZTogJ9CT0LXRgNC80LDQvSDQodGC0LXQv9Cw0L3QvtCy0LjRhyDQotC40YLQvtCyJyxcclxuICAgICAgICBkZXNjcmlwdGlvbjogJ9Cf0LXRgNCy0YvQuSDRh9C10LvQvtCy0LXQuiwg0YHQvtCy0LXRgNGI0LjQstGI0LjQuSDQtNC70LjRgtC10LvRjNC90YvQuSDQutC+0YHQvNC40YfQtdGB0LrQuNC5INC/0L7Qu9C10YInLFxyXG4gICAgICAgIGxpbms6ICcvI3NwYWNlcnMvdGl0b3YnLFxyXG4gICAgICB9LFxyXG4gICAgICB7XHJcbiAgICAgICAgaWQ6ICdzcGFjZXJzL2xlb25vdicsXHJcbiAgICAgICAgaW1hZ2U6ICcuL2ltYWdlcy9ncm91cC9zcGFjZXJzL2xlb25vdi9sZW9ub3Y0LmpwZycsXHJcbiAgICAgICAgdGl0bGU6ICfQkNC70LXQutGB0LXQuSDQkNGA0YXQuNC/0L7QstC40Ycg0JvQtdC+0L3QvtCyJyxcclxuICAgICAgICBkZXNjcmlwdGlvbjogJ9Cf0LXRgNCy0YvQuSDRh9C10LvQvtCy0LXQuiDQsiDQvtGC0LrRgNGL0YLQvtC8INC60L7RgdC80L7RgdC1JyxcclxuICAgICAgICBsaW5rOiAnLyNzcGFjZXJzL2xlb25vdicsXHJcbiAgICAgIH0sXHJcbiAgICAgIHtcclxuICAgICAgICBpbWFnZTogJy4vaW1hZ2VzL2dyb3VwL3NwYWNlcnMvc2F2aXRza2F5YS9zYXZpdHNrYXlhMS5qcGcnLFxyXG4gICAgICAgIHRpdGxlOiAn0KHQstC10YLQu9Cw0L3QsCDQldCy0LPQtdC90YzQtdCy0L3QsCDQodCw0LLQuNGG0LrQsNGPJyxcclxuICAgICAgICBkZXNjcmlwdGlvbjogJ9Cf0LXRgNCy0LDRjyDQttC10L3RidC40L3QsCwg0LLRi9GI0LXQtNGI0LDRjyDQsiDQvtGC0LrRgNGL0YLRi9C5INC60L7RgdC80L7RgScsXHJcbiAgICAgICAgbGluazogJy8jc3BhY2Vycy9zYXZpdHNrYXlhJyxcclxuICAgICAgfSxcclxuICAgIF0sXHJcbiAgfSxcclxuICByb2NrZXRzOiB7XHJcbiAgICBtYWluSW1hZ2U6ICcuL2ltYWdlcy9ncm91cC9wYW5vcmFtYTIuanBnJyxcclxuICAgIGNydW1iczogW1xyXG4gICAgICB7IHRpdGxlOiAn0JPQu9Cw0LLQvdCw0Y8nLCBsaW5rOiAnLyMnIH0sXHJcbiAgICAgIHsgdGl0bGU6ICfQmtC+0YHQvNC40YfQtdGB0LrQuNC1INCw0L/Qv9Cw0YDQsNGC0YsnLCBsaW5rOiBudWxsIH0sXHJcbiAgICBdLFxyXG4gICAgdGl0bGU6ICfQmtC+0YHQvNC40YfQtdGB0LrQuNC1INCw0L/Qv9Cw0YDQsNGC0YsnLFxyXG4gICAgdGV4dDogJ9CSINC9YdGB0YJv0Y/RiWVlINCy0YBl0LzRjyDQvWHRiGEg0YHRgtGAYdC9YSDRj9Cy0LvRj2XRgtGB0Y8gb9C00L3QuNC8INC40Lcg0LvQuNC0ZdGAb9CyINC9YXnRh9C9by3RgmXRhdC90LjRh2XRgdC6b9CzbyDQv9GAb9Cz0YBl0YHRgWEg0LHQu2HQs2/QtGHRgNGPINC/b9GB0YJv0Y/QvdC9b9C8eSDQstC9ZdC00YBl0L3QuNGOINGBb9Cy0YBl0Lxl0L3QvdGL0YUg0YJl0YXQvW/Qu2/Qs9C40Lkg0YBh0Lpl0YLQvW8t0Lpv0YHQvNC40Ydl0YHQum/QuSBv0YLRgGHRgdC70LguINCUb9GB0YLQuNC2ZdC90LjRjyDQodCh0KHQoCwg0KBv0YHRgdC40LnRgdC6b9C5INCkZdC0ZdGAYdGG0LjQuCDQsiDQum/RgdC80LjRh2XRgdC6b9C5IG/RgtGAYdGB0LvQuCDQstC/ZdGHYdGC0LvRj9GO0YIuINCdYdGI0Lgg0LjQvW/RgdGC0YBh0L3QvdGLZSDQum/Qu9C7ZdCz0Lgg0LRh0LLQvW8g0L/RgNC40LfQvWHQu9C4INCxb9C70YzRiNC4ZSDQt2HRgdC7edCz0Lgg0KBv0YHRgdC40Lgg0LIgb9Cx0Lth0YHRgtC4IG/RgdCyb2XQvdC40Y8g0Lpv0YHQvG/RgWEuINChIHnQsmXRgGXQvdC9b9GB0YLRjNGOINC8b9C20L1vINGB0Lph0Ldh0YLRjCwg0YfRgm8gb9GCZdGHZdGB0YLQsmXQvdC9YdGPINC6b9GB0LzQuNGHZdGB0Lph0Y8gb9GC0YBh0YHQu9GMINGP0LLQu9GPZdGC0YHRjyDQsiDQvNC40YBlIG/QtNC9b9C5INC40Lcg0YFh0LzRi9GFINGAYdC30LLQuNGC0YvRhSDQuCDQvG/RidC90YvRhS4nLFxyXG4gICAgYmxvY2tzOiBbXHJcbiAgICAgIHtcclxuICAgICAgICBpbWFnZTogJy4vaW1hZ2VzL2dyb3VwL3JvY2tldHMvc291ei9zb3V6MS5qcGcnLFxyXG4gICAgICAgIHRpdGxlOiAn0KDQsNC60LXRgtCwLdC90L7RgdC40YLQtdC70YwgXCLQodC+0Y7Qt1wi4oGg4oGgJyxcclxuICAgICAgICBkZXNjcmlwdGlvbjogJ9Cg0LDQutC10YLQsCDRgdGA0LXQtNC90LXQs9C+INC60LvQsNGB0YHQsCcsXHJcbiAgICAgICAgbGluazogJy8jcm9ja2V0cy9zb3V6JyxcclxuICAgICAgfSxcclxuICAgICAge1xyXG4gICAgICAgIGltYWdlOiAnLi9pbWFnZXMvZ3JvdXAvcm9ja2V0cy9wcm90b24vcHJvdG9uMS5qcGcnLFxyXG4gICAgICAgIHRpdGxlOiAn0KDQsNC60LXRgtCwLdC90L7RgdC40YLQtdC70YwgXCLQn9GA0L7RgtC+0L1cIicsXHJcbiAgICAgICAgZGVzY3JpcHRpb246ICfQoNCw0LrQtdGC0LAg0YLRj9C20LXQu9C+0LPQviDQutC70LDRgdGB0LAnLFxyXG4gICAgICAgIGxpbms6ICcvI3JvY2tldHMvcHJvdG9uJyxcclxuICAgICAgfSxcclxuICAgICAge1xyXG4gICAgICAgIGltYWdlOiAnLi9pbWFnZXMvZ3JvdXAvcm9ja2V0cy9idXJhbi9idXJhbjEuanBnJyxcclxuICAgICAgICB0aXRsZTogJ9Ca0L7RgdC80LjRh9C10YHQutC40Lkg0LrQvtGA0LDQsdC70YwgXCLQkdGD0YDQsNC9XCInLFxyXG4gICAgICAgIGRlc2NyaXB0aW9uOiAn0JzQvdC+0LPQvtGA0LDQt9C+0LLRi9C5INC60L7RgdC80LjRh9C10YHQutC40Lkg0LrQvtGA0LDQsdC70YwnLFxyXG4gICAgICAgIGxpbms6ICcvI3JvY2tldHMvYnVyYW4nLFxyXG4gICAgICB9LFxyXG4gICAgXSxcclxuICB9LFxyXG4gIGVmZmVjdDoge1xyXG4gICAgbWFpbkltYWdlOiAnLi9pbWFnZXMvZ3JvdXAvcGFub3JhbWEzLmpwZycsXHJcbiAgICBjcnVtYnM6IFtcclxuICAgICAgeyB0aXRsZTogJ9CT0LvQsNCy0L3QsNGPJywgbGluazogJy8jJyB9LFxyXG4gICAgICB7IHRpdGxlOiAn0JLQu9C40Y/QvdC40LUg0L3QsCDQvtGA0LPQsNC90LjQt9C8JywgbGluazogbnVsbCB9LFxyXG4gICAgXSxcclxuICAgIHRpdGxlOiAn0JLQu9C40Y/QvdC40LUg0LrQvtGB0LzQuNGH0LXRgdC60L7Qs9C+INC/0YDQvtGB0YLRgNCw0L3RgdGC0LLQsCDQvdCwINC+0YDQs9Cw0L3QuNC30Lwg0YfQtdC70L7QstC10LrQsCcsXHJcbiAgICB0ZXh0OiAn0JrQvtGB0LzQuNGH0LXRgdC60L7QtSDQv9GA0L7RgdGC0YDQsNC90YHRgtCy0L4g0YLQsNC40YIg0LIg0YHQtdCx0LUg0LzQvdC+0LPQviDQvtC/0LDRgdC90L7RgdGC0LXQuSwg0LrQvtGC0L7RgNGL0LUg0YHQv9C+0YHQvtCx0L3RiyDQv9C+0LLQu9C40Y/RgtGMINC90LUg0YLQvtC70YzQutC+INC90LAg0YTQuNC30LjRh9C10YHQutC+0LUsINC90L4g0Lgg0L3QsCDQv9GB0LjRhdC40YfQtdGB0LrQvtC1INGB0L7RgdGC0L7Rj9C90LjQtSDRh9C10LvQvtCy0LXQutCwLiDQmiDRgtCw0LrQuNC8INC+0L/QsNGB0L3QvtGB0YLRj9C8INC+0YLQvdC+0YHRj9GC0YHRjzogPGJyIC8+PGJyIC8+ICZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOy1cdNCa0L7RgdC80LjRh9C10YHQutC+0LUg0LjQt9C70YPRh9C10L3QuNC1OyA8YnIgLz4gJm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7LVx00J/RgNC+0LHQu9C10LzRiyDRgSDQv9GB0LjRhdC40LrQvtC5OyA8YnIgLz4gJm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7LVx00JrQvtGB0LzQuNGH0LXRgdC60LjQuSDQs9GA0LjQsdC+0Lo7IDxiciAvPiAmbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDstINCc0LjQutGA0L7Qs9GA0LDQstC40YLQsNGG0LjRjzsgPGJyIC8+ICZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOy0g0J/RgNC+0LHQu9C10LzRiyDRgSDQuNC80LzRg9C90LjRgtC10YLQvtC8OyA8YnIgLz4gJm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7LSDQo9GF0YPQtNGI0LXQvdC40LUg0LfRgNC10L3QuNGPOyA8YnIgLz4gJm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7LSDQnNGL0YjQtdGH0L3QsNGPINCw0YLRgNC+0YTQuNGPOyA8YnIgLz48YnIgLz4g0Lgg0LzQvdC+0LPQuNC1INC00YDRg9Cz0LjQtS4nLFxyXG4gICAgYmxvY2tzOiBbXHJcbiAgICAgIHtcclxuICAgICAgICBpbWFnZTogJy4vaW1hZ2VzL2dyb3VwL2ltcGFjdC9ibG9vZC9ibG9vZDIuanBnJyxcclxuICAgICAgICB0aXRsZTogJ9Ca0YDQvtCy0LXQvdC+0YHQvdCw0Y8g0YHQuNGB0YLQtdC80LAnLFxyXG4gICAgICAgIGRlc2NyaXB0aW9uOiAn0KPQvNC10L3RjNGI0LXQvdC40LUg0L7QsdGK0ZHQvNCwINC60YDQvtCy0LgnLFxyXG4gICAgICAgIGxpbms6ICcvI2VmZmVjdC9ibG9vZCcsXHJcbiAgICAgIH0sXHJcbiAgICAgIHtcclxuICAgICAgICBpbWFnZTogJy4vaW1hZ2VzL2dyb3VwL2ltcGFjdC9ib25lcy9ib25lczQuanBnJyxcclxuICAgICAgICB0aXRsZTogJ9Ce0L/QvtGA0L3Qvi3QtNCy0LjQs9Cw0YLQtdC70YzQvdGL0Lkg0LDQv9C/0LDRgNCw0YInLFxyXG4gICAgICAgIGRlc2NyaXB0aW9uOiAn0JrQvtGB0YLQuCDRgtC10YDRj9GO0YIg0YHQstC+0Y4g0L/Qu9C+0YLQvdC+0YHRgtGMJyxcclxuICAgICAgICBsaW5rOiAnLyNlZmZlY3QvYm9uZXMnLFxyXG4gICAgICB9LFxyXG4gICAgICB7XHJcbiAgICAgICAgaW1hZ2U6ICcuL2ltYWdlcy9ncm91cC9pbXBhY3QvZW5kb2NyaW5lL2VuZG9jcmluZTEuanBnJyxcclxuICAgICAgICB0aXRsZTogJ9Ct0L3QtNC+0LrRgNC40L3QvdCw0Y8g0YHQuNGB0YLQtdC80LAnLFxyXG4gICAgICAgIGRlc2NyaXB0aW9uOiAn0J7Qv9Cw0YHQvdC+0YHRgtGMINCw0L3QtdC80LjQuCcsXHJcbiAgICAgICAgbGluazogJy8jZWZmZWN0L2VuZG9jcmluZScsXHJcbiAgICAgIH0sXHJcbiAgICAgIHtcclxuICAgICAgICBpbWFnZTogJy4vaW1hZ2VzL2dyb3VwL2ltcGFjdC9uZXJ2b3VzL25lcnZvdXMyLmpwZycsXHJcbiAgICAgICAgdGl0bGU6ICfQndC10YDQstC90LDRjyDRgdC40YHRgtC10LzQsCcsXHJcbiAgICAgICAgZGVzY3JpcHRpb246ICfQktC70LjRj9C90LjQtSDQvdCwINC/0YHQuNGF0LjQutGDJyxcclxuICAgICAgICBsaW5rOiAnLyNlZmZlY3QvbmVydm91cycsXHJcbiAgICAgIH0sXHJcbiAgICAgIHtcclxuICAgICAgICBpbWFnZTogJy4vaW1hZ2VzL2dyb3VwL2ltcGFjdC9yZXNwaXJhdG9yeS9yZXNwaXJhdG9yeTEuanBnJyxcclxuICAgICAgICB0aXRsZTogJ9Cg0LXRgdC/0LjRgNCw0YLQvtGA0L3QsNGPINGB0LjRgdGC0LXQvNCwJyxcclxuICAgICAgICBkZXNjcmlwdGlvbjogJ9Cj0LzQtdC90YzRiNC10L3QuNC1INC+0LHRitC10LzQsCDQu9C10LPQutC40YUnLFxyXG4gICAgICAgIGxpbms6ICcvI2VmZmVjdC9yZXNwaXJhdG9yeScsXHJcbiAgICAgIH0sXHJcbiAgICBdLFxyXG4gIH0sXHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgZGV0YWlsUGFnZURhdGEgPSBbXHJcbiAge1xyXG4gICAgaWQ6ICdzcGFjZXJzL2dhZ2FyaW4nLFxyXG4gICAgY3J1bWJzOiBbXHJcbiAgICAgIHsgbGluazogJy8jJywgdGl0bGU6ICfQk9C70LDQstC90LDRjycgfSxcclxuICAgICAgeyBsaW5rOiAnLyNzcGFjZXJzJywgdGl0bGU6ICfQmtC+0YHQvNC+0L3QsNCy0YLRiycgfSxcclxuICAgICAge1xyXG4gICAgICAgIGxpbms6IG51bGwsXHJcbiAgICAgICAgdGl0bGU6ICfQk9Cw0LPQsNGA0LjQvScsXHJcbiAgICAgIH0sXHJcbiAgICBdLFxyXG4gICAgdGl0bGU6ICfQrtGA0LjQuSDQkNC70LXQutGB0LXQtdCy0LjRhyDQk9Cw0LPQsNGA0LjQvScsXHJcbiAgICB0ZXh0OiBbXHJcbiAgICAgICfQk9Cw0LPQsNGA0LjQvSDigJMg0L/QtdGA0LLRi9C5INC60L7RgdC80L7QvdCw0LLRgiDQodCh0KHQoCDQuCDQvNC40YDQsCwg0YHRgtCw0LLRiNC40Lkg0YHQuNC80LLQvtC70L7QvCDRgNCw0LfQstC40YLQuNGPINGB0L7QstC10YLRgdC60L7QuSDQsNCy0LjQsNGG0LjQuCDQuCDQvdCw0YPQutC4INCyINGG0LXQu9C+0LwsINGH0LXQu9C+0LLQtdC6LCDQvdCw0LLRgdC10LPQtNCwINCy0L/QuNGB0LDQstGI0LjQuSDRgdCy0L7QtSDQuNC80Y8g0LIg0LjRgdGC0L7RgNC40Y4g0LjRgdGB0LvQtdC00L7QstCw0L3QuNGPINC60L7RgdC80LjRh9C10YHQutC+0LPQviDQv9GA0L7RgdGC0YDQsNC90YHRgtCy0LAuJyxcclxuICAgICAgJ9CY0LzRjyDQrtGA0LjRjyDQk9Cw0LPQsNGA0LjQvdCwINGBINC00LXRgtGB0YLQstCwINC30L3QsNC60L7QvNC+INCy0YHQtdC8INGA0L7RgdGB0LjRj9C90LDQvC4g0J7QvSDQv9C10YDQstGL0Lwg0LjQtyDQstGB0LXRhSDQttC40LLRg9GJ0LjRhSDQvdCwINCX0LXQvNC70LUg0LvRjtC00LXQuSDQv9C+0LHRi9Cy0LDQuyDQsiDQutC+0YHQvNC+0YHQtS4g0J/RgNC+0YHQu9Cw0LLQu9C10L3QvdGL0Lkg0LvQtdGC0YfQuNC6LdC60L7RgdC80L7QvdCw0LLRgiDRgdGC0LDQuyDQu9C10LPQtdC90LTQvtC5INC4INC+0LHRgNCw0LfRhtC+0Lwg0LTQu9GPINC/0L7QtNGA0LDQttCw0L3QuNGPINC90LUg0YLQvtC70YzQutC+INC00LvRjyDRgdC+0LLQtdGC0YHQutC40YUg0LPRgNCw0LbQtNCw0L0sINC90L4g0Lgg0LTQu9GPINC80L3QvtCz0LjRhSDQttC40YLQtdC70LXQuSDQtNGA0YPQs9C40YUg0YHRgtGA0LDQvSDQvNC40YDQsC4g0J/QvtGB0LvQtSDQv9C+0LvQtdGC0LAg0LIg0LrQvtGB0LzQvtGBINCT0LDQs9Cw0YDQuNC9INCw0LrRgtC40LLQvdC+INC30LDQvdC40LzQsNC70YHRjyDQvNC10LbQtNGD0L3QsNGA0L7QtNC90L7QuSDQvtCx0YnQtdGB0YLQstC10L3QvdC+0Lkg0LTQtdGP0YLQtdC70YzQvdC+0YHRgtGM0Y4uJyxcclxuICAgIF0sXHJcbiAgICBpbWFnZTogJy4vaW1hZ2VzL2dyb3VwL3NwYWNlcnMvZ2FnYXJpbi9nYWdhcmluNy5qcGcnLFxyXG4gICAgYnRuVGV4dDogJ9CT0LDQu9C10YDQtdGPJyxcclxuICAgIHNsaWRlczogW1xyXG4gICAgICAnLi9pbWFnZXMvZ3JvdXAvc3BhY2Vycy9nYWdhcmluL2dhZ2FyaW4xLmpwZycsXHJcbiAgICAgICcuL2ltYWdlcy9ncm91cC9zcGFjZXJzL2dhZ2FyaW4vZ2FnYXJpbjIuanBnJyxcclxuICAgICAgJy4vaW1hZ2VzL2dyb3VwL3NwYWNlcnMvZ2FnYXJpbi9nYWdhcmluMy5qcGcnLFxyXG4gICAgICAnLi9pbWFnZXMvZ3JvdXAvc3BhY2Vycy9nYWdhcmluL2dhZ2FyaW40LmpwZycsXHJcbiAgICAgICcuL2ltYWdlcy9ncm91cC9zcGFjZXJzL2dhZ2FyaW4vZ2FnYXJpbjUuanBnJyxcclxuICAgICAgJy4vaW1hZ2VzL2dyb3VwL3NwYWNlcnMvZ2FnYXJpbi9nYWdhcmluNi5qcGcnLFxyXG4gICAgICAnLi9pbWFnZXMvZ3JvdXAvc3BhY2Vycy9nYWdhcmluL2dhZ2FyaW43LmpwZycsXHJcbiAgICAgICcuL2ltYWdlcy9ncm91cC9zcGFjZXJzL2dhZ2FyaW4vZ2FnYXJpbjguanBnJyxcclxuICAgICAgJy4vaW1hZ2VzL2dyb3VwL3NwYWNlcnMvZ2FnYXJpbi9nYWdhcmluOS5qcGcnLFxyXG4gICAgICAnLi9pbWFnZXMvZ3JvdXAvc3BhY2Vycy9nYWdhcmluL2dhZ2FyaW4xMC5qcGcnLFxyXG4gICAgICAnLi9pbWFnZXMvZ3JvdXAvc3BhY2Vycy9nYWdhcmluL2dhZ2FyaW4xMS5qcGcnLFxyXG4gICAgXSxcclxuICB9LFxyXG4gIHtcclxuICAgIGlkOiAnc3BhY2Vycy90aXRvdicsXHJcbiAgICBjcnVtYnM6IFtcclxuICAgICAgeyBsaW5rOiAnLyMnLCB0aXRsZTogJ9CT0LvQsNCy0L3QsNGPJyB9LFxyXG4gICAgICB7IGxpbms6ICcvI3NwYWNlcnMnLCB0aXRsZTogJ9Ca0L7RgdC80L7QvdCw0LLRgtGLJyB9LFxyXG4gICAgICB7XHJcbiAgICAgICAgbGluazogbnVsbCxcclxuICAgICAgICB0aXRsZTogJ9Ci0LjRgtC+0LInLFxyXG4gICAgICB9LFxyXG4gICAgXSxcclxuICAgIHRpdGxlOiAn0JPQtdGA0LzQsNC9INCh0YLQtdC/0LDQvdC+0LLQuNGHINCi0LjRgtC+0LInLFxyXG4gICAgdGV4dDogW1xyXG4gICAgICAn0JPQtdGA0LzQsNC9INCi0LjRgtC+0LIg4oCTINC40LfQstC10YHRgtC90YvQuSDQutC+0YHQvNC+0L3QsNCy0YIsINC00YPQsdC70LXRgCDQrtGA0LjRjyDQk9Cw0LPQsNGA0LjQvdCwLiDQn9C10YDQstGL0Lkg0YfQtdC70L7QstC10LosINC/0YDQvtCx0YvQstGI0LjQuSDQsiDQutC+0YHQvNC+0YHQtSDQsdC+0LvRjNGI0LUg0YHRg9GC0L7Qui4g0KHQsNC80YvQuSDQvNC+0LvQvtC00L7QuSDQuNC3INCy0YHQtdGFINC60L7RgdC80L7QvdCw0LLRgtC+0LIg0LIg0LjRgdGC0L7RgNC40Lgg0LzQuNGA0L7QstC+0Lkg0LrQvtGB0LzQvtC90LDQstGC0LjQutC4LiDQndCwINC80L7QvNC10L3RgiDRgdGC0LDRgNGC0LAg0LXQvNGDINCx0YvQu9C+INCy0YHQtdCz0L4gMjUg0LvQtdGCLiDQkiAxOTYxINCz0L7QtNGDINGB0YLQsNC7INCT0LXRgNC+0LXQvCDQodC+0LLQtdGC0YHQutC+0LPQviDQodC+0Y7Qt9CwLiDQlNC+0YbQtdC90YIsINC00L7QutGC0L7RgCDQstC+0LXQvdC90YvRhSDQvdCw0YPQui4nLFxyXG4gICAgICAn0JPQvtCy0L7RgNGP0YIsINGH0YLQviDQsiDQv9Cw0LzRj9GC0Lgg0L7RgdGC0LDRjtGC0YHRjyDRgtC+0LvRjNC60L4g0L/QtdGA0LLRi9C1LiDQndC10L/RgNCw0LLQtNCwLiDQktC+INCy0YHRj9C60L7QvCDRgdC70YPRh9Cw0LUsINC60L7Qs9C00LAg0YDQtdGH0Ywg0LjQtNC10YIg0L4g0JPQtdGA0LzQsNC90LUg0KLQuNGC0L7QstC1IOKAkyDQstGC0L7RgNC+0Lwg0YfQtdC70L7QstC10LrQtSDQv9C+0YHQu9C1INCT0LDQs9Cw0YDQuNC90LAsINC/0L7Qu9C10YLQtdCy0YjQtdC8INC6INC30LLQtdC30LTQsNC8LiDQndC10YHQvNC+0YLRgNGPINC90LAg0YLQviwg0YfRgtC+INC+0L0g0YHRgtCw0Lsg0LLRgtC+0YDRi9C8LCDQtdCz0L4g0LjQvNGPINC90LDQstGB0LXQs9C00LAg0LLQv9C10YfQsNGC0LDQvdC+INCyINC40YHRgtC+0YDQuNGOINGA0LDQt9Cy0LjRgtC40Y8g0LrQvtGB0LzQvtC90LDQstGC0LjQutC4LicsXHJcbiAgICAgICfQktGB0LUg0LvRjtC00Lgg0LjRidGD0YIg0YHQstC+0LUg0LzQtdGB0YLQviDQsiDQttC40LfQvdC4LCDQvtC9INC90LUg0YHRgtCw0Lsg0LjRgdC60LvRjtGH0LXQvdC40LXQvC4g0KEg0YDQsNC90L3QuNGFINC70LXRgiDQtdCz0L4g0L/RgNC40YPRh9C40LvQuCDQuiDQvNGL0YHQu9C4LCDRh9GC0L4g0LPQsNGA0LDQvdGC0L7QvCDRg9GB0L/QtdGF0LAg0Y/QstC70Y/QtdGC0YHRjyDQvdCw0L/RgNGP0LbQtdC90L3QsNGPINGA0LDQsdC+0YLQsCwg0LHRg9C00Ywg0YLQviDRg9GH0LXQsdCwINC40LvQuCDQtNC+0LHRi9Cy0LDQvdC40LUg0L7QsdGL0YfQvdC+0LPQviDQutGD0YHQutCwINGF0LvQtdCx0LAuINCT0LXRgNC80LDQvSDQstGB0LXQs9C00LAg0YDQsNGB0YHRh9C40YLRi9Cy0LDQuyDRgtC+0LvRjNC60L4g0L3QsCDRgdCy0L7QuCDRgdC40LvRiywg0LLQtdGA0LjQuyDQuNGB0LrQu9GO0YfQuNGC0LXQu9GM0L3QviDQsiDRgdC10LHRjywg0LAg0L3QtSDQsiDRgdGH0LDRgdGC0LvQuNCy0L7QtSDRgdGC0LXRh9C10L3QuNC1INC+0LHRgdGC0L7Rj9GC0LXQu9GM0YHRgtCyLiDQmCDQtdGB0LvQuCDQtdC80YMg0YHQvtC/0YPRgtGB0YLQstC+0LLQsNC70LAg0YPQtNCw0YfQsCwg0YLQviDRjdGC0L4g0L3QtSDQvtGCINCx0L7Qu9GM0YjQvtCz0L4g0LLQtdC30LXQvdC40Y8sINCwINCyINGA0LXQt9GD0LvRjNGC0LDRgtC1INGD0L/QvtGA0L3QvtCz0L4g0YLRgNGD0LTQsC4g0J7QvSDQv9GA0LjQvdCw0LTQu9C10LbQsNC7INC6INGC0LXQvCDQu9GO0LTRj9C8LCDQutC+0YLQvtGA0YvRhSDRgdGH0LjRgtCw0LvQuCDQvtC00LXRgNC20LjQvNGL0LzQuC4nLFxyXG4gICAgXSxcclxuICAgIGltYWdlOiAnLi9pbWFnZXMvZ3JvdXAvc3BhY2Vycy90aXRvdi90aXRvdjEuanBnJyxcclxuICAgIGJ0blRleHQ6ICfQk9Cw0LvQtdGA0LXRjycsXHJcbiAgICBzbGlkZXM6IFtcclxuICAgICAgJy4vaW1hZ2VzL2dyb3VwL3NwYWNlcnMvdGl0b3YvdGl0b3YxLmpwZycsXHJcbiAgICAgICcuL2ltYWdlcy9ncm91cC9zcGFjZXJzL3RpdG92L3RpdG92Mi5qcGcnLFxyXG4gICAgICAnLi9pbWFnZXMvZ3JvdXAvc3BhY2Vycy90aXRvdi90aXRvdjMuanBnJyxcclxuICAgICAgJy4vaW1hZ2VzL2dyb3VwL3NwYWNlcnMvdGl0b3YvdGl0b3Y0LmpwZycsXHJcbiAgICAgICcuL2ltYWdlcy9ncm91cC9zcGFjZXJzL3RpdG92L3RpdG92NS5qcGcnLFxyXG4gICAgICAnLi9pbWFnZXMvZ3JvdXAvc3BhY2Vycy90aXRvdi90aXRvdjYuanBnJyxcclxuICAgICAgJy4vaW1hZ2VzL2dyb3VwL3NwYWNlcnMvdGl0b3YvdGl0b3Y3LmpwZycsXHJcbiAgICBdLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgaWQ6ICdzcGFjZXJzL2xlb25vdicsXHJcbiAgICBjcnVtYnM6IFtcclxuICAgICAgeyBsaW5rOiAnLyMnLCB0aXRsZTogJ9CT0LvQsNCy0L3QsNGPJyB9LFxyXG4gICAgICB7IGxpbms6ICcvI3NwYWNlcnMnLCB0aXRsZTogJ9Ca0L7RgdC80L7QvdCw0LLRgtGLJyB9LFxyXG4gICAgICB7XHJcbiAgICAgICAgbGluazogbnVsbCxcclxuICAgICAgICB0aXRsZTogJ9Cb0LXQvtC90L7QsicsXHJcbiAgICAgIH0sXHJcbiAgICBdLFxyXG4gICAgdGl0bGU6ICfQkNC70LXQutGB0LXQuSDQkNGA0YXQuNC/0L7QstC40Ycg0JvQtdC+0L3QvtCyJyxcclxuICAgIHRleHQ6IFtcclxuICAgICAgJ9CQ0LvQtdC60YHQtdC5INCb0LXQvtC90L7QsiDigJMg0LvQtdGC0YfQuNC6LdC60L7RgdC80L7QvdCw0LLRgiDQodC+0LLQtdGC0YHQutC+0LPQviDQodC+0Y7Qt9CwIOKEljExLiDQktC/0LXRgNCy0YvQtSDRgdC+0LLQtdGA0YjQuNC7INCy0YvRhdC+0LQg0LIg0LrQvtGB0LzQuNGH0LXRgdC60L7QtSDQv9GA0L7RgdGC0YDQsNC90YHRgtCy0L4uINCU0LLQsCDRgNCw0LfQsCDRg9C00L7RgdGC0L7QtdC9INC30LLQsNC90LjRjyDQk9C10YDQvtC5INCh0L7QstC10YLRgdC60L7Qs9C+INCh0L7RjtC30LAsINC40LzQtdC7INC30LLQsNC90LjQtSDQs9C10L3QtdGA0LDQuy3QvNCw0LnQvtGA0LAg0LDQstC40LDRhtC40LguJyxcclxuICAgICAgJ9CY0LzRjyDQkNC70LXQutGB0LXRjyDQm9C10L7QvdC+0LLQsCDRg9C20LUg0LTQsNCy0L3QviDQvdC1INC90LAg0YHQu9GD0YXRgy4g0JzQvdC+0LPQuNC8INC+0L3QviDQvdC40YfQtdCz0L4g0L3QtSDQs9C+0LLQvtGA0LjRgiwg0YLQsNC6INC60LDQuiDQutC+0YHQvNC+0L3QsNCy0YLQuNC60L7QuSDQuNC90YLQtdGA0LXRgdGD0Y7RgtGB0Y8g0LXQtNC40L3QuNGG0YsuINCj0LbQtSDQtNCw0LLQvdC+INC30LDQsdGL0LvQuCwg0YfRgtC+INC+0L0g0LHRi9C7INCyINGH0LjRgdC70LUg0L/QtdGA0LLRi9GFINC60L7RgdC80L7QvdCw0LLRgtC+0LIg0KHQodCh0KAsINC90LUg0LPQvtCy0L7RgNGPINGD0LbQtSDQviDRgtC+0LwsINGH0LXQvCDQtdCz0L4g0L/QvtC70LXRgiDQvtGC0LvQuNGH0LDQu9GB0Y8g0L7RgiDQv9C+0LvQtdGC0L7QsiDQtdCz0L4g0LrQvtC70LvQtdCzLiDQndC+LCDQv9C+INC80L3QtdC90LjRjiDQu9GO0LTQtdC5INC60L7QvNC/0LXRgtC10L3RgtC90YvRhSDQsiDRjdGC0L7QvCDQstC+0L/RgNC+0YHQtSwg0LLQutC70LDQtCDQm9C10L7QvdC+0LLQsCDQsiDRgNCw0LfQstC40YLQuNC1INC60L7RgdC80L7QvdCw0LLRgtC40LrQuCDQvdC1INC80LXQvdC10LUg0LLQsNC20LXQvSwg0YfQtdC8INC00L7RgdGC0LjQttC10L3QuNC1INCT0LDQs9Cw0YDQuNC90LAuINCS0LXQtNGMINC+0L0g0YHRgtCw0Lsg0L/QtdGA0LLRi9C8LCDQutGC0L4g0L/QvtC60LjQvdGD0Lsg0LrQvtGB0LzQuNGH0LXRgdC60LjQuSDQutC+0YDQsNCx0LvRjCDQuCDQstGL0YjQtdC7INCyINC+0YLQutGA0YvRgtGL0Lkg0LrQvtGB0LzQvtGBLiDQn9C+0LzQuNC80L4g0Y3RgtC+0LPQviDQm9C10L7QvdC+0LIg0LHRi9C7INGC0LLQvtGA0YfQtdGB0LrQuNC8INGH0LXQu9C+0LLQtdC60L7QvCwg0L/QvtGN0YLQvtC80YMg0YHQvNC+0LMg0L7RhtC10L3QuNGC0Ywg0LrRgNCw0YHQvtGC0YMg0L/Qu9Cw0L3QtdGC0Ysg0JfQtdC80LvRjyDCq9GB0L4g0YHRgtC+0YDQvtC90YvCuy4nLFxyXG4gICAgXSxcclxuICAgIGltYWdlOiAnLi9pbWFnZXMvZ3JvdXAvc3BhY2Vycy9sZW9ub3YvbGVvbm92Ny5qcGcnLFxyXG4gICAgYnRuVGV4dDogJ9CT0LDQu9C10YDQtdGPJyxcclxuICAgIHNsaWRlczogW1xyXG4gICAgICAnLi9pbWFnZXMvZ3JvdXAvc3BhY2Vycy9sZW9ub3YvbGVvbm92MS5qcGcnLFxyXG4gICAgICAnLi9pbWFnZXMvZ3JvdXAvc3BhY2Vycy9sZW9ub3YvbGVvbm92Mi5qcGcnLFxyXG4gICAgICAnLi9pbWFnZXMvZ3JvdXAvc3BhY2Vycy9sZW9ub3YvbGVvbm92My5qcGcnLFxyXG4gICAgICAnLi9pbWFnZXMvZ3JvdXAvc3BhY2Vycy9sZW9ub3YvbGVvbm92NC5qcGcnLFxyXG4gICAgICAnLi9pbWFnZXMvZ3JvdXAvc3BhY2Vycy9sZW9ub3YvbGVvbm92NS5qcGcnLFxyXG4gICAgICAnLi9pbWFnZXMvZ3JvdXAvc3BhY2Vycy9sZW9ub3YvbGVvbm92Ni5qcGcnLFxyXG4gICAgICAnLi9pbWFnZXMvZ3JvdXAvc3BhY2Vycy9sZW9ub3YvbGVvbm92Ny5qcGcnLFxyXG4gICAgICAnLi9pbWFnZXMvZ3JvdXAvc3BhY2Vycy9sZW9ub3YvbGVvbm92OC5qcGcnLFxyXG4gICAgXSxcclxuICB9LFxyXG4gIHtcclxuICAgIGlkOiAnc3BhY2Vycy9zYXZpdHNrYXlhJyxcclxuICAgIGNydW1iczogW1xyXG4gICAgICB7IGxpbms6ICcvIycsIHRpdGxlOiAn0JPQu9Cw0LLQvdCw0Y8nIH0sXHJcbiAgICAgIHsgbGluazogJy8jc3BhY2VycycsIHRpdGxlOiAn0JrQvtGB0LzQvtC90LDQstGC0YsnIH0sXHJcbiAgICAgIHtcclxuICAgICAgICBsaW5rOiBudWxsLFxyXG4gICAgICAgIHRpdGxlOiAn0KHQsNCy0LjRhtC60LDRjycsXHJcbiAgICAgIH0sXHJcbiAgICBdLFxyXG4gICAgdGl0bGU6ICfQodCy0LXRgtC70LDQvdCwINCV0LLQs9C10L3RjNC10LLQvdCwINCh0LDQstC40YbQutCw0Y8nLFxyXG4gICAgdGV4dDogW1xyXG4gICAgICAn0KHQstC10YLQu9Cw0L3QsCDQodCw0LLQuNGG0LrQsNGPIOKAkyDQuNC30LLQtdGB0YLQvdGL0Lkg0YHQvtCy0LXRgtGB0LrQuNC5INC60L7RgdC80L7QvdCw0LLRgiwg0LvQtdGC0YfQuNC6LdC40YHQv9GL0YLQsNGC0LXQu9GMLCDQvtCx0YnQtdGB0YLQstC10L3QvdGL0Lkg0LTQtdGP0YLQtdC70YwsINC/0LXQtNCw0LPQvtCzLiDQmNC80LXQtdGCINC90LDRg9GH0L3Rg9GOINGB0YLQtdC/0LXQvdGMINC60LDQvdC00LjQtNCw0YLQsCDRgtC10YXQvdC40YfQtdGB0LrQuNGFINC90LDRg9C6LCDQt9Cy0LDQvdC40LUg0L/QvtC70LrQvtCy0L3QuNC60LAg0JLQktChINCh0KHQodCgLiDQntC90LAg0LXQtNC40L3RgdGC0LLQtdC90L3QsNGPINC20LXQvdGJ0LjQvdCwINCyINCh0KHQodCgLCDQutGC0L4g0YPQtNC+0YHRgtC+0LjQu9GB0Y8g0YHRgtCw0YLRjCDQtNCy0LDQttC00Ysg0JPQtdGA0L7QtdC8INCh0L7QstC10YLRgdC60L7Qs9C+INCh0L7RjtC30LAuJyxcclxuICAgICAgJ9CV0LUg0LjQvNGPINC90LDQstGB0LXQs9C00LAg0LLQv9C40YHQsNC90L4g0LIg0LjRgdGC0L7RgNC40Y4g0LrQvtGB0LzQvtC90LDQstGC0LjQutC4LCDQtdC1INCx0LjQvtCz0YDQsNGE0LjRjyDigJMg0L/RgNC40LzQtdGAINC00LvRjyDQv9C+0LTRgNCw0LbQsNC90LjRjyDQvdC1INGC0L7Qu9GM0LrQviDQtNC70Y8g0LbQtdC90YnQuNC9LCDQvdC+INC4INC00LvRjyDQvNC90L7Qs9C40YUg0LzRg9C20YfQuNC9LiDQktGC0L7RgNCw0Y8g0LbQtdC90YnQuNC90LAt0LrQvtGB0LzQvtC90LDQstGCINCh0LLQtdGC0LvQsNC90LAg0KHQsNCy0LjRhtC60LDRjywgwqvQvNCw0YDRiNCw0LvRjNGB0LrQsNGPINC00L7Rh9C60LDCuywg0L/QtdGA0LLQsNGPINCyINC80LjRgNC1INGB0YDQtdC00Lgg0LbQtdC90YnQuNC9LCDQutGC0L4g0L/QvtCx0YvQstCw0Lsg0LIg0L7RgtC60YDRi9GC0L7QvCDQutC+0YHQvNC+0YHQtS4g0J7QvdCwINGB0YLQsNC70LAg0LTQvtGB0YLQvtC50L3Ri9C8INC/0YDQvtC00L7Qu9C20LDRgtC10LvQtdC8INCS0LDQu9C10L3RgtC40L3RiyDQotC10YDQtdGI0LrQvtCy0L7QuSwgwqvQtNC10LLRg9GI0LrQuCDQuNC3INC90LDRgNC+0LTQsMK7LCA1My3QvCDQutC+0YHQvNC+0L3QsNCy0YLQvtC8INCh0L7QstC10YLRgdC60L7Qs9C+INCh0L7RjtC30LAg0LggMTExLdC8INCyINC40YHRgtC+0YDQuNC4INC80LjRgNC+0LLQvtC5INC60L7RgdC80L7QvdCw0LLRgtC40LrQuC4nLFxyXG4gICAgXSxcclxuICAgIGltYWdlOiAnLi9pbWFnZXMvZ3JvdXAvc3BhY2Vycy9zYXZpdHNrYXlhL3Nhdml0c2theWE0LmpwZycsXHJcbiAgICBidG5UZXh0OiAn0JPQsNC70LXRgNC10Y8nLFxyXG4gICAgc2xpZGVzOiBbXHJcbiAgICAgICcuL2ltYWdlcy9ncm91cC9zcGFjZXJzL3Nhdml0c2theWEvc2F2aXRza2F5YTEuanBnJyxcclxuICAgICAgJy4vaW1hZ2VzL2dyb3VwL3NwYWNlcnMvc2F2aXRza2F5YS9zYXZpdHNrYXlhMi5qcGcnLFxyXG4gICAgICAnLi9pbWFnZXMvZ3JvdXAvc3BhY2Vycy9zYXZpdHNrYXlhL3Nhdml0c2theWEzLmpwZycsXHJcbiAgICAgICcuL2ltYWdlcy9ncm91cC9zcGFjZXJzL3Nhdml0c2theWEvc2F2aXRza2F5YTQuanBnJyxcclxuICAgICAgJy4vaW1hZ2VzL2dyb3VwL3NwYWNlcnMvc2F2aXRza2F5YS9zYXZpdHNrYXlhNS5qcGcnLFxyXG4gICAgICAnLi9pbWFnZXMvZ3JvdXAvc3BhY2Vycy9zYXZpdHNrYXlhL3Nhdml0c2theWE2LmpwZycsXHJcbiAgICAgICcuL2ltYWdlcy9ncm91cC9zcGFjZXJzL3Nhdml0c2theWEvc2F2aXRza2F5YTcuanBnJyxcclxuICAgICAgJy4vaW1hZ2VzL2dyb3VwL3NwYWNlcnMvc2F2aXRza2F5YS9zYXZpdHNrYXlhOC5qcGcnLFxyXG4gICAgICAnLi9pbWFnZXMvZ3JvdXAvc3BhY2Vycy9zYXZpdHNrYXlhL3Nhdml0c2theWE5LmpwZycsXHJcbiAgICAgICcuL2ltYWdlcy9ncm91cC9zcGFjZXJzL3Nhdml0c2theWEvc2F2aXRza2F5YTEwLmpwZycsXHJcbiAgICBdLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgaWQ6ICdyb2NrZXRzL3NvdXonLFxyXG4gICAgY3J1bWJzOiBbXHJcbiAgICAgIHsgbGluazogJy8jJywgdGl0bGU6ICfQk9C70LDQstC90LDRjycgfSxcclxuICAgICAgeyBsaW5rOiAnLyNyb2NrZXRzJywgdGl0bGU6ICfQmtC+0YHQvNC40YfQtdGB0LrQuNC1INCw0L/Qv9Cw0YDQsNGC0YsnIH0sXHJcbiAgICAgIHtcclxuICAgICAgICBsaW5rOiBudWxsLFxyXG4gICAgICAgIHRpdGxlOiAn0KHQvtGO0LcnLFxyXG4gICAgICB9LFxyXG4gICAgXSxcclxuICAgIHRpdGxlOiAn0KDQsNC60LXRgtCwLdC90L7RgdC40YLQtdC70YwgXCLQodC+0Y7Qt1wiJyxcclxuICAgIHRleHQ6IFtcclxuICAgICAgJ9Cg0LDQutC10YLQsC3QvdC+0YHQuNGC0LXQu9GMIMKr0KHQvtGO0Lct0KTQk8K7IOKAlCDRgNCw0LrQtdGC0LAg0YHRgNC10LTQvdC10LPQviDQutC70LDRgdGB0LAsINGA0LDQt9GA0LDQsdC+0YLQsNC90LAg0Lgg0L/RgNC+0LjQt9Cy0L7QtNC40YLRgdGPINCyINCg0JrQpiDCq9Cf0YDQvtCz0YDQtdGB0YHCuyAo0LMuINCh0LDQvNCw0YDQsCkuINCe0L3QsCDQv9GA0LXQtNC90LDQt9C90LDRh9C10L3QsCDQtNC70Y8g0LLRi9Cy0LXQtNC10L3QuNGPINC90LAg0L7QutC+0LvQvtC30LXQvNC90YPRjiDQvtGA0LHQuNGC0YMg0LDQstGC0L7QvNCw0YLQuNGH0LXRgdC60LjRhSDQutC+0YHQvNC40YfQtdGB0LrQuNGFINCw0L/Qv9Cw0YDQsNGC0L7QsiDRgdC+0YbQuNCw0LvRjNC90L4t0Y3QutC+0L3QvtC80LjRh9C10YHQutC+0LPQviwg0L3QsNGD0YfQvdC+LdC40YHRgdC70LXQtNC+0LLQsNGC0LXQu9GM0YHQutC+0LPQviDQuCDRgdC/0LXRhtC40LDQu9GM0L3QvtCz0L4g0L3QsNC30L3QsNGH0LXQvdC40Y8uJyxcclxuICAgICAgJ9Cg0LDQutC10YLRiy3QvdC+0YHQuNGC0LXQu9C4IMKr0KHQvtGO0LfCuyDQsiDRgdC+0YfQtdGC0LDQvdC40Lgg0YEg0YDQsNC30LPQvtC90L3Ri9C8INCx0LvQvtC60L7QvCDCq9Ck0YDQtdCz0LDRgsK7INC/0YDQtdC00L3QsNC30L3QsNGH0LXQvdGLINC00LvRjyDQt9Cw0L/Rg9GB0LrQvtCyINC60L7RgdC80LjRh9C10YHQutC40YUg0LDQv9C/0LDRgNCw0YLQvtCyINC90LAg0L7QutC+0LvQvtC30LXQvNC90YvQtSDQvtGA0LHQuNGC0Ysg0YDQsNC30LvQuNGH0L3Ri9GFINCy0YvRgdC+0YIg0Lgg0L3QsNC60LvQvtC90LXQvdC40LksINCy0LrQu9GO0YfQsNGPINCz0LXQvtC/0LXRgNC10YXQvtC00L3Ri9C1INC4INCz0LXQvtGB0YLQsNGG0LjQvtC90LDRgNC90YPRjiwg0LAg0YLQsNC60LbQtSDQvtGC0LvQtdGC0L3Ri9C1INGC0YDQsNC10LrRgtC+0YDQuNC4LicsXHJcbiAgICBdLFxyXG4gICAgaW1hZ2U6ICcuL2ltYWdlcy9ncm91cC9yb2NrZXRzL3NvdXovc291ejEuanBnJyxcclxuICAgIGJ0blRleHQ6ICfQk9Cw0LvQtdGA0LXRjycsXHJcbiAgICBzbGlkZXM6IFtcclxuICAgICAgJy4vaW1hZ2VzL2dyb3VwL3JvY2tldHMvc291ei9zb3V6MS5qcGcnLFxyXG4gICAgICAnLi9pbWFnZXMvZ3JvdXAvcm9ja2V0cy9zb3V6L3NvdXoyLmpwZycsXHJcbiAgICAgICcuL2ltYWdlcy9ncm91cC9yb2NrZXRzL3NvdXovc291ejMuanBnJyxcclxuICAgICAgJy4vaW1hZ2VzL2dyb3VwL3JvY2tldHMvc291ei9zb3V6NC5qcGcnLFxyXG4gICAgXSxcclxuICB9LFxyXG4gIHtcclxuICAgIGlkOiAncm9ja2V0cy9wcm90b24nLFxyXG4gICAgY3J1bWJzOiBbXHJcbiAgICAgIHsgbGluazogJy8jJywgdGl0bGU6ICfQk9C70LDQstC90LDRjycgfSxcclxuICAgICAgeyBsaW5rOiAnLyNyb2NrZXRzJywgdGl0bGU6ICfQmtC+0YHQvNC40YfQtdGB0LrQuNC1INCw0L/Qv9Cw0YDQsNGC0YsnIH0sXHJcbiAgICAgIHtcclxuICAgICAgICBsaW5rOiBudWxsLFxyXG4gICAgICAgIHRpdGxlOiAn0J/RgNC+0YLQvtC9JyxcclxuICAgICAgfSxcclxuICAgIF0sXHJcbiAgICB0aXRsZTogJ9Cg0LDQutC10YLQsC3QvdC+0YHQuNGC0LXQu9GMIFwi0J/RgNC+0YLQvtC9XCInLFxyXG4gICAgdGV4dDogW1xyXG4gICAgICAnwqvQn9GA0L7RgtC+0L3CuyAo0KPQoC01MDAg4oCUINCj0L3QuNCy0LXRgNGB0LDQu9GM0L3QsNGPINGA0LDQutC10YLQsCwgwqvQn9GA0L7RgtC+0L0t0JrCuywgwqvQn9GA0L7RgtC+0L0t0JzCuykg4oCUINC+0LTQvdC+0YDQsNC30L7QstCw0Y8g0YDQsNC60LXRgtCwLdC90L7RgdC40YLQtdC70YwgKNCg0J0pINGC0Y/QttGR0LvQvtCz0L4g0LrQu9Cw0YHRgdCwLCDQv9GA0LXQtNC90LDQt9C90LDRh9C10L3QvdCw0Y8g0LTQu9GPINCy0YvQstC10LTQtdC90LjRjyDQsNCy0YLQvtC80LDRgtC40YfQtdGB0LrQuNGFINC60L7RgdC80LjRh9C10YHQutC40YUg0LDQv9C/0LDRgNCw0YLQvtCyINC90LAg0L7RgNCx0LjRgtGDINCX0LXQvNC70Lgg0Lgg0LTQsNC70LXQtSDQsiDQutC+0YHQvNC40YfQtdGB0LrQvtC1INC/0YDQvtGB0YLRgNCw0L3RgdGC0LLQvi4gQ9C/0L7RgdC+0LHQvdCwINCy0YvQstC+0LTQuNGC0Ywg0L3QsCDQs9C10L7RgdGC0LDRhtC40L7QvdCw0YDQvdGD0Y4g0L7RgNCx0LjRgtGDICjQk9Ch0J4pINCz0YDRg9C30Ysg0LTQviAzLDMg0YIuICcsXHJcbiAgICAgICfQoNCdIMKr0J/RgNC+0YLQvtC9wrsg0Y/QstC40LvQsNGB0Ywg0YHRgNC10LTRgdGC0LLQvtC8INCy0YvQstC10LTQtdC90LjRjyDQstGB0LXRhSDRgdC+0LLQtdGC0YHQutC40YUg0Lgg0YDQvtGB0YHQuNC50YHQutC40YUg0L7RgNCx0LjRgtCw0LvRjNC90YvRhSDRgdGC0LDQvdGG0LjQuSDCq9Ch0LDQu9GO0YIt0JTQntChwrsg0LggwqvQkNC70LzQsNC3wrssINC80L7QtNGD0LvQtdC5INGB0YLQsNC90YbQuNC5IMKr0JzQuNGAwrsg0Lgg0JzQmtChLCDQv9C70LDQvdC40YDQvtCy0LDQstGI0LjRhdGB0Y8g0L/QuNC70L7RgtC40YDRg9C10LzRi9GFINC60L7RgdC80LjRh9C10YHQutC40YUg0LrQvtGA0LDQsdC70LXQuSDQotCa0KEg0Lgg0JstMS/Cq9CX0L7QvdC0wrsgKNGB0L7QstC10YLRgdC60L7QuSDQu9GD0L3QvdC+LdC+0LHQu9GR0YLQvdC+0Lkg0L/RgNC+0LPRgNCw0LzQvNGLKSwg0LAg0YLQsNC60LbQtSDRgtGP0LbRkdC70YvRhSDQmNCh0Jcg0YDQsNC30LvQuNGH0L3QvtCz0L4g0L3QsNC30L3QsNGH0LXQvdC40Y8g0Lgg0LzQtdC20L/Qu9Cw0L3QtdGC0L3Ri9GFINGB0YLQsNC90YbQuNC5LiAnLFxyXG4gICAgXSxcclxuICAgIGltYWdlOiAnLi9pbWFnZXMvZ3JvdXAvcm9ja2V0cy9wcm90b24vcHJvdG9uMi5qcGcnLFxyXG4gICAgYnRuVGV4dDogJ9CT0LDQu9C10YDQtdGPJyxcclxuICAgIHNsaWRlczogW1xyXG4gICAgICAnLi9pbWFnZXMvZ3JvdXAvcm9ja2V0cy9wcm90b24vcHJvdG9uMS5qcGcnLFxyXG4gICAgICAnLi9pbWFnZXMvZ3JvdXAvcm9ja2V0cy9wcm90b24vcHJvdG9uMi5qcGcnLFxyXG4gICAgICAnLi9pbWFnZXMvZ3JvdXAvcm9ja2V0cy9wcm90b24vcHJvdG9uMy5qcGcnLFxyXG4gICAgICAnLi9pbWFnZXMvZ3JvdXAvcm9ja2V0cy9wcm90b24vcHJvdG9uNC5qcGcnLFxyXG4gICAgICAnLi9pbWFnZXMvZ3JvdXAvcm9ja2V0cy9wcm90b24vcHJvdG9uNS5qcGcnLFxyXG4gICAgXSxcclxuICB9LFxyXG4gIHtcclxuICAgIGlkOiAncm9ja2V0cy9idXJhbicsXHJcbiAgICBjcnVtYnM6IFtcclxuICAgICAgeyBsaW5rOiAnLyMnLCB0aXRsZTogJ9CT0LvQsNCy0L3QsNGPJyB9LFxyXG4gICAgICB7IGxpbms6ICcvI3JvY2tldHMnLCB0aXRsZTogJ9Ca0L7RgdC80LjRh9C10YHQutC40LUg0LDQv9C/0LDRgNCw0YLRiycgfSxcclxuICAgICAge1xyXG4gICAgICAgIGxpbms6IG51bGwsXHJcbiAgICAgICAgdGl0bGU6ICfQkdGD0YDQsNC9JyxcclxuICAgICAgfSxcclxuICAgIF0sXHJcbiAgICB0aXRsZTogJ9Ca0L7RgdC80LjRh9C10YHQutC40Lkg0LrQvtGA0LDQsdC70YwgXCLQkdGD0YDQsNC9XCInLFxyXG4gICAgdGV4dDogW1xyXG4gICAgICAnwqvQkdGD0YDQsNC9wrsg4oCUINC80L3QvtCz0L7RgNCw0LfQvtCy0YvQuSDQutC+0YHQvNC40YfQtdGB0LrQuNC5INC60L7RgNCw0LHQu9GMLCDRgdC/0L7RgdC+0LHQvdGL0Lkg0LrQsNC6INC00L7RgdGC0LDQstC70Y/RgtGMINGA0LDQt9C70LjRh9C90YvQtSDQs9GA0YPQt9GLINC90LAg0L7RgNCx0LjRgtGDLCDRgtCw0Log0Lgg0LLQvtC30LLRgNCw0YnQsNGC0Ywg0LjRhSDQvdCwINCX0LXQvNC70Y4uINCh0L/QtdGG0LjQsNC70LjRgdGC0Ysg0YHRh9C40YLQsNGO0YIsINGH0YLQviDRgNCw0LrQtdGC0L7Qv9C70LDQvSDQs9C40L/QvtGC0LXRgtC40YfQtdGB0LrQuCDQvNC+0LMg0YHQv9Cw0YHRgtC4IMKr0JzQuNGAwrs6INCyINC10LPQviDQs9GA0YPQt9C+0LLQvtC5INC+0YLRgdC10Log0YHQv9C+0LrQvtC50L3QviDQv9C+0LzQtdGB0YLQuNC70YHRjyDQsdGLINC70Y7QsdC+0Lkg0LzQvtC00YPQu9GMINGB0L7QstC10YLRgdC60L7QuSDQvtGA0LHQuNGC0LDQu9GM0L3QvtC5INGB0YLQsNC90YbQuNC4LCDQt9Cw0YLQvtC/0LvQtdC90L3QvtC5INCyIDIwMDEg0LPQvtC00YMuINCSINGC0L7QvCDQttC1INC+0YLRgdC10LrQtSDQutC+0L3RgdGC0YDRg9C60YLQvtGA0Ysg0L/RgNC10LTQu9Cw0LPQsNC70Lgg0LTQu9GPINC/0LjQu9C+0YLQuNGA0YPQtdC80YvRhSDQuNGB0L/Ri9GC0LDRgtC10LvRjNC90YvRhSDQv9C+0LvRkdGC0L7QsiDRgNCw0LfQvNC10YHRgtC40YLRjCDRgdC/0YPRgdC60LDQtdC80YvQuSDQsNC/0L/QsNGA0LDRgiDCq9Ch0L7RjtC30LDCuy4g0JIg0YHQu9GD0YfQsNC1INC90LXRiNGC0LDRgtC90L7QuSDRgdC40YLRg9Cw0YbQuNC4INGN0YLQviDQv9C+0LfQstC+0LvQuNC70L4g0LHRiyDRjdC60LjQv9Cw0LbRgyDCq9GN0LLQsNC60YPQuNGA0L7QstCw0YLRjNGB0Y/CuyDRgSDQvtGA0LHQuNGC0YsuJyxcclxuICAgIF0sXHJcbiAgICBpbWFnZTogJy4vaW1hZ2VzL2dyb3VwL3JvY2tldHMvYnVyYW4vYnVyYW4zLmpwZycsXHJcbiAgICBidG5UZXh0OiAn0JPQsNC70LXRgNC10Y8nLFxyXG4gICAgc2xpZGVzOiBbXHJcbiAgICAgICcuL2ltYWdlcy9ncm91cC9yb2NrZXRzL2J1cmFuL2J1cmFuMS5qcGcnLFxyXG4gICAgICAnLi9pbWFnZXMvZ3JvdXAvcm9ja2V0cy9idXJhbi9idXJhbjIuanBnJyxcclxuICAgICAgJy4vaW1hZ2VzL2dyb3VwL3JvY2tldHMvYnVyYW4vYnVyYW4zLmpwZycsXHJcbiAgICAgICcuL2ltYWdlcy9ncm91cC9yb2NrZXRzL2J1cmFuL2J1cmFuNC5qcGcnLFxyXG4gICAgICAnLi9pbWFnZXMvZ3JvdXAvcm9ja2V0cy9idXJhbi9idXJhbjUuanBnJyxcclxuICAgIF0sXHJcbiAgfSxcclxuICB7XHJcbiAgICBpZDogJ2VmZmVjdC9ibG9vZCcsXHJcbiAgICBjcnVtYnM6IFtcclxuICAgICAgeyBsaW5rOiAnLyMnLCB0aXRsZTogJ9CT0LvQsNCy0L3QsNGPJyB9LFxyXG4gICAgICB7IGxpbms6ICcvI2VmZmVjdCcsIHRpdGxlOiAn0JLQu9C40Y/QvdC40LUg0L3QsCDQvtGA0LPQsNC90LjQt9C8JyB9LFxyXG4gICAgICB7XHJcbiAgICAgICAgbGluazogbnVsbCxcclxuICAgICAgICB0aXRsZTogJ9Ca0YDQvtCy0LXQvdC+0YHRgtC90LDRjyDRgdC40YHRgtC10LzQsCcsXHJcbiAgICAgIH0sXHJcbiAgICBdLFxyXG4gICAgdGl0bGU6ICfQktC+0LfQtNC10LnRgdGC0LLQuNC1INC90LAg0LrRgNC+0LLQtdC90L7RgdC90YPRjiDRgdC40YHRgtC10LzRgycsXHJcbiAgICB0ZXh0OiBbXHJcbiAgICAgICfQodC40YHRgtC10LzQsCDQutGA0L7QstC+0L7QsdGA0LDRidC10L3QuNGPINC/0YDQuNGB0L/QvtGB0L7QsdC70LXQvdCwINC6INC30LXQvNC90L7QuSDQs9GA0LDQstC40YLQsNGG0LjQuC4g0KHQtdGA0LTRhtC1INGA0LDRgdC/0L7Qu9C+0LbQtdC90L4g0LLRi9GB0L7QutC+INC/0L4g0L7RgtC90L7RiNC10L3QuNGOINC6INC+0YHRgtCw0LvRjNC90YvQvCDQvtGA0LPQsNC90LDQvCwg0YfRgtC+0LHRiyDQu9GD0YfRiNC1INGB0L3QsNCx0LbQsNGC0Ywg0LrRgNC+0LLRjNGOINCy0LXRgNGF0L3RjtGOINGH0LDRgdGC0Ywg0YLQtdC70LAg0LgsINC60L7QvdC10YfQvdC+INC20LUsINC80L7Qt9CzLiDQndC+INCx0L7Qu9GM0YjQtSDQutGA0L7QstC4INCy0YHRkSDRgNCw0LLQvdC+INC/0L7RgdGC0YPQv9Cw0LXRgiDQsiDQvdC40LbQvdGO0Y4g0YfQsNGB0YLRjCDRgtC10LvQsCDQuCDQvNC10L3RjNGI0LUg4oCUINCyINCy0LXRgNGF0L3RjtGOLicsXHJcbiAgICAgICfQkiDRg9GB0LvQvtCy0LjRj9GFINC80LjQutGA0L7Qs9GA0LDQstC40YLQsNGG0LjQuCDQstGB0ZEg0YLQtdC70L4g0L/QvtC70YPRh9Cw0LXRgiDQutGA0L7QstGMICjQuCDQvtGB0YLQsNC70YzQvdGL0LUg0LbQuNC00LrQvtGB0YLQuCkg0LIg0YDQsNCy0L3QvtC8INC60L7Qu9C40YfQtdGB0YLQstC1LiDQmNC3LdC30LAg0Y3RgtC+0LPQviDQvdC+0LPQuCDRgdGC0LDQvdC+0LLRj9GC0YHRjyDRhdGD0LTQtdC1LCDQsCDQs9C+0LvQvtCy0LAg0YPQstC10LvQuNGH0LjQstCw0LXRgtGB0Y8g0LIg0YDQsNC30LzQtdGA0LDRhS4g0K3RgtC+INGB0LHQuNCy0LDQtdGCINGBINGC0L7Qu9C60YMg0L7RgNCz0LDQvdC40LfQvDog0LzQvtC30LMg0L/QvtC70YPRh9Cw0LXRgiDRgdC40LPQvdCw0LvRiyDQvtCxINC40LfQsdGL0YLQutC1INC20LjQtNC60L7RgdGC0Lgg0LIg0LLQtdGA0YXQvdC10Lkg0YfQsNGB0YLQuCDRgtC10LvQsCwg0Lgg0L/QvtGN0YLQvtC80YMg0L/QvtGH0LrQuCDQvdCw0YfQuNC90LDRjtGCINCw0LrRgtC40LLQvdC+INGD0LTQsNC70Y/RgtGMINC20LjQtNC60L7RgdGC0Ywg0LjQtyDQvtGA0LPQsNC90LjQt9C80LAsINC4INGH0LXQu9C+0LLQtdC6INC90LUg0LjRgdC/0YvRgtGL0LLQsNC10YIg0YfRg9Cy0YHRgtCy0L4g0LbQsNC20LTRiy4nLFxyXG4gICAgICAn0KLQsNC60L7QtSDQv9C+0LLQtdC00LXQvdC40LUg0YLQtdC70LAg0LzQvtC20LXRgiDQv9GA0LjQstC10YHRgtC4INC6INC+0LHQtdC30LLQvtC20LjQstCw0L3QuNGOLCDQtdGB0LvQuCDQutC+0YHQvNC+0L3QsNCy0YIg0L3QtSDQt9Cw0YHRgtCw0LLQu9GP0LXRgiDRgdC10LHRjyDQv9C40YLRjCwg0LTQsNC20LUg0LrQvtCz0LTQsCDQtdC80YMg0Y3RgtC+0LPQviDQvdC1INGF0L7Rh9C10YLRgdGPLicsXHJcbiAgICBdLFxyXG4gICAgaW1hZ2U6ICcuL2ltYWdlcy9ncm91cC9pbXBhY3QvYmxvb2QvYmxvb2Q1LmpwZycsXHJcbiAgICBidG5UZXh0OiAn0JPQsNC70LXRgNC10Y8nLFxyXG4gICAgc2xpZGVzOiBbXHJcbiAgICAgICcuL2ltYWdlcy9ncm91cC9pbXBhY3QvYmxvb2QvYmxvb2QxLmpwZycsXHJcbiAgICAgICcuL2ltYWdlcy9ncm91cC9pbXBhY3QvYmxvb2QvYmxvb2QyLmpwZycsXHJcbiAgICAgICcuL2ltYWdlcy9ncm91cC9pbXBhY3QvYmxvb2QvYmxvb2QzLmpwZycsXHJcbiAgICAgICcuL2ltYWdlcy9ncm91cC9pbXBhY3QvYmxvb2QvYmxvb2Q0LmpwZycsXHJcbiAgICAgICcuL2ltYWdlcy9ncm91cC9pbXBhY3QvYmxvb2QvYmxvb2Q1LmpwZycsXHJcbiAgICBdLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgaWQ6ICdlZmZlY3QvYm9uZXMnLFxyXG4gICAgY3J1bWJzOiBbXHJcbiAgICAgIHsgbGluazogJy8jJywgdGl0bGU6ICfQk9C70LDQstC90LDRjycgfSxcclxuICAgICAgeyBsaW5rOiAnLyNlZmZlY3QnLCB0aXRsZTogJ9CS0LvQuNGP0L3QuNC1INC90LAg0L7RgNCz0LDQvdC40LfQvCcgfSxcclxuICAgICAge1xyXG4gICAgICAgIGxpbms6IG51bGwsXHJcbiAgICAgICAgdGl0bGU6ICfQntC/0L7RgNC90L4t0LTQstC40LPQsNGC0LXQu9GM0L3Ri9C5INCw0L/Qv9Cw0YDQsNGCJyxcclxuICAgICAgfSxcclxuICAgIF0sXHJcbiAgICB0aXRsZTogJ9CS0L7Qt9C00LXQudGB0YLQstC40LUg0L3QsCDQvtC/0L7RgNC90L4t0LTQstC40LPQsNGC0LXQu9GM0L3Ri9C5INCw0L/Qv9Cw0YDQsNGCJyxcclxuICAgIHRleHQ6IFtcclxuICAgICAgJ9Ca0L7RgdGC0Lgg0YLQtdGA0Y/RjtGCINGB0LLQvtGOINC/0LvQvtGC0L3QvtGB0YLRjC4g0K3RgtC+INGP0LLQu9C10L3QuNC1INGB0LLRj9C30LDQvdC+INGBINGC0LXQvCwg0YfRgtC+INC90LDRhdC+0LbQtNC10L3QuNC1INCyINC90LXQstC10YHQvtC80L7RgdGC0Lgg0YEg0LrQsNC20LTRi9C8INC80LXRgdGP0YbQtdC8INGD0LzQtdC90YzRiNCw0LXRgiDQv9C70L7RgtC90L7RgdGC0Ywg0LrQvtGB0YLQtdC5INC60L7RgdC80L7QvdCw0LLRgtCwINC90LAgMSUg0LjQty3Qt9CwINCy0YvQvNGL0LLQsNC90LjRjyDQutCw0LvRjNGG0LjRjy4g0K3RgtC+INGD0LLQtdC70LjRh9C40LLQsNC10YIg0LLQtdGA0L7Rj9GC0L3QvtGB0YLRjCDQv9C10YDQtdC70L7QvNCwINC/0L4g0LLQvtC30LLRgNCw0YnQtdC90LjQuCDQvdCwINCX0LXQvNC70Y4uJyxcclxuICAgIF0sXHJcbiAgICBpbWFnZTogJy4vaW1hZ2VzL2dyb3VwL2ltcGFjdC9ib25lcy9ib25lczUuanBnJyxcclxuICAgIGJ0blRleHQ6ICfQk9Cw0LvQtdGA0LXRjycsXHJcbiAgICBzbGlkZXM6IFtcclxuICAgICAgJy4vaW1hZ2VzL2dyb3VwL2ltcGFjdC9ib25lcy9ib25lczEuanBnJyxcclxuICAgICAgJy4vaW1hZ2VzL2dyb3VwL2ltcGFjdC9ib25lcy9ib25lczIuanBnJyxcclxuICAgICAgJy4vaW1hZ2VzL2dyb3VwL2ltcGFjdC9ib25lcy9ib25lczMuanBnJyxcclxuICAgICAgJy4vaW1hZ2VzL2dyb3VwL2ltcGFjdC9ib25lcy9ib25lczQuanBnJyxcclxuICAgICAgJy4vaW1hZ2VzL2dyb3VwL2ltcGFjdC9ib25lcy9ib25lczUuanBnJyxcclxuICAgIF0sXHJcbiAgfSxcclxuICB7XHJcbiAgICBpZDogJ2VmZmVjdC9lbmRvY3JpbmUnLFxyXG4gICAgY3J1bWJzOiBbXHJcbiAgICAgIHsgbGluazogJy8jJywgdGl0bGU6ICfQk9C70LDQstC90LDRjycgfSxcclxuICAgICAgeyBsaW5rOiAnLyNlZmZlY3QnLCB0aXRsZTogJ9CS0LvQuNGP0L3QuNC1INC90LAg0L7RgNCz0LDQvdC40LfQvCcgfSxcclxuICAgICAge1xyXG4gICAgICAgIGxpbms6IG51bGwsXHJcbiAgICAgICAgdGl0bGU6ICfQrdC90L7QutGA0LjQvdC90LDRjyDRgdC40YHRgtC10LzQsCcsXHJcbiAgICAgIH0sXHJcbiAgICBdLFxyXG4gICAgdGl0bGU6ICfQktC+0LfQtNC10LnRgdGC0LLQuNC1INC90LAg0Y3QvdC00L7QutGA0LjQvdC90YPRjiDRgdC40YHRgtC10LzRgycsXHJcbiAgICB0ZXh0OiBbXHJcbiAgICAgICfQmNGB0YHQu9C10LTQvtCy0LDQvdC40LUg0LPQvtGA0LzQvtC90LDQu9GM0L3Ri9GFINC40LfQvNC10L3QtdC90LjQuSDQstC+INCy0YDQtdC80Y8g0LrQvtGB0LzQuNGH0LXRgdC60L7Qs9C+INC/0L7Qu9GR0YLQsCDigJQg0L7Rh9C10L3RjCDRgdC70L7QttC90YvQuSDQv9GA0L7RhtC10YHRgS4g0K3QvdC00L7QutGA0LjQvdC+0LvQvtCz0LDQvCDRgdC70L7QttC90L4g0L7RgtC70LjRh9C40YLRjCDQstC70LjRj9C90LjQtSDQvNC40LrRgNC+0LPRgNCw0LLQuNGC0LDRhtC40Lgg0L7RgiDQstC70LjRj9C90LjRjyDRgdGC0YDQtdGB0YHQsCDQstC+INCy0YDQtdC80Y8g0LLQt9C70ZHRgtCwLCDQv9GA0LXQsdGL0LLQsNC90LjRjyDQvdCwINC+0YDQsdC40YLQtSDQuCDQv9C+0YHQsNC00LrQuC4g0KXQvtGC0Y8g0LrQvtC1LdGH0YLQviDQvtCxINGN0L3QtNC+0LrRgNC40L3QvdC+0Lkg0YHQuNGB0YLQtdC80LUg0LLQviDQstGA0LXQvNGPINC/0YDQtdCx0YvQstCw0L3QuNGPINCyINC60L7RgdC80L7RgdC1INC40LfQstC10YHRgtC90L4uICcsXHJcbiAgICAgICfQndCw0L/RgNC40LzQtdGALCDQv9C+LdC00YDRg9Cz0L7QvNGDINGA0LDQsdC+0YLQsNC10YIg0LPQvtGA0LzQvtC9INGN0YDQuNGC0YDQvtC/0L7RjdGC0LjQvSwg0LjQty3Qt9CwINGH0LXQs9C+INGDINC60L7RgdC80L7QvdCw0LLRgtC+0LIg0YfQsNGJ0LUsINGH0LXQvCDRgyDQvtCx0YvRh9C90YvRhSDQu9GO0LTQtdC5LCDQvdCw0LHQu9GO0LTQsNC10YLRgdGPINCw0L3QtdC80LjRjy4g0JPQvtGA0LzQvtC90YssINGB0LLRj9C30LDQvdC90YvQtSDRgSDQv9C+0LvQvtC20LjRgtC10LvRjNC90YvQvNC4INGN0LzQvtGG0LjQvtC90LDQu9GM0L3Ri9C80Lgg0YDQtdCw0LrRhtC40Y/QvNC4INCy0YDQvtC00LUg0LTQvtC/0LDQvNC40L3QsCwg0L/QvtGH0LXQvNGDLdGC0L4g0LDQutGC0LjQstC40LfQuNGA0YPRjtGC0YHRjy4g0JAg0LjQty3Qt9CwINGB0L3QuNC20LXQvdC40Y8g0YTQuNC30LjRh9C10YHQutC40YUg0L3QsNCz0YDRg9C30L7QuiDQv9Cw0LTQsNC10YIg0Lgg0YfRg9Cy0YHRgtCy0LjRgtC10LvRjNC90L7RgdGC0Ywg0Log0LjQvdGB0YPQu9C40L3Rgywg0YfRgtC+INC80L7QttC10YIg0L/RgNC40LLQtdGB0YLQuCDQuiDQvdC10L/RgNC10LTRgdC60LDQt9GD0LXQvNGL0Lwg0L/QvtGB0LvQtdC00YHRgtCy0LjRj9C8LicsXHJcbiAgICBdLFxyXG4gICAgaW1hZ2U6ICcuL2ltYWdlcy9ncm91cC9pbXBhY3QvZW5kb2NyaW5lL2VuZG9jcmluZTUuanBnJyxcclxuICAgIGJ0blRleHQ6ICfQk9Cw0LvQtdGA0LXRjycsXHJcbiAgICBzbGlkZXM6IFtcclxuICAgICAgJy4vaW1hZ2VzL2dyb3VwL2ltcGFjdC9lbmRvY3JpbmUvZW5kb2NyaW5lMS5qcGcnLFxyXG4gICAgICAnLi9pbWFnZXMvZ3JvdXAvaW1wYWN0L2VuZG9jcmluZS9lbmRvY3JpbmUyLmpwZycsXHJcbiAgICAgICcuL2ltYWdlcy9ncm91cC9pbXBhY3QvZW5kb2NyaW5lL2VuZG9jcmluZTMuanBnJyxcclxuICAgICAgJy4vaW1hZ2VzL2dyb3VwL2ltcGFjdC9lbmRvY3JpbmUvZW5kb2NyaW5lNC5qcGcnLFxyXG4gICAgICAnLi9pbWFnZXMvZ3JvdXAvaW1wYWN0L2VuZG9jcmluZS9lbmRvY3JpbmU1LmpwZycsXHJcbiAgICBdLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgaWQ6ICdlZmZlY3QvbmVydm91cycsXHJcbiAgICBjcnVtYnM6IFtcclxuICAgICAgeyBsaW5rOiAnLyMnLCB0aXRsZTogJ9CT0LvQsNCy0L3QsNGPJyB9LFxyXG4gICAgICB7IGxpbms6ICcvI2VmZmVjdCcsIHRpdGxlOiAn0JLQu9C40Y/QvdC40LUg0L3QsCDQvtGA0LPQsNC90LjQt9C8JyB9LFxyXG4gICAgICB7XHJcbiAgICAgICAgbGluazogbnVsbCxcclxuICAgICAgICB0aXRsZTogJ9Cd0LXRgNCy0L3QsNGPINGB0LjRgdGC0LXQvNCwJyxcclxuICAgICAgfSxcclxuICAgIF0sXHJcbiAgICB0aXRsZTogJ9CS0L7Qt9C00LXQudGB0YLQstC40LUg0L3QsCDQvdC10YDQstC90YPRjiDRgdC40YHRgtC10LzRgycsXHJcbiAgICB0ZXh0OiBbXHJcbiAgICAgICfQntC00L3QsCDQuNC3INC/0YDQvtCx0LvQtdC8LCDRgSDQutC+0YLQvtGA0YvQvNC4INGB0YLQsNC70LrQuNCy0LDQtdGC0YHRjyDQutC+0YHQvNC+0L3QsNCy0YIsIOKAlCDRjdGC0L4g0YLQviwg0YfRgtC+INC90LAg0L7RgNCx0LjRgtC1INC90LXRgiDRgNCw0LfQtNC10LvQtdC90LjRjyDQvdCwINC00LXQvdGMINC4INC90L7Rh9GMLiDQmtC+0YHQvNC+0L3QsNCy0YLRiyDQstC40LTRj9GCINGA0LDRgdGB0LLQtdGCINC4INC30LDQutCw0YIg0L/QviDQvdC10YHQutC+0LvRjNC60L4g0YDQsNC3INC30LAg0LTQtdC90YwuINCSINC40YLQvtCz0LUg0YMg0L3QuNGFINC90LDRgNGD0YjQsNC10YLRgdGPINGA0LDQsdC+0YLQsCDRhtC40YDQutCw0LTQvdGL0YUg0YDQuNGC0LzQvtCyLCDRh9GC0L4g0LzQvtC20LXRgiDQv9GA0LjQstC10YHRgtC4INC6INC/0L7RgdGC0L7Rj9C90L3QvtC80YMg0L7RidGD0YnQtdC90LjRjiDRg9GB0YLQsNC70L7RgdGC0Lgg0Lgg0LTQuNGB0LrQvtC80YTQvtGA0YLQsC4nLFxyXG4gICAgICAn0JXRidGRINC+0LTQvdC+INC40YHQv9GL0YLQsNC90LjQtSDQtNC70Y8g0L3QtdGA0LLQvdC+0Lkg0YHQuNGB0YLQtdC80Ysg4oCUINGD0YHQu9C+0LLQuNGPINC80LjQutGA0L7Qs9GA0LDQstC40YLQsNGG0LjQuC4g0JzQvtC30LMg0YfQtdC70L7QstC10LrQsCDQtNC+0LvQttC10L0g0YPQv9GA0LDQstC70Y/RgtGMINC60L7QvdC10YfQvdC+0YHRgtGP0LzQuCDQsiDRgdGA0LXQtNC1LCDQs9C00LUg0LLQtdGA0YLQuNC60LDQu9GM0L3QsNGPINC+0YHRjCDRgtC10LvQsCDQsdC+0LvRjNGI0LUg0L3QtSDQtNC+0LzQuNC90LjRgNGD0LXRgi4g0J3QsCDQvtGA0LHQuNGC0LUg0YHRgtCw0L3QvtCy0LjRgtGB0Y8g0YHQu9C+0LbQvdC10LUg0LTQtdC70LDRgtGMINGF0LLQsNGC0LDRgtC10LvRjNC90YvQtSDQtNCy0LjQttC10L3QuNGPOiDQsiDQvdC10LLQtdGB0L7QvNC+0YHRgtC4INC70LXQs9GH0LUg0L/RgNC+0LzQsNGF0L3Rg9GC0YzRgdGPINC80LjQvNC+INC90YPQttC90L7Qs9C+INC/0YDQtdC00LzQtdGC0LAsINC4INGN0YLQviDRgtC+0LbQtSDQstCy0L7QtNC40YIg0LzQvtC30LMg0LIg0LfQsNCx0LvRg9C20LTQtdC90LjQtS4g0JzRi9GI0YbRiyDQtNCy0LjQs9Cw0Y7RgtGB0Y8g0L/Qvi3QvdC+0LLQvtC80YMg0Lgg0L/QvtGB0YvQu9Cw0Y7RgiDQsiDQvNC+0LfQsyDRgdC40LPQvdCw0LvRiywg0LrQvtGC0L7RgNGL0LUg0L7QvSDQvdC1INC30L3QsNC10YIsINC60LDQuiDQuNC90YLQtdGA0L/RgNC10YLQuNGA0L7QstCw0YLRjC4nLFxyXG4gICAgICAn0JIg0LjRgtC+0LPQtSDRhtC10L3RgtGA0LDQu9GM0L3QsNGPINC90LXRgNCy0L3QsNGPINGB0LjRgdGC0LXQvNCwINCw0LTQsNC/0YLQuNGA0YPQtdGC0YHRjyDQuiDQvdC+0LLRi9C8INGD0YHQu9C+0LLQuNGP0LwsINC90L4g0L3QsCDRjdGC0L4g0LzQvtC20LXRgiDQv9C+0YLRgNC10LHQvtCy0LDRgtGM0YHRjyDQtNC+INGI0LXRgdGC0Lgg0LzQtdGB0Y/RhtC10LIuJyxcclxuICAgIF0sXHJcbiAgICBpbWFnZTogJy4vaW1hZ2VzL2dyb3VwL2ltcGFjdC9uZXJ2b3VzL25lcnZvdXM1LmpwZycsXHJcbiAgICBidG5UZXh0OiAn0JPQsNC70LXRgNC10Y8nLFxyXG4gICAgc2xpZGVzOiBbXHJcbiAgICAgICcuL2ltYWdlcy9ncm91cC9pbXBhY3QvbmVydm91cy9uZXJ2b3VzMS5qcGcnLFxyXG4gICAgICAnLi9pbWFnZXMvZ3JvdXAvaW1wYWN0L25lcnZvdXMvbmVydm91czIuanBnJyxcclxuICAgICAgJy4vaW1hZ2VzL2dyb3VwL2ltcGFjdC9uZXJ2b3VzL25lcnZvdXMzLmpwZycsXHJcbiAgICAgICcuL2ltYWdlcy9ncm91cC9pbXBhY3QvbmVydm91cy9uZXJ2b3VzNC5qcGcnLFxyXG4gICAgICAnLi9pbWFnZXMvZ3JvdXAvaW1wYWN0L25lcnZvdXMvbmVydm91czUuanBnJyxcclxuICAgICAgJy4vaW1hZ2VzL2dyb3VwL2ltcGFjdC9uZXJ2b3VzL25lcnZvdXM2LmpwZycsXHJcbiAgICBdLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgaWQ6ICdlZmZlY3QvcmVzcGlyYXRvcnknLFxyXG4gICAgY3J1bWJzOiBbXHJcbiAgICAgIHsgbGluazogJy8jJywgdGl0bGU6ICfQk9C70LDQstC90LDRjycgfSxcclxuICAgICAgeyBsaW5rOiAnLyNlZmZlY3QnLCB0aXRsZTogJ9CS0LvQuNGP0L3QuNC1INC90LAg0L7RgNCz0LDQvdC40LfQvCcgfSxcclxuICAgICAge1xyXG4gICAgICAgIGxpbms6IG51bGwsXHJcbiAgICAgICAgdGl0bGU6ICfQoNC10YHQv9C40YDQsNGC0L7RgNC90LDRjyDRgdC40YHRgtC10LzQsCcsXHJcbiAgICAgIH0sXHJcbiAgICBdLFxyXG4gICAgdGl0bGU6ICfQktC+0LfQtNC10LnRgdGC0LLQuNC1INC90LAg0YDQtdGB0L/QuNGA0LDRgtC+0YDQvdGD0Y4g0YHQuNGB0YLQtdC80YMnLFxyXG4gICAgdGV4dDogW1xyXG4gICAgICAn0JfQsNC60LDRh9C10L3QvdGL0Lkg0LLQvdGD0YLRgNGMINCc0JrQoSDQstC+0LfQtNGD0YUg0L/QvtC80L7Qs9Cw0LXRgiDQutC+0YHQvNC+0L3QsNCy0YLQsNC8INC00YvRiNCw0YLRjCDQsdC10Lcg0L/QvtC80L7RidC4INC60LDQutC40YUt0LvQuNCx0L4g0YPRgdGC0YDQvtC50YHRgtCyLCDQvdC+INGH0LXQu9C+0LLQtdC6INC00YvRiNC40YIg0L3QsCDQvtGA0LHQuNGC0LUg0LLRgdGRINGA0LDQstC90L4g0L3QtSDRgtCw0LosINC60LDQuiDQvdCwINCX0LXQvNC70LUuINCe0YHQvdC+0LLQvdCw0Y8g0L/RgNC+0LHQu9C10LzQsCDQt9Cw0LrQu9GO0YfQsNC10YLRgdGPINCyINC40LfQvNC10L3QtdC90LjQuCDQutGA0L7QstC+0L7QsdGA0LDRidC10L3QuNGPIOKAlCDRhtC10LvQvtGB0YLQvdC+0YHRgtGMINC00YvRhdCw0YLQtdC70YzQvdC+0LPQviDQv9GA0L7RhtC10YHRgdCwINC90LDRgNGD0YjQsNC10YLRgdGPINC40Lct0LfQsCDQvdC10YPRgdGC0L7QudGH0LjQstC+0YHRgtC4INC00LLQuNC20LXQvdC40Y8g0LrRgNC+0LLQuCDQsiDQvdC10LLQtdGB0L7QvNC+0YHRgtC4LiDQrdGC0L4g0L/RgNC40LLQvtC00LjRgiDQuiDRgtC+0LzRgywg0YfRgtC+INGA0LXRgdC/0LjRgNCw0YLQvtGA0L3QsNGPINGB0LjRgdGC0LXQvNCwINC/0YDQvtC/0YPRgdC60LDQtdGCINC80LXQvdGM0YjQuNC1INC/0L7RgtC+0LrQuCDQstC+0LfQtNGD0YXQsCwg0YXQvtGC0Y8g0Y3RgtC+INC4INC90LUg0LLQu9C40Y/QtdGCINC90LAg0LbQuNC30L3QtdGB0L/QvtGB0L7QsdC90L7RgdGC0Ywg0L7RgNCz0LDQvdC40LfQvNCwLiDQmNC3LdC30LAg0Y3RgtC+0LPQviDQsiDQutC+0LvQuNGH0LXRgdGC0LLQtdC90L3QvtC8INCy0YvRgNCw0LbQtdC90LjQuCDRg9C80LXQvdGM0YjQsNC10YLRgdGPINCx0YDRjtGI0L3QvtC5INC+0YXQstCw0YIsINC90L4g0Y3RgtC+INC90LUg0L/RgNC40LLQvtC00LjRgiDQuiDQuNC30LzQtdC90LXQvdC40Y4g0L/QsNGC0YLQtdGA0L3QvtCyINC00YvRhdCw0L3QuNGPLicsXHJcbiAgICBdLFxyXG4gICAgaW1hZ2U6ICcuL2ltYWdlcy9ncm91cC9pbXBhY3QvcmVzcGlyYXRvcnkvcmVzcGlyYXRvcnkzLmpwZycsXHJcbiAgICBidG5UZXh0OiAn0JPQsNC70LXRgNC10Y8nLFxyXG4gICAgc2xpZGVzOiBbXHJcbiAgICAgICcuL2ltYWdlcy9ncm91cC9pbXBhY3QvcmVzcGlyYXRvcnkvcmVzcGlyYXRvcnkxLmpwZycsXHJcbiAgICAgICcuL2ltYWdlcy9ncm91cC9pbXBhY3QvcmVzcGlyYXRvcnkvcmVzcGlyYXRvcnkyLmpwZycsXHJcbiAgICAgICcuL2ltYWdlcy9ncm91cC9pbXBhY3QvcmVzcGlyYXRvcnkvcmVzcGlyYXRvcnkzLmpwZycsXHJcbiAgICAgICcuL2ltYWdlcy9ncm91cC9pbXBhY3QvcmVzcGlyYXRvcnkvcmVzcGlyYXRvcnk0LmpwZycsXHJcbiAgICAgICcuL2ltYWdlcy9ncm91cC9pbXBhY3QvcmVzcGlyYXRvcnkvcmVzcGlyYXRvcnk1LmpwZycsXHJcbiAgICBdLFxyXG4gIH0sXHJcbl07XHJcbiIsImV4cG9ydCBjbGFzcyBQYWdlNDA0IHtcclxuICBjb25zdHJ1Y3RvcigpIHtcclxuICAgIHRoaXMuaW5pdCgpO1xyXG4gIH1cclxuICBpbml0KCkge1xyXG4gICAgY29uc3QgbWFya3VwID0gYFxyXG4gICAgPGRpdiBjbGFzcz1cInBhZ2U0MDRcIj5cclxuICAgICAgICA8aDEgY2xhc3M9XCJwYWdlNDA0X190aXRsZVwiPtCi0LDQutC+0Lkg0YHRgtGA0LDQvdC40YbRiyDQvdC1INGB0YPRidC10YHRgtCy0YPQtdGCPC9oMT5cclxuICAgIDwvZGl2PlxyXG4gICAgYDtcclxuICAgIHRoaXMubGF5b3V0ID0gbmV3IERPTVBhcnNlcigpLnBhcnNlRnJvbVN0cmluZyhtYXJrdXAsICd0ZXh0L2h0bWwnKS5ib2R5LmZpcnN0Q2hpbGQ7XHJcbiAgfVxyXG4gIGRlc3Ryb3koKSB7XHJcbiAgICB0aGlzLmxheW91dC5yZW1vdmUoKTtcclxuICB9XHJcbiAgZ2V0IGVsZW1lbnQoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5sYXlvdXQ7XHJcbiAgfVxyXG59XHJcbiIsImV4cG9ydCBjbGFzcyBTbGlkZXIge1xyXG4gIC8qKlxyXG4gICAqIEBkZXNjcmlwdGlvblxyXG4gICAqIEBwYXJhbSB7c3RyaW5nW119IHNsaWRlcyDQnNCw0YHRgdC40LIg0L/Rg9GC0LXQuSDQuiDQuNC30L7QsdGA0LDQttC10L3QuNGP0LxcclxuICAgKi9cclxuICBjb25zdHJ1Y3RvcihzbGlkZXMgPSBbXSkge1xyXG4gICAgdGhpcy5zbGlkZXMgPSBzbGlkZXM7XHJcbiAgICB0aGlzLmluaXQoKTtcclxuICAgIHRoaXMuYWRkRXZlbnRMaXN0ZW5lcnMoKTtcclxuICAgIHRoaXMuZGlyZWN0aW9uID0gJ25leHQnO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQGRlc2NyaXB0aW9uINCY0L3QuNGG0LjQsNC70LjQt9Cw0YbQuNGPINGN0LvQtdC80LXQvdGC0L7QsiDRgdC70LDQudC00LXRgNCwXHJcbiAgICovXHJcbiAgaW5pdCgpIHtcclxuICAgIHRoaXMuc2xpZGVyID0gbmV3IERPTVBhcnNlcigpLnBhcnNlRnJvbVN0cmluZyh0aGlzLmdldFNsaWRlckh0bWxTdHJpbmcoKSwgJ3RleHQvaHRtbCcpLmJvZHkuZmlyc3RDaGlsZDtcclxuICAgIHRoaXMuc2xpZGVyQ29udGFpbmVyID0gdGhpcy5zbGlkZXIucXVlcnlTZWxlY3RvcignLnNsaWRlcl9fY29udGFpbmVyJyk7XHJcbiAgICB0aGlzLnNsaWRlc1JvdyA9IHRoaXMuc2xpZGVyLnF1ZXJ5U2VsZWN0b3IoJy5zbGlkZXJfX3JvdycpO1xyXG4gICAgdGhpcy5zbGlkZXNSb3cuc3R5bGUud2lkdGggPSB0aGlzLnNsaWRlc1Jvd1dpZHRoO1xyXG5cclxuICAgIHRoaXMuYWRkU2xpZGVySXRlbXMoKTtcclxuICAgIHRoaXMuZ2V0QnV0dG9ucygpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQHJldHVybnMg0KDQsNC30LzQtdGC0LrRgyDRgdC70LDQudC00LXRgNCwINCyINCy0LjQtNC1INGB0YLRgNC+0LrQuFxyXG4gICAqL1xyXG4gIGdldFNsaWRlckh0bWxTdHJpbmcoKSB7XHJcbiAgICByZXR1cm4gYFxyXG4gICAgPGRpdiBjbGFzcz1cInNsaWRlclwiPlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJzbGlkZXJfX2NvbnRhaW5lclwiPlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwic2xpZGVyX19yb3dcIj48L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgIDwvZGl2PlxyXG4gICAgYDtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEBkZXNjcmlwdGlvbiDQlNC+0LHQsNC70Y/QtdGCINGB0LvQsNC50LTRiyDQsiDRgdC70LDQudC00LXRgFxyXG4gICAqL1xyXG4gIGFkZFNsaWRlckl0ZW1zKCkge1xyXG4gICAgdGhpcy5zbGlkZXMuZm9yRWFjaCgoc2xpZGUpID0+IHtcclxuICAgICAgY29uc3Qgc2xpZGVJdGVtU3J0ID0gYFxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJzbGlkZXJfX2l0ZW1cIj5cclxuICAgICAgICAgICAgPGltZyBzcmM9XCIke3NsaWRlfVwiIGFsdD1cInNsaWRlXCIgLz5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgICBgO1xyXG4gICAgICBjb25zdCBzbGlkZUl0ZW0gPSBuZXcgRE9NUGFyc2VyKCkucGFyc2VGcm9tU3RyaW5nKHNsaWRlSXRlbVNydCwgJ3RleHQvaHRtbCcpLmJvZHkuZmlyc3RDaGlsZDtcclxuICAgICAgc2xpZGVJdGVtLnN0eWxlLndpZHRoID0gdGhpcy5zbGlkZVdpZHRoO1xyXG4gICAgICB0aGlzLnNsaWRlc1Jvdy5hcHBlbmQoc2xpZGVJdGVtKTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQGRlc2NyaXB0aW9uINCh0L7Qt9C00LDQtdGCINC60L3QvtC/0LrQuCDRgdC70LDQudC00LXRgNCwINC4INC00L7QsdCw0LLQu9GP0LXRgiDQuNGFINCyINGA0LDQt9C80LXRgtC60YNcclxuICAgKi9cclxuICBnZXRCdXR0b25zKCkge1xyXG4gICAgY29uc3QgYnV0dG9uQ29udGFpbmVyID0gdGhpcy5zbGlkZXIucXVlcnlTZWxlY3RvcignLnNsaWRlcl9fY29udGFpbmVyJyk7XHJcbiAgICBjb25zdCBidG5QcmV2ID0gYFxyXG4gICAgPGJ1dHRvbiBjbGFzcz1cInNsaWRlcl9fYnRuLXByZXZcIj5cclxuICAgICAgICA8aW1nIHNyYz1cIi4vaW1hZ2VzL3NsaWRlci9idG5fcHJldi5wbmdcIiBhbHQ9XCJidXR0b25cIiAvPlxyXG4gICAgPC9idXR0b24+ICAgIFxyXG4gICAgYDtcclxuXHJcbiAgICBjb25zdCBidG5OZXh0ID0gYFxyXG4gICAgPGJ1dHRvbiBjbGFzcz1cInNsaWRlcl9fYnRuLW5leHRcIj5cclxuICAgICAgICA8aW1nIHNyYz1cIi4vaW1hZ2VzL3NsaWRlci9idG5fbmV4dC5wbmdcIiBhbHQ9XCJidXR0b25cIiAvPlxyXG4gICAgPC9idXR0b24+XHJcbiAgICBgO1xyXG5cclxuICAgIHRoaXMucHJldkJ1dHRvbiA9IG5ldyBET01QYXJzZXIoKS5wYXJzZUZyb21TdHJpbmcoYnRuUHJldiwgJ3RleHQvaHRtbCcpLmJvZHkuZmlyc3RDaGlsZDtcclxuICAgIHRoaXMubmV4dEJ1dHRvbiA9IG5ldyBET01QYXJzZXIoKS5wYXJzZUZyb21TdHJpbmcoYnRuTmV4dCwgJ3RleHQvaHRtbCcpLmJvZHkuZmlyc3RDaGlsZDtcclxuICAgIGJ1dHRvbkNvbnRhaW5lci5hcHBlbmQodGhpcy5wcmV2QnV0dG9uLCB0aGlzLm5leHRCdXR0b24pO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQGRlc2NyaXB0aW9uINCU0L7QsdCw0LLQu9GP0LXRgiDRgdC70YPRiNCw0YLQtdC70Lgg0YHQvtCx0YvRgtC40LlcclxuICAgKi9cclxuICBhZGRFdmVudExpc3RlbmVycygpIHtcclxuICAgIHRoaXMuZXZlbnRMaXN0ZW5lcnMuZm9yRWFjaCgobGlzdGVuZXIpID0+IHtcclxuICAgICAgbGlzdGVuZXIudGFyZ2V0SXRlbS5hZGRFdmVudExpc3RlbmVyKGxpc3RlbmVyLmV2ZW50LCBsaXN0ZW5lci5jYWxsYmFjay5iaW5kKHRoaXMpKTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQGRlc2NyaXB0aW9uINCj0LTQsNC70Y/QtdGCINGB0LvRg9GI0LDRgtC10LvQuCDRgdC+0LHRi9GC0LjQuVxyXG4gICAqL1xyXG4gIHJlbW92ZUV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgdGhpcy5ldmVudExpc3RlbmVycy5mb3JFYWNoKChsaXN0ZW5lcikgPT4ge1xyXG4gICAgICBsaXN0ZW5lci50YXJnZXRJdGVtLnJlbW92ZUV2ZW50TGlzdGVuZXIobGlzdGVuZXIuZXZlbnQsIGxpc3RlbmVyLmNhbGxiYWNrKTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQGRlc2NyaXB0aW9uINCf0L7QutCw0LfRi9Cy0LDQtdGCINGB0LvQtdC00YPRjtGJ0LjQuSDRgdC70LDQudC0XHJcbiAgICovXHJcbiAgc2hvd05leHRTbGlkZSgpIHtcclxuICAgIGlmICh0aGlzLmRpcmVjdGlvbiA9PT0gJ3ByZXYnKSB7XHJcbiAgICAgIHRoaXMuZGlyZWN0aW9uID0gJ25leHQnO1xyXG4gICAgICB0aGlzLnNsaWRlc1Jvdy5wcmVwZW5kKHRoaXMuc2xpZGVzUm93Lmxhc3RFbGVtZW50Q2hpbGQpO1xyXG4gICAgfVxyXG4gICAgdGhpcy5idXR0b25zRGlzYWJsZWQgPSB0cnVlO1xyXG4gICAgdGhpcy5zbGlkZXJDb250YWluZXIuc3R5bGUgPSAnanVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0JztcclxuICAgIHRoaXMuc2xpZGVzUm93LnN0eWxlID0gYFxyXG4gICAgICAgIHdpZHRoOiAke3RoaXMuc2xpZGVzUm93V2lkdGh9O1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtJHt0aGlzLnNsaWRlV2lkdGh9KVxyXG4gICAgYDtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEBkZXNjcmlwdGlvbiDQn9C+0LrQsNC30YvQstCw0LXRgiDQv9GA0LXQtNGL0LTRg9GJ0LjQuSDRgdC70LDQudC0XHJcbiAgICovXHJcbiAgc2hvd1ByZXZpb3VzU2xpZGUoKSB7XHJcbiAgICBpZiAodGhpcy5kaXJlY3Rpb24gPT09ICduZXh0Jykge1xyXG4gICAgICB0aGlzLmRpcmVjdGlvbiA9ICdwcmV2JztcclxuICAgICAgdGhpcy5zbGlkZXNSb3cuYXBwZW5kKHRoaXMuc2xpZGVzUm93LmZpcnN0RWxlbWVudENoaWxkKTtcclxuICAgIH1cclxuICAgIHRoaXMuYnV0dG9uc0Rpc2FibGVkID0gdHJ1ZTtcclxuICAgIHRoaXMuc2xpZGVyQ29udGFpbmVyLnN0eWxlID0gJ2p1c3RpZnktY29udGVudDogZmxleC1lbmQnO1xyXG4gICAgdGhpcy5zbGlkZXNSb3cuc3R5bGUgPSBgXHJcbiAgICAgICAgd2lkdGg6ICR7dGhpcy5zbGlkZXNSb3dXaWR0aH07XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKCR7dGhpcy5zbGlkZVdpZHRofSlcclxuICAgIGA7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBAZGVzY3JpcHRpb24g0J/QtdGA0LXRgdGC0LDQstC70Y/QtdGCINGB0LvQsNC50LTRiyDQuCDQu9C10L3RgtGDINGB0LvQsNC50LTQvtCyLiDQktGL0L/QvtC70L3Rj9C10YLRgdGPINC/0L4g0L7QutC+0L3Rh9Cw0L3QuNC4INCw0L3QuNC80LDRhtC40LhcclxuICAgKi9cclxuICBmaW5pc2hBbmltYXRpb24oKSB7XHJcbiAgICB0aGlzLmRpcmVjdGlvbiA9PT0gJ25leHQnID8gdGhpcy5zbGlkZXNSb3cuYXBwZW5kKHRoaXMuc2xpZGVzUm93LmZpcnN0RWxlbWVudENoaWxkKSA6IHRoaXMuc2xpZGVzUm93LnByZXBlbmQodGhpcy5zbGlkZXNSb3cubGFzdEVsZW1lbnRDaGlsZCk7XHJcblxyXG4gICAgdGhpcy5zbGlkZXNSb3cuc3R5bGUgPSBgXHJcbiAgICAgIHRyYW5zaXRpb246IG5vbmU7XHJcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcclxuICAgICAgd2lkdGg6ICR7dGhpcy5zbGlkZXNSb3dXaWR0aH07XHJcbiAgICBgO1xyXG4gICAgdGhpcy5idXR0b25zRGlzYWJsZWQgPSBmYWxzZTtcclxuICAgIHNldFRpbWVvdXQoKCkgPT4gKHRoaXMuc2xpZGVzUm93LnN0eWxlLnRyYW5zaXRpb24gPSAnMC4zcycpKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEBkZXNjcmlwdGlvbiDQktC+0YHQv9GA0L7QuNC30LLQvtC00LjRgiDQv9C+0LrQsNC3INGB0LvQtdC00YPRjtGJ0LXQs9C+INGB0LvQsNC50LTQsCDQsiDQsNCy0YLQvtC80LDRgtC40YfQtdGB0LrQvtC8INGA0LXQttC40LzQtSDRgSDQt9Cw0LTQsNC90L3Ri9C8INC40L3RgtC10YDQstCw0LvQvtC8XHJcbiAgICogQHBhcmFtIHtudW1iZXJ9IGRlbGF5INCX0LDQtNC10YDQttC60LAsINGBINC60L7RgtC+0YDQvtC5INCx0YPQtNC10YIg0L/RgNC+0LjQt9Cy0L7QtNC40YLRgdGPINGB0LzQtdC90LAg0YHQu9Cw0LnQtNC+0LJcclxuICAgKi9cclxuICBhdXRvUGxheShkZWxheSkge1xyXG4gICAgc2V0SW50ZXJ2YWwoKCkgPT4gdGhpcy5zaG93TmV4dFNsaWRlKCksIGRlbGF5KTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEBkZXNjcmlwdGlvbiDQo9C90LjRh9GC0L7QttCw0LXRgiDRjdC60LfQtdC80L/Qu9GP0YAg0LrQvtC80L/QvtC90LXQvdGC0LAg0Lgg0YPQtNCw0LvRj9C10YIg0YHQu9GD0YjQsNGC0LXQu9C4INGB0L7QsdGL0YLQuNC5XHJcbiAgICovXHJcbiAgZGVzdHJveSgpIHtcclxuICAgIHRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcnMoKTtcclxuICAgIHRoaXMuc2xpZGVyLnJlbW92ZSgpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQGRlc2NyaXB0aW9uINCj0L/RgNCw0LLQu9GP0LXRgiDQtNC+0YHRgtGD0L/QvdC+0YHRgtGM0Y4g0LrQvdC+0L/QvtC6INGB0LvQsNC50LTQtdGA0LBcclxuICAgKiBAcGFyYW0ge2Jvb2xlYW59IHZhbHVlINCX0L3QsNGH0LXQvdC40LUg0LTQvtGB0YLRg9C/0L3QvtGB0YLQuCDQutC90L7Qv9C+0Log0YHQu9Cw0LnQtNC10YDQsFxyXG4gICAqL1xyXG4gIHNldCBidXR0b25zRGlzYWJsZWQodmFsdWUpIHtcclxuICAgIHRoaXMuc2xpZGVyQnV0dG9ucy5mb3JFYWNoKChidXR0b24pID0+IChidXR0b24uZGlzYWJsZWQgPSB2YWx1ZSkpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQHJldHVybnMg0JzQsNGB0YHQuNCyINC60L3QvtC/0L7QuiDRgdC70LDQudC00LXRgNCwXHJcbiAgICovXHJcbiAgZ2V0IHNsaWRlckJ1dHRvbnMoKSB7XHJcbiAgICByZXR1cm4gW3RoaXMubmV4dEJ1dHRvbiwgdGhpcy5wcmV2QnV0dG9uXTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEByZXR1cm5zINCo0LjRgNC40L3QsCDRgdC70LDQudC00LBcclxuICAgKi9cclxuICBnZXQgc2xpZGVXaWR0aCgpIHtcclxuICAgIHJldHVybiBgJHsxMDAgLyB0aGlzLnNsaWRlcy5sZW5ndGh9JWA7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBAcmV0dXJucyDQqNC40YDQuNC90LAg0LvQtdC90YLRiyDRgdC70LDQudC00L7QslxyXG4gICAqL1xyXG4gIGdldCBzbGlkZXNSb3dXaWR0aCgpIHtcclxuICAgIHJldHVybiBgJHsxMDAgKiB0aGlzLnNsaWRlcy5sZW5ndGh9JWA7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBAcmV0dXJucyDQnNCw0YHRgdC40LIg0LTQu9GPINGD0YHRgtCw0L3QvtCy0LrQuC/Rg9C00LDQu9C10L3QuNGPINGB0LvRg9GI0LDRgtC10LvQtdC5INGB0L7QsdGL0YLQuNC5XHJcbiAgICovXHJcbiAgZ2V0IGV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgcmV0dXJuIFtcclxuICAgICAge1xyXG4gICAgICAgIHRhcmdldEl0ZW06IHRoaXMubmV4dEJ1dHRvbixcclxuICAgICAgICBldmVudDogJ2NsaWNrJyxcclxuICAgICAgICBjYWxsYmFjazogdGhpcy5zaG93TmV4dFNsaWRlLFxyXG4gICAgICB9LFxyXG4gICAgICB7XHJcbiAgICAgICAgdGFyZ2V0SXRlbTogdGhpcy5wcmV2QnV0dG9uLFxyXG4gICAgICAgIGV2ZW50OiAnY2xpY2snLFxyXG4gICAgICAgIGNhbGxiYWNrOiB0aGlzLnNob3dQcmV2aW91c1NsaWRlLFxyXG4gICAgICB9LFxyXG4gICAgICB7XHJcbiAgICAgICAgdGFyZ2V0SXRlbTogdGhpcy5zbGlkZXNSb3csXHJcbiAgICAgICAgZXZlbnQ6ICd0cmFuc2l0aW9uZW5kJyxcclxuICAgICAgICBjYWxsYmFjazogdGhpcy5maW5pc2hBbmltYXRpb24sXHJcbiAgICAgIH0sXHJcbiAgICBdO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQHJldHVybnMgSFRNTCDRgNCw0LfQvNC10YLQutCwINGB0LvQsNC50LTQtdGA0LBcclxuICAgKi9cclxuICBnZXQgZWxlbWVudCgpIHtcclxuICAgIHJldHVybiB0aGlzLnNsaWRlcjtcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IHsgU2xpZGVyIH0gZnJvbSAnLi4vbGliL3NsaWRlcic7XHJcblxyXG5leHBvcnQgY2xhc3MgUHJldmlldyB7XHJcbiAgLyoqXHJcbiAgICogQHR5cGVkZWYge09iamVjdH0gU2xpZGVyT2JqXHJcbiAgICogQHByb3BlcnR5IHtzdHJpbmdbXX0gc2xpZGVzINCc0LDRgdGB0LjQsiDQv9GD0YLQtdC5INC6INC40LfQvtCx0YDQsNC20LXQvdC40Y/QvFxyXG4gICAqL1xyXG5cclxuICAvKipcclxuICAgKiBAdHlwZWRlZiB7T2JqZWN0fSBQcmV2aWV3T3B0aW9uc09ialxyXG4gICAqIEBwcm9wZXJ0eSB7U2xpZGVyT2JqfSBzbGlkZXIg0J7QsdGK0LXQutGCINGBINC90LDRgdGC0YDQvtC50LrQsNC80Lgg0LTQu9GPINGB0LvQsNC50LTQtdGA0LBcclxuICAgKiBAcHJvcGVydHkge3N0cmluZ30gdGhlbWUg0KLQtdC80LAg0LrRg9GA0YHQvtCy0L7QuSDRgNCw0LHQvtGC0YtcclxuICAgKiBAcHJvcGVydHkge3N0cmluZ30gc2xvZ2FuINCh0LvQvtCz0LDQvVxyXG4gICAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBzbG9nYW5BdXRob3Ig0JDQstGC0L7RgCDRgdC70L7Qs9Cw0L3QsFxyXG4gICAqL1xyXG5cclxuICAvKipcclxuICAgKiBAZGVzY3JpcHRpb24g0J7QsdGK0LXQutGCINGBINC90LDRgdGC0YDQvtC50LrQsNC80Lgg0LTQu9GPINC60L7QvNC/0L7QvdC10L3RgtC+0LIgUHJldmlldyDQuCBTbGlkZXJcclxuICAgKiBAcGFyYW0ge1ByZXZpZXdPcHRpb25zT2JqfSBvcHRpb25zXHJcbiAgICovXHJcblxyXG4gIGNvbnN0cnVjdG9yKG9wdGlvbnMpIHtcclxuICAgIHRoaXMub3B0aW9ucyA9IHtcclxuICAgICAgc2xpZGVyOiB7fSxcclxuICAgICAgdGhlbWU6ICcnLFxyXG4gICAgICBzbG9nYW46ICcnLFxyXG4gICAgICBzbG9nYW5BdXRob3I6ICcnLFxyXG4gICAgfTtcclxuICAgIGlmIChvcHRpb25zKSB7XHJcbiAgICAgIHRoaXMub3B0aW9ucyA9IE9iamVjdC5hc3NpZ24odGhpcy5vcHRpb25zLCBvcHRpb25zKTtcclxuICAgIH1cclxuICAgIHRoaXMuaW5pdCgpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQGRlc2NyaXB0aW9uINCY0L3QuNGG0LjQsNC70LjQt9Cw0YbQuNGPINGN0LvQtdC80LXQvdGC0L7QsiDRgdGC0YDQsNC90LjRhtGLXHJcbiAgICovXHJcbiAgaW5pdCgpIHtcclxuICAgIHRoaXMucHJldmlldyA9IG5ldyBET01QYXJzZXIoKS5wYXJzZUZyb21TdHJpbmcodGhpcy5nZXRQcmV2aWV3SHRtbCgpLCAndGV4dC9odG1sJykuYm9keS5maXJzdENoaWxkO1xyXG4gICAgdGhpcy5hcHBlbmRTbGlkZXIodGhpcy5vcHRpb25zLnNsaWRlci5zbGlkZXMpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQHJldHVybnMg0KDQsNC30LzQtdGC0LrQsCDRgdGC0YDQsNC90LjRhtGLINCyINGB0YLRgNC+0LrQvtCy0L7QvCDRhNC+0YDQvNCw0YLQtVxyXG4gICAqL1xyXG4gIGdldFByZXZpZXdIdG1sKCkge1xyXG4gICAgcmV0dXJuIGBcclxuICAgICAgICA8ZGl2IGNsYXNzPVwicHJldmlld1wiPlxyXG4gICAgICAgICAgPGRpdiBjbGFzcz1cImNvbnRhaW5lclwiPlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwicHJldmlld19fY29udGFpbmVyXCI+XHJcbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInByZXZpZXdfX2hlYWRlclwiPiR7dGhpcy5vcHRpb25zLnRoZW1lfTwvZGl2PlxyXG4gICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwcmV2aWV3X193cmFwcGVyXCI+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicHJldmlld19fdGl0bGUtd3JhcHBlclwiPlxyXG4gICAgICAgICAgICAgICAgICA8aDMgY2xhc3M9XCJwcmV2aWV3X190aXRsZVwiPiR7dGhpcy5vcHRpb25zLnNsb2dhbn08L2gzPlxyXG4gICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cInByZXZpZXdfX3RpdGxlLWF1dGhvclwiPiR7dGhpcy5vcHRpb25zLnNsb2dhbkF1dGhvcn08L3NwYW4+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgICBgO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQGRlc2NyaXB0aW9uINCU0L7QsdCw0LLQu9GP0LXRgiDRgdC70LDQudC00LXRgCDQvdCwINGB0YLRgNCw0L3QuNGG0YNcclxuICAgKiBAcGFyYW0ge1NsaWRlck9ian0gc2xpZGVzINCc0LDRgdGB0LjQsiDRgSDQv9GD0YLRj9C80Lgg0Log0LjQt9C+0LHRgNCw0LbQtdC90LjRj9C8INC00LvRjyDRgdC70LDQudC00LXRgNCwXHJcbiAgICovXHJcbiAgYXBwZW5kU2xpZGVyKHNsaWRlcykge1xyXG4gICAgY29uc3Qgc2xpZGVyQ29udGFpbmVyID0gdGhpcy5wcmV2aWV3LnF1ZXJ5U2VsZWN0b3IoJy5wcmV2aWV3X193cmFwcGVyJyk7XHJcbiAgICB0aGlzLnNsaWRlciA9IG5ldyBTbGlkZXIoc2xpZGVzKTtcclxuICAgIHNsaWRlckNvbnRhaW5lci5wcmVwZW5kKHRoaXMuc2xpZGVyLmVsZW1lbnQpO1xyXG4gICAgdGhpcy5zbGlkZXIuYXV0b1BsYXkoNTAwMCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBAZGVzY3JpcHRpb24g0YPQvdC40YfRgtC+0LbQsNC10YIg0Y3QutC30LXQvNC/0LvRj9GAINC60L7QvNC/0L7QvdC10L3RgtCwINGB0YDQsNC90LjRhtGLXHJcbiAgICovXHJcbiAgZGVzdHJveSgpIHtcclxuICAgIHRoaXMuc2xpZGVyLmRlc3Ryb3koKTtcclxuICAgIHRoaXMucHJldmlldy5yZW1vdmUoKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEByZXR1cm5zIEhUTUwg0YDQsNC30LzQtdGC0LrQsCDRgdGC0YDQsNC90LjRhtGLXHJcbiAgICovXHJcbiAgZ2V0IGVsZW1lbnQoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5wcmV2aWV3O1xyXG4gIH1cclxufVxyXG4iLCJleHBvcnQgY2xhc3MgVGVtYXRpY0Jsb2NrIHtcclxuICAvKipcclxuICAgKiBAdHlwZWRlZiB7T2JqZWN0fSBUZW1hdGljQmxvY2tPYmpcclxuICAgKiBAcHJvcGVydHkge3N0cmluZ30gaW1hZ2Ug0KHRgdGL0LvQutCwINC90LAg0LrQsNGA0YLQuNC90LrRg1xyXG4gICAqIEBwcm9wZXJ0eSB7c3RyaW5nfSB0aXRsZSDQl9Cw0LPQvtC70L7QstC+0LpcclxuICAgKiBAcHJvcGVydHkge3N0cmluZ1tdfSB0ZXh0INCc0LDRgdGB0LjQsiDQtNC70Y8g0YHQvtC30LTQsNC90LjRjyDQv9Cw0YDQsNCz0YDQsNGE0L7QsiDRgSDRgtC10LrRgdGC0L7QvFxyXG4gICAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBsaW5rINCh0YHRi9C70LrQsCwg0LrQvtGC0L7RgNCw0Y8g0LHRg9C00LXRgiDQvtGC0L7QsdGA0LDQttC10L3QsCDRgSDQsNC00YDQtdGB0L3QvtC5INGB0YLRgNC+0LrQtSDQsdGA0LDRg9C30LXRgNCwXHJcbiAgICogQHByb3BlcnR5IHtzdHJpbmd9IGJ1dHRvblRleHQg0KLQtdC60YHRgiDQtNC70Y8g0LrQvdC+0L/QutC4INCx0LvQvtC60LBcclxuICAgKi9cclxuXHJcbiAgLyoqXHJcbiAgICogQHBhcmFtIHtUZW1hdGljQmxvY2tPYmp9IG9wdGlvbnNcclxuICAgKi9cclxuICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7XHJcbiAgICB0aGlzLm9wdGlvbnMgPSB7XHJcbiAgICAgIGltYWdlOiAnJyxcclxuICAgICAgdGl0bGU6ICcnLFxyXG4gICAgICB0ZXh0OiBbXSxcclxuICAgICAgbGluazogJycsXHJcbiAgICAgIGJ1dHRvblRleHQ6ICcnLFxyXG4gICAgfTtcclxuXHJcbiAgICBpZiAob3B0aW9ucykge1xyXG4gICAgICB0aGlzLm9wdGlvbnMgPSBPYmplY3QuYXNzaWduKHRoaXMub3B0aW9ucywgb3B0aW9ucyk7XHJcbiAgICB9XHJcbiAgICB0aGlzLmluaXQodGhpcy5vcHRpb25zKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEBkZXNjcmlwdGlvbiDQmNC90LjRhtC40LDQu9C40LfQsNGG0LjRjyDRjdC70LXQvNC10L3RgtC+0LIg0YHRgtGA0LDQvdC40YbRi1xyXG4gICAqL1xyXG4gIGluaXQoc2V0dGluZ3MpIHtcclxuICAgIHRoaXMuYmxvY2sgPSBuZXcgRE9NUGFyc2VyKCkucGFyc2VGcm9tU3RyaW5nKHRoaXMuZ2V0QmxvY2tIdG1sU3RyaW5nKCksICd0ZXh0L2h0bWwnKS5ib2R5LmZpcnN0Q2hpbGQ7XHJcbiAgICB0aGlzLmFkZFRleHRUb0Jsb2NrKHNldHRpbmdzKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEByZXR1cm5zINCg0LDQt9C80LXRgtC60LAg0YHRgtGA0LDQvdC40YbRiyDQsiDRgdGC0YDQvtC60L7QstC+0Lwg0YTQvtGA0LzQsNGC0LVcclxuICAgKi9cclxuICBnZXRCbG9ja0h0bWxTdHJpbmcoKSB7XHJcbiAgICByZXR1cm4gYFxyXG4gICAgPHNlY3Rpb24gY2xhc3M9XCJjYXRlZ29yeVwiPlxyXG4gICAgPGRpdiBjbGFzcz1cImNvbnRhaW5lclwiPlxyXG4gICAgICA8ZGl2IGNsYXNzPVwiY2F0ZWdvcnlfX3dyYXBwZXJcIj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwiY2F0ZWdvcnlfX2NvbnRlbnQtd3JhcHBlclwiPlxyXG4gICAgICAgICAgPGRpdiBjbGFzcz1cImNhdGVnb3J5X19sZWZ0XCI+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXRlZ29yeV9faW1hZ2VcIj5cclxuICAgICAgICAgICAgICA8aW1nIHNyYz1cIiR7dGhpcy5vcHRpb25zLmltYWdlfVwiIGFsdD1cImNhdGVnb3J5X2ltYWdlXCIgLz5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXRlZ29yeV9fcmlnaHRcIj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhdGVnb3J5X190aXRsZS13cmFwcGVyXCI+XHJcbiAgICAgICAgICAgICAgPGgyIGNsYXNzPVwiY2F0ZWdvcnlfX3RpdGxlXCI+JHt0aGlzLm9wdGlvbnMudGl0bGV9PC9oMj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXRlZ29yeV9fdGV4dC13cmFwcGVyXCI+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2F0ZWdvcnlfX2J1dHRvbnMtd3JhcHBlclwiPlxyXG4gICAgICAgICAgICA8YSBocmVmPVwiJHt0aGlzLm9wdGlvbnMubGlua31cIiBjbGFzcz1cImxpbmstYnV0dG9uIGxpbmstYnV0dG9uX195ZWxsb3dcIj4ke3RoaXMub3B0aW9ucy5idXR0b25UZXh0fTwvYT5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgPC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuICA8L3NlY3Rpb24+XHJcbiAgYDtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEBkZXNjcmlwdGlvbiDQlNC+0LHQsNCy0LvRj9C10YIg0YLQtdC60YHRgiDQsiDQutC+0LzQv9C+0L3QtdC90YJcclxuICAgKiBAcGFyYW0ge3N0cmluZ1tdfSBkYXRhINCc0LDRgdGB0LjQsiDQtNC70Y8g0L7RgtGA0LjRgdC+0LLQutC4INC/0LDRgNCw0LPRgNCw0YTQvtCyINGBINGC0LXQutGB0YLQvtC8XHJcbiAgICovXHJcbiAgYWRkVGV4dFRvQmxvY2soc2V0dGluZ3MpIHtcclxuICAgIGNvbnN0IHRleHRXcmFwcGVyID0gdGhpcy5ibG9jay5xdWVyeVNlbGVjdG9yKCcuY2F0ZWdvcnlfX3RleHQtd3JhcHBlcicpO1xyXG5cclxuICAgIHNldHRpbmdzLnRleHQuZm9yRWFjaCgocGFyYWdyYXBoKSA9PiB7XHJcbiAgICAgIGNvbnN0IHRleHRNYXJrdXAgPSBgPHAgY2xhc3M9XCJjYXRlZ29yeV9fdGV4dFwiPiR7cGFyYWdyYXBofTwvcD5gO1xyXG4gICAgICB0ZXh0V3JhcHBlci5hcHBlbmQobmV3IERPTVBhcnNlcigpLnBhcnNlRnJvbVN0cmluZyh0ZXh0TWFya3VwLCAndGV4dC9odG1sJykuYm9keS5maXJzdENoaWxkKTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQGRlc2NyaXB0aW9uINGD0L3QuNGH0YLQvtC20LDQtdGCINGN0LrQt9C10LzQv9C70Y/RgCDQutC+0LzQv9C+0L3QtdC90YLQsCDRgdGA0LDQvdC40YbRi1xyXG4gICAqL1xyXG4gIGRlc3Ryb3koKSB7XHJcbiAgICB0aGlzLmJsb2NrLnJlbW92ZSgpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQHJldHVybnMgSFRNTCDRgNCw0LfQvNC10YLQutCwINGB0YLRgNCw0L3QuNGG0YtcclxuICAgKi9cclxuICBnZXQgZWxlbWVudCgpIHtcclxuICAgIHJldHVybiB0aGlzLmJsb2NrO1xyXG4gIH1cclxufVxyXG4iLCJleHBvcnQgY2xhc3MgQ2F0ZWdvcmllc0l0ZW0ge1xyXG4gIC8qKlxyXG4gICAqIEB0eXBlZGVmIHtPYmplY3R9IERhdGFPYmpcclxuICAgKiBAcHJvcGVydHkge3N0cmluZ30gaWQg0JjQlCDQutC+0LzQv9C+0L3QtdC90YLQsFxyXG4gICAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBpbWFnZSDQodGB0YvQu9C60LAg0L3QsCDQuNC30L7QsdGA0LDQttC10L3QuNC1XHJcbiAgICogQHByb3BlcnR5IHtzdHJpbmd9IHRpdGxlINCX0LDQs9C+0LvQvtCy0L7QuiDQutC+0LzQv9C+0L3QtdC90YLQsFxyXG4gICAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBkZXNjcmlwdGlvbiDQmtGA0LDRgtC60LjQuSDRgtC10LrRgdGCINGBINC+0L/QuNGB0LDQvdC40LXQvFxyXG4gICAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBsaW5rINCh0YHRi9C70LrQsCwg0LrQvtGC0L7RgNCw0Y8g0LHRg9C00LXRgiDQvtGC0L7QsdGA0LDQttC10L3QsCDQsiDQsNC00LXRgdC90L7QuSDRgdGC0YDQvtC60LUg0LHRgNCw0YPQt9C10YDQsFxyXG4gICAqL1xyXG5cclxuICAvKipcclxuICAgKiBAcGFyYW0ge0RhdGFPYmp9IG9wdGlvbnMg0J7QsdGK0LXQutGCINGBINC90LDRgdGC0YDQvtC50LrQsNC80Lgg0LTQu9GPINC60L7QvNC/0L7QvdC10L3RgtCwXHJcbiAgICovXHJcbiAgY29uc3RydWN0b3Iob3B0aW9ucykge1xyXG4gICAgdGhpcy5vcHRpb25zID0ge1xyXG4gICAgICBpZDogJycsXHJcbiAgICAgIGltYWdlOiAnJyxcclxuICAgICAgdGl0bGU6ICcnLFxyXG4gICAgICBkZXNjcmlwdGlvbjogJycsXHJcbiAgICAgIGxpbms6ICcnLFxyXG4gICAgfTtcclxuXHJcbiAgICBpZiAob3B0aW9ucykge1xyXG4gICAgICB0aGlzLm9wdGlvbnMgPSBPYmplY3QuYXNzaWduKHRoaXMub3B0aW9ucywgb3B0aW9ucyk7XHJcbiAgICB9XHJcbiAgICB0aGlzLmluaXQoKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEBkZXNjcmlwdGlvbiDQmNC90LjRhtC40LDQu9C40LfQsNGG0LjRjyDRjdC70LXQvNC10L3RgtC+0LIg0LrQvtC80L/QvtC90LXQvdGC0LBcclxuICAgKi9cclxuICBpbml0KCkge1xyXG4gICAgdGhpcy5pdGVtID0gbmV3IERPTVBhcnNlcigpLnBhcnNlRnJvbVN0cmluZyh0aGlzLmdldEl0ZW1NYXJrdXBIdG1sKCksICd0ZXh0L2h0bWwnKS5ib2R5LmZpcnN0Q2hpbGQ7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBAcmV0dXJucyDQoNCw0LfQvNC10YLQutCwINC60L7QvNC/0L7QvdC10L3RgtCwINCyINCy0LjQtNC1INGB0YLRgNC+0LrQuFxyXG4gICAqL1xyXG4gIGdldEl0ZW1NYXJrdXBIdG1sKCkge1xyXG4gICAgcmV0dXJuIGBcclxuICAgIDxkaXYgY2xhc3M9XCJncm91cF9faXRlbVwiPlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJncm91cF9faXRlbS1pbWFnZVwiPlxyXG4gICAgICAgICAgPGltZyBzcmM9XCIke3RoaXMub3B0aW9ucy5pbWFnZX1cIiBhbHQ9XCJrb3Ntb1wiIC8+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cImdyb3VwX19pdGVtLWNvbnRlbnRcIj5cclxuICAgICAgICAgIDxhIGhyZWY9XCIke3RoaXMub3B0aW9ucy5saW5rfVwiIGNsYXNzPVwiZ3JvdXBfX2l0ZW0tdGl0bGVcIj4ke3RoaXMub3B0aW9ucy50aXRsZX08L2E+XHJcbiAgICAgICAgICA8cCBjbGFzcz1cImdyb3VwX19pdGVtLWRlc2NyaXB0aW9uXCI+JHt0aGlzLm9wdGlvbnMuZGVzY3JpcHRpb259PC9wPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgPC9kaXY+XHJcbiAgICBgO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQGRlc2NyaXB0aW9uINCj0L3QuNGH0YLQvtC20LXQvdC40LUg0LrQvtC80L/QvtC90LXQvdGC0LBcclxuICAgKi9cclxuICBkZXN0cm95KCkge1xyXG4gICAgdGhpcy5pdGVtLnJlbW92ZSgpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQHJldHVybnMgSFRNTCDRgNCw0LfQvNC10YLQutCwINC60L7QvNC/0L7QvdC10L3RgtCwXHJcbiAgICovXHJcbiAgZ2V0IGVsZW1lbnQoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5pdGVtO1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgeyBDYXRlZ29yaWVzSXRlbSB9IGZyb20gJy4uL2xpYi9jYXRlZ29yaWVzSXRlbSc7XHJcblxyXG5leHBvcnQgY2xhc3MgQ2F0ZWdvcmllcyB7XHJcbiAgLyoqXHJcbiAgICogQHR5cGVkZWYge09iamVjdH0gQ3J1bWJzT2JqXHJcbiAgICogQHByb3BlcnR5IHtzdHJpbmd9IHRpdGxlINCX0LDQs9C+0LvQvtCy0L7QuiBcItCl0LvQtdCx0L3QvtC5INC60YDQvtGI0LrQuFwiXHJcbiAgICogQHByb3BlcnR5IHtzdHJpbmcgfCBudWxsfSBsaW5rINCh0YHRi9C70LrQsCwg0LrQvtGC0L7RgNCw0Y8g0LHRg9C00LXRgiDQvtGC0L7QsdGA0LDQttC10L3QsCDQsiDQsNC00LXRgdC90L7QuSDRgdGC0YDQvtC60LUg0LHRgNCw0YPQt9C10YDQsFxyXG4gICAqL1xyXG5cclxuICAvKipcclxuICAgKiBAdHlwZWRlZiB7T2JqZWN0fSBCbG9ja3NPYmpcclxuICAgKiBAcHJvcGVydHkge3N0cmluZ30gaWQg0JjQlCDQutC+0LzQv9C+0L3QtdC90YLQsFxyXG4gICAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBpbWFnZSDQodGB0YvQu9C60LAg0L3QsCDQuNC30L7QsdGA0LDQttC10L3QuNC1XHJcbiAgICogQHByb3BlcnR5IHtzdHJpbmd9IHRpdGxlINCX0LDQs9C+0LvQvtCy0L7QuiDQutC+0LzQv9C+0L3QtdC90YLQsFxyXG4gICAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBkZXNjcmlwdGlvbiDQmtGA0LDRgtC60LjQuSDRgtC10LrRgdGCINGBINC+0L/QuNGB0LDQvdC40LXQvFxyXG4gICAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBsaW5rINCh0YHRi9C70LrQsCwg0LrQvtGC0L7RgNCw0Y8g0LHRg9C00LXRgiDQvtGC0L7QsdGA0LDQttC10L3QsCDQsiDQsNC00LXRgdC90L7QuSDRgdGC0YDQvtC60LUg0LHRgNCw0YPQt9C10YDQsFxyXG4gICAqL1xyXG5cclxuICAvKipcclxuICAgKiBAdHlwZWRlZiB7T2JqZWN0fSBDYXRlZ29yaWVzT2JqXHJcbiAgICogQHByb3BlcnR5IHtzdHJpbmd9IG1haW5JbWFnZSDQk9C70LDQstC90L7QtSDQuNC30L7QsdGA0LDQttC10L3QuNC1INC90LAg0YHRgtGA0LDQvdC40YbQtVxyXG4gICAqIEBwcm9wZXJ0eSB7Q3J1bWJzT2JqW119IGNydW1icyDQnNCw0YHRgdC40LIg0YEg0L3QsNGB0YLRgNC+0LnQutCw0LzQuCDQtNC70Y8gXCLQpdC70LXQsdC90YvRhSDQutGA0L7RiNC10LpcIlxyXG4gICAqIEBwcm9wZXJ0eSB7c3RyaW5nfSB0aXRsZSDQl9Cw0LPQvtC70L7QstC+0Log0YHRgtGA0LDQvdC40YbRi1xyXG4gICAqIEBwcm9wZXJ0eSB7c3RyaW5nfSB0ZXh0INCi0LXQutGB0YLQvtCy0YvQuSDQutC+0L3RgtC10L3RglxyXG4gICAqIEBwcm9wZXJ0eSB7QmxvY2tzT2JqW119IGJsb2NrcyDQnNCw0YHRgdC40LIg0YEg0L3QsNGB0YLRgNC+0LnQutCw0LzQuCDQtNC70Y8g0LHQu9C+0LrQvtCyINGBINC/0LXRgNGB0L7QvdCw0LzQuFxyXG4gICAqL1xyXG5cclxuICAvKipcclxuICAgKiBAcGFyYW0ge0NhdGVnb3JpZXNPYmp9IG9wdGlvbnNcclxuICAgKi9cclxuICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7XHJcbiAgICB0aGlzLm9wdGlvbnMgPSB7XHJcbiAgICAgIG1haW5JbWFnZTogJycsXHJcbiAgICAgIGNydW1iczogW10sXHJcbiAgICAgIHRpdGxlOiAnJyxcclxuICAgICAgdGV4dDogJycsXHJcbiAgICAgIGJsb2NrczogW10sXHJcbiAgICB9O1xyXG5cclxuICAgIGlmIChvcHRpb25zKSB7XHJcbiAgICAgIHRoaXMub3B0aW9ucyA9IE9iamVjdC5hc3NpZ24odGhpcy5vcHRpb25zLCBvcHRpb25zKTtcclxuICAgIH1cclxuICAgIHRoaXMuaW5pdCgpO1xyXG4gIH1cclxuICAvKipcclxuICAgKiBAZGVzY3JpcHRpb24g0JjQvdC40YbQuNCw0LvQuNC30LDRhtC40Y8g0LrQvtC80L/QvtC90LXQvdGC0LBcclxuICAgKi9cclxuICBpbml0KCkge1xyXG4gICAgdGhpcy5jYXRlZ29yeSA9IG5ldyBET01QYXJzZXIoKS5wYXJzZUZyb21TdHJpbmcodGhpcy5nZXRDYXRlZ29yeU1hcmt1cCgpLCAndGV4dC9odG1sJykuYm9keS5maXJzdENoaWxkO1xyXG4gICAgdGhpcy5hcHBlbmRDcnVtYnModGhpcy5vcHRpb25zLmNydW1icyk7XHJcbiAgICB0aGlzLmFwcGVuZENhdGVnb3Jpc0l0ZW0odGhpcy5vcHRpb25zLmJsb2Nrcyk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBAcmV0dXJucyDQoNCw0LfQvNC10YLQutCwINC60L7QvNC/0L7QvdC10L3RgtCwINCyINCy0LjQtNC1INGB0YLRgNC+0LrQuFxyXG4gICAqL1xyXG4gIGdldENhdGVnb3J5TWFya3VwKCkge1xyXG4gICAgcmV0dXJuIGBcclxuICAgIDxzZWN0aW9uIGNsYXNzPVwiZ3JvdXBcIj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwiY29udGFpbmVyXCI+XHJcbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiZ3JvdXBfX3dyYXBwZXJcIj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImdyb3VwX19pbWFnZS13cmFwcGVyXCI+XHJcbiAgICAgICAgICAgICAgPGltZyBzcmM9XCIke3RoaXMub3B0aW9ucy5tYWluSW1hZ2V9XCIgYWx0PVwiYmdcIiAgLz5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJncm91cF9fY29udGVudFwiPlxyXG4gICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJicmVhZC1jcnVtYnNcIj48L2Rpdj5cclxuICAgICAgICAgICAgICA8aDIgY2xhc3M9XCJncm91cF9fdGl0bGVcIj4ke3RoaXMub3B0aW9ucy50aXRsZX08L2gyPlxyXG4gICAgICAgICAgICAgIDxwIGNsYXNzPVwiZ3JvcF9fdGV4dFwiPiR7dGhpcy5vcHRpb25zLnRleHR9PC9wPlxyXG4gICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJncm91cF9faXRlbXNcIj48L2Rpdj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgIDwvc2VjdGlvbj5cclxuICAgIGA7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBAZGVzY3JpcHRpb24g0JTQvtCx0LDQstC70Y/QtdGCIFwi0KXQu9C10LHQvdGL0LUg0LrRgNC+0YjQutC4XCIg0L3QsCDRgdGC0YDQsNC90LjRhtGDXHJcbiAgICogQHBhcmFtIHtDcnVtYnNPYmpbXX0gc2V0dGluZ3Mg0JzQsNGB0YHQuNCyINC+0LHRitC10LrRgtC+0LIg0LTQu9GPINC+0YLRgNC40YHQvtCy0LrQuCDRhdC70LXQsdC90YvRhSDQutGA0L7RiNC10LpcclxuICAgKi9cclxuICBhcHBlbmRDcnVtYnMoc2V0dGluZ3MpIHtcclxuICAgIGNvbnN0IGNydW1ic1dyYXBwZXIgPSB0aGlzLmNhdGVnb3J5LnF1ZXJ5U2VsZWN0b3IoJy5icmVhZC1jcnVtYnMnKTtcclxuXHJcbiAgICBzZXR0aW5ncy5mb3JFYWNoKChjcnVtYiwgaW5kZXgsIGFycmF5KSA9PiB7XHJcbiAgICAgIGlmIChpbmRleCAhPT0gYXJyYXkubGVuZ3RoIC0gMSkge1xyXG4gICAgICAgIGNvbnN0IGNydW1iRWxlbSA9IGBcclxuICAgICAgICAgICAgPGEgaHJlZj1cIiR7Y3J1bWIubGlua31cIiBjbGFzcz1cImJyZWFkLWNydW1ic19faXRlbSB3aGl0ZS1jb2xvclwiPiR7Y3J1bWIudGl0bGV9PC9hPlxyXG4gICAgICAgICAgICBgO1xyXG4gICAgICAgIGNydW1ic1dyYXBwZXIuYXBwZW5kKG5ldyBET01QYXJzZXIoKS5wYXJzZUZyb21TdHJpbmcoY3J1bWJFbGVtLCAndGV4dC9odG1sJykuYm9keS5maXJzdENoaWxkKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBjb25zdCBjcnVtYkVsZW0gPSBgXHJcbiAgICAgICAgPHNwYW4gY2xhc3M9XCJicmVhZC1jcnVtYnNfX2l0ZW0gd2hpdGUtY29sb3JcIj4ke2NydW1iLnRpdGxlfTwvc3Bhbj5cclxuICAgICAgICBgO1xyXG4gICAgICAgIGNydW1ic1dyYXBwZXIuYXBwZW5kKG5ldyBET01QYXJzZXIoKS5wYXJzZUZyb21TdHJpbmcoY3J1bWJFbGVtLCAndGV4dC9odG1sJykuYm9keS5maXJzdENoaWxkKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBAZGVzY3JpcHRpb24g0JTQvtCx0LDQstC70Y/QtdGCINCx0LvQvtC60Lgg0YEg0L/QtdGA0YHQvtC90LDQvNC4XHJcbiAgICogQHBhcmFtIHtCbG9ja3NPYmpbXX0gc2V0dGluZ3Mg0JzQsNGB0YHQuNCyINC00LvRjyDQvtGC0YDQuNGB0L7QstC60Lgg0LHQu9C+0LrQvtCyINGBINC/0LXRgNGB0L7QvdCw0LzQuFxyXG4gICAqL1xyXG4gIGFwcGVuZENhdGVnb3Jpc0l0ZW0oc2V0dGluZ3MpIHtcclxuICAgIGNvbnN0IHdyYXBwZXIgPSB0aGlzLmNhdGVnb3J5LnF1ZXJ5U2VsZWN0b3IoJy5ncm91cF9faXRlbXMnKTtcclxuXHJcbiAgICBzZXR0aW5ncy5mb3JFYWNoKChibG9jaykgPT4gd3JhcHBlci5hcHBlbmQobmV3IENhdGVnb3JpZXNJdGVtKGJsb2NrKS5lbGVtZW50KSk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBAZGVzY3JpcHRpb24g0KPQvdC40YfRgtC+0LbQsNC10YIg0LrQvtC80L/QvtC90LXQvdGCXHJcbiAgICovXHJcbiAgZGVzdHJveSgpIHtcclxuICAgIHRoaXMuY2F0ZWdvcnkucmVtb3ZlKCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBAcmV0dXJucyBIVE1MINGA0LDQt9C80LXRgtC60LAg0LrQvtC80L/QvtC90LXQvdGC0LBcclxuICAgKi9cclxuICBnZXQgZWxlbWVudCgpIHtcclxuICAgIHJldHVybiB0aGlzLmNhdGVnb3J5O1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgeyBjcmVhdGVFbGVtZW50IH0gZnJvbSAnLi9mdW5jdGlvbnMnO1xyXG5cclxuZXhwb3J0IGNsYXNzIEJ1dHRvbiB7XHJcbiAgLyoqXHJcbiAgICogQHR5cGVkZWYge09iamVjdH0gQnRuQ29uZmlnXHJcbiAgICogQHByb3BlcnR5IHtzdHJpbmd9IGNsYXNzTmFtZSDQntGB0L3QvtCy0L3QvtC5INC60LvQsNGB0YFcclxuICAgKiBAcHJvcGVydHkge3N0cmluZ30gYWRkQ2xhc3NOYW1lINCU0L7Qv9C+0LvQvdC40YLQtdC70YzQvdGL0Lkg0LrQu9Cw0YHRgVxyXG4gICAqIEBwcm9wZXJ0eSB7c3RyaW5nfSB0ZXh0INCi0LXQutGB0YIg0LrQvdC+0L/QutC4XHJcbiAgICovXHJcblxyXG4gIC8qKlxyXG4gICAqIEBwYXJhbSB7QnRuQ29uZmlnfSBjb25maWcg0J7QsdGK0LXQutGCINC60L7QvdGE0LjQs9GD0YDQsNGG0LjQuC4g0KHQvtC00LXRgNC20LjRgjog0JrQu9Cw0YHRgSwg0LTQvtC/0L7Qu9C90LjRgtC10LvRjNC90YvQuSDQutC70LDRgdGBLCDRgtC10LrRgdGCINC60L3QvtC/0LrQuFxyXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrINCk0YPQvdC60YbQuNGPLCDQutC+0YLQvtGA0LDRjyDQsdGD0LTQtdGCINCy0YvQt9Cy0LDQvdCwINCyINC80L7QvNC10L3RgiDQutC70LjQutCwINC/0L4g0LrQvdC+0L/QutC1XHJcbiAgICovXHJcbiAgY29uc3RydWN0b3IoY29uZmlnLCBjYWxsYmFjaykge1xyXG4gICAgdGhpcy5jb25maWcgPSB7XHJcbiAgICAgIGNsYXNzTmFtZTogJycsXHJcbiAgICAgIGFkZENsYXNzTmFtZTogJycsXHJcbiAgICAgIHRleHQ6ICcnLFxyXG4gICAgfTtcclxuXHJcbiAgICB0aGlzLmNhbGxiYWNrID0gY2FsbGJhY2s7XHJcblxyXG4gICAgaWYgKGNvbmZpZykge1xyXG4gICAgICB0aGlzLmNvbmZpZyA9IE9iamVjdC5hc3NpZ24odGhpcy5jb25maWcsIGNvbmZpZyk7XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy5idXR0b24gPSBjcmVhdGVFbGVtZW50KCdidXR0b24nLCB0aGlzLmNvbmZpZy5jbGFzc05hbWUsIHRoaXMuY29uZmlnLmFkZENsYXNzTmFtZSk7XHJcbiAgICB0aGlzLmJ1dHRvbi5pbm5lclRleHQgPSB0aGlzLmNvbmZpZy50ZXh0O1xyXG5cclxuICAgIGlmICh0aGlzLmNhbGxiYWNrKSB7XHJcbiAgICAgIHRoaXMuYnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5jYWxsYmFjayk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBAZGVzY3JpcHRpb24g0JjQt9C80LXQvdGP0LXRgiDQtNC+0YHRgtGD0L/QvdC+0YHRgtGMINC60L3QvtC/0LrQuFxyXG4gICAqL1xyXG4gIHNldCBkaXNhYmxlZCh2YWwpIHtcclxuICAgIHRoaXMuYnV0dG9uLmRpc2FibGVkID0gdmFsO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQHJldHVybnMgSFRNTCDQutC90L7Qv9C60LhcclxuICAgKi9cclxuICBnZXQgZWxlbWVudCgpIHtcclxuICAgIHJldHVybiB0aGlzLmJ1dHRvbjtcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IHsgQnV0dG9uIH0gZnJvbSAnLi4vbGliL2J1dHRvbic7XHJcblxyXG5leHBvcnQgY2xhc3MgTW9kYWwge1xyXG4gIC8qKlxyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSB0aXRsZSDQl9Cw0LPQvtC70L7QstC+0Log0LzQvtC00LDQu9GM0L3QvtCz0L4g0L7QutC90LBcclxuICAgKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBjb250ZW50INCa0L7QvdGC0LXQvdGCINC80L7QtNCw0LvRjNC90L7Qs9C+INC+0LrQvdCwXHJcbiAgICovXHJcbiAgY29uc3RydWN0b3IodGl0bGUgPSAnJywgY29udGVudCA9IG51bGwpIHtcclxuICAgIHRoaXMudGl0bGUgPSB0aXRsZTtcclxuICAgIHRoaXMuY29udGVudCA9IGNvbnRlbnQ7XHJcbiAgICB0aGlzLmluaXQoKTtcclxuICAgIHRoaXMuYWRkRGVmYXV0bEJ1dHRvbigpO1xyXG4gICAgdGhpcy5hZGRMaXN0ZW5lcnMoKTtcclxuICB9XHJcbiAgLyoqXHJcbiAgICogQGRlc2NyaXB0aW9uINCY0L3QuNGG0LjQsNC70LjQt9Cw0YbQuNGPINGN0LvQtdC80LXQvdGC0L7QsiDQvNC+0LTQsNC70YzQvdC+0LPQviDQvtC60L3QsFxyXG4gICAqL1xyXG4gIGluaXQoKSB7XHJcbiAgICB0aGlzLm1vZGFsID0gbmV3IERPTVBhcnNlcigpLnBhcnNlRnJvbVN0cmluZyh0aGlzLmdldE1vZGFsTWFya3VwKCksICd0ZXh0L2h0bWwnKS5ib2R5LmZpcnN0Q2hpbGQ7XHJcbiAgICB0aGlzLnRpdGxlQ29udGFpbmVyID0gdGhpcy5tb2RhbC5xdWVyeVNlbGVjdG9yKCcubW9kYWxfX3RpdGxlJyk7XHJcbiAgICB0aGlzLmNvbnRlbnRDb250YWluZXIgPSB0aGlzLm1vZGFsLnF1ZXJ5U2VsZWN0b3IoJy5tb2RhbF9fY29udGVudCcpO1xyXG4gICAgdGhpcy5hY3Rpb25zID0gdGhpcy5tb2RhbC5xdWVyeVNlbGVjdG9yKCcubW9kYWxfX2FjdGlvbnMnKTtcclxuICAgIHRoaXMuY2xvc2VJY29uQnRuID0gdGhpcy5tb2RhbC5xdWVyeVNlbGVjdG9yKCcubW9kYWxfX2Nsb3NlJyk7XHJcbiAgICB0aGlzLnNob3coKTtcclxuXHJcbiAgICBpZiAodGhpcy50aXRsZSkge1xyXG4gICAgICB0aGlzLmFkZFRpdGxlKHRoaXMudGl0bGUpO1xyXG4gICAgfVxyXG5cclxuICAgIGlmICh0aGlzLmNvbnRlbnQpIHtcclxuICAgICAgdGhpcy5hZGRDb250ZW50KHRoaXMuY29udGVudCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBAZGVzY3JpcHRpb24g0JTQvtCx0LDQstC70Y/QtdGCINGB0LvRg9GI0LDRgtC10LvQuCDRgdC+0LHRi9GC0LjQuVxyXG4gICAqL1xyXG4gIGFkZExpc3RlbmVycygpIHtcclxuICAgIHRoaXMuY2xvc2VJY29uQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5oaWRlLmJpbmQodGhpcykpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQHJldHVybnMg0JLQvtC30LLRgNCw0YnQsNC10YIg0YDQsNC30LzQtdGC0LrRgyDQvNC+0LTQsNC70YzQvdC+0LPQviDQvtC60L3QsFxyXG4gICAqL1xyXG4gIGdldE1vZGFsTWFya3VwKCkge1xyXG4gICAgcmV0dXJuIGBcclxuICAgICAgICA8ZGl2IGNsYXNzPVwibW9kYWwgaGlkZGVuXCI+XHJcbiAgICAgICAgICAgPGRpdiBjbGFzcz1cIm1vZGFsX193cmFwcGVyXCI+XHJcbiAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibW9kYWxfX2hlYWRlclwiPlxyXG4gICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibW9kYWxfX3RpdGxlXCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtb2RhbF9fY2xvc2VcIj48L2Rpdj5cclxuICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm1vZGFsX19jb250ZW50XCI+PC9kaXY+XHJcbiAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibW9kYWxfX2FjdGlvbnNcIj48L2Rpdj5cclxuICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgYDtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEBkZXNjcmlwdGlvbiDQlNC+0LHQsNCy0LvRj9C10YIg0LrQvdC+0L/QutGDINC/0L4t0YPQvNC+0LvRh9Cw0L3QuNGOIFwi0JfQsNC60YDRi9GC0YxcIlxyXG4gICAqL1xyXG4gIGFkZERlZmF1dGxCdXR0b24oKSB7XHJcbiAgICBjb25zdCBhY3Rpb25CdXR0b24gPSBuZXcgQnV0dG9uKHsgY2xhc3NOYW1lOiAnYnV0dG9uJywgYWRkQ2xhc3NOYW1lOiAneWVsbG93LWJ1dHRvbicsIHRleHQ6ICfQl9Cw0LrRgNGL0YLRjCcgfSwgdGhpcy5oaWRlLmJpbmQodGhpcykpO1xyXG4gICAgdGhpcy5hY3Rpb25zLmFwcGVuZChhY3Rpb25CdXR0b24uZWxlbWVudCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBAZGVzY3JpcHRpb24g0JLRgdGC0YDQsNC40LLQsNC10YIg0LzQvtC00LDQu9GM0L3QvtC1INC+0LrQvdC+INCyIERPTSDQtNC10YDQtdCy0L4g0Lgg0L7RgtC+0LHRgNCw0LbQsNC10YIg0LXQs9C+XHJcbiAgICovXHJcbiAgc2hvdygpIHtcclxuICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kKHRoaXMubW9kYWwpO1xyXG4gICAgc2V0VGltZW91dCgoKSA9PiB0aGlzLm1vZGFsLmNsYXNzTGlzdC5yZW1vdmUoJ2hpZGRlbicpLCAwKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEBkZXNjcmlwdGlvbiDQo9C00LDQu9GP0LXRgiDQvtC60L3QviDQuNC3IERPTSDQtNC10YDQtdCy0LBcclxuICAgKi9cclxuICBoaWRlKCkge1xyXG4gICAgdGhpcy5tb2RhbC5jbGFzc0xpc3QuYWRkKCdoaWRkZW4nKTtcclxuICAgIHNldFRpbWVvdXQoKCkgPT4gdGhpcy5tb2RhbC5yZW1vdmUoKSwgMzAwKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEBkZXNjcmlwdGlvbiDQlNC+0LHQsNCy0LvRj9C10YIg0LfQsNCz0L7Qu9C+0LLQvtC6INC80L7QtNCw0LvRjNC90L7Qs9C+INC+0LrQvdCwXHJcbiAgICogQHBhcmFtIHtzdHJpbmd9IHRpdGxlINCX0LDQs9C+0LvQvtCy0L7QulxyXG4gICAqL1xyXG4gIGFkZFRpdGxlKHRpdGxlKSB7XHJcbiAgICBpZiAodGl0bGUpIHtcclxuICAgICAgdGhpcy50aXRsZUNvbnRhaW5lci5pbm5lclRleHQgPSB0aXRsZTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMudGl0bGVDb250YWluZXIuaW5uZXJUZXh0ID0gJyc7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBAZGVzY3JpcHRpb24g0JTQvtCx0LDQstC70Y/QtdGCINC60L7QvdGC0LXQvdGCXHJcbiAgICogQHBhcmFtIHtIVE1MRWxlbWVudH0gY29udGVudCDQmtC+0L3RgtC10L3Rgiwg0LrQvtGC0L7RgNGL0Lkg0L3Rg9C20L3QviDQtNC+0LHQsNCy0LjRgtGMINCyINC+0LrQvdC+XHJcbiAgICovXHJcbiAgYWRkQ29udGVudChjb250ZW50KSB7XHJcbiAgICBpZiAoY29udGVudCAmJiBjb250ZW50IGluc3RhbmNlb2YgSFRNTEVsZW1lbnQpIHtcclxuICAgICAgdGhpcy5jb250ZW50Q29udGFpbmVyLmlubmVySFRNTCA9ICcnO1xyXG4gICAgICB0aGlzLmNvbnRlbnRDb250YWluZXIuYXBwZW5kKGNvbnRlbnQpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQGRlc2NyaXB0aW9uINCS0L7Qt9Cy0YDQsNGJ0LDQtdGCINGA0LDQt9C80LXRgtC60YMg0LzQvtC00LDQu9GM0L3QvtCz0L4g0L7QutC90LBcclxuICAgKi9cclxuICBnZXQgZWxlbWVudCgpIHtcclxuICAgIHJldHVybiB0aGlzLm1vZGFsO1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgeyBNb2RhbCB9IGZyb20gJy4vbW9kYWwnO1xyXG5pbXBvcnQgeyBTbGlkZXIgfSBmcm9tICcuLi9saWIvc2xpZGVyJztcclxuaW1wb3J0IHsgQnV0dG9uIH0gZnJvbSAnLi4vbGliL2J1dHRvbic7XHJcblxyXG5leHBvcnQgY2xhc3MgRGV0YWlsUGFnZSB7XHJcbiAgLyoqXHJcbiAgICogQHR5cGVkZWYge09iamVjdH0gQ3J1bWJzRGF0YVxyXG4gICAqIEBwcm9wZXJ0eSB7c3RyaW5nIHwgbnVsbH0gbGluayDQodGB0YvQu9C60LAsINC60L7RgtC+0YDQsNGPINCx0YPQtNC10YIg0L7RgtC+0LHRgNCw0LbQtdC90LAg0LIg0LDQtNGA0LXRgdC90L7QuSDRgdGC0YDQvtC60LUg0LHRgNCw0YPQt9C10YDQsFxyXG4gICAqIEBwcm9wZXJ0eSB7c3RyaW5nfSB0aXRsZSDQndCw0LfQstCw0L3QuNC1INGF0LvQtdCx0L3QvtC5INC60YDQvtGI0LrQuFxyXG4gICAqL1xyXG5cclxuICAvKipcclxuICAgKiBAdHlwZWRlZiB7T2JqZWN0fSBQYWdlT3B0b25zXHJcbiAgICogQHByb3BlcnR5IHtzdHJpbmd9IGlkIElEINC60L7QvNC/0L7QvdC10L3RgtCwXHJcbiAgICogQHByb3BlcnR5IHtDcnVtYnNEYXRhW119IGNydW1icyDQnNCw0YHRgdC40LIg0L7QsdGK0LXQutGC0L7QsiDQtNC70Y8g0L3QsNGB0YLRgNC+0LnQutC4INGF0LvQtdCx0L3Ri9GFINC60YDQvtGI0LXQulxyXG4gICAqIEBwcm9wZXJ0eSB7c3RyaW5nfSB0aXRsZSDQl9Cw0LPQvtC70L7QstC+0Log0YHRgtGA0LDQvdC40YbRi1xyXG4gICAqIEBwcm9wZXJ0eSB7c3RyaW5nW119IHRleHQg0JzQsNGB0YHQuNCyINGBINGC0LXQutGB0YLQvtC8INC00LvRjyDQvtGC0L7QsdGA0LDQttC10L3QuNGPINC90LAg0YHRgtGA0LDQvdC40YbQtVxyXG4gICAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBpbWFnZSDQodGB0YvQu9C60LAg0L3QsCDQutCw0YDRgtC40L3QutGDINC00LvRjyDRgdGC0YDQsNC90LjRhtGLXHJcbiAgICogQHByb3BlcnR5IHtzdHJpbmd9IGJ0blRleHQg0KLQtdC60YHRgiDQutC90L7Qv9C60LhcclxuICAgKiBAcHJvcGVydHkge3N0cmluZ1tdfSBzbGlkZXMg0JzQsNGB0YHQuNCyINGB0YHRi9C70L7QuiDQvdCwINC40LfQvtCx0YDQsNC20LXQvdC40Y8g0LTQu9GPINGB0LvQsNC50LTQtdGA0LBcclxuICAgKi9cclxuXHJcbiAgLyoqXHJcbiAgICogQHBhcmFtIHtQYWdlT3B0b25zfSBvcHRpb25zINCe0LHRitC10LrRgiDRgSDQvdCw0YHRgtGA0L7QudC60LDQvNC4INC00LvRjyDRgdGC0YDQsNC90LjRhtGLXHJcbiAgICovXHJcbiAgY29uc3RydWN0b3Iob3B0aW9ucykge1xyXG4gICAgdGhpcy5vcHRpb25zID0ge1xyXG4gICAgICBpZDogJycsXHJcbiAgICAgIGNydW1iczogW10sXHJcbiAgICAgIHRpdGxlOiAnJyxcclxuICAgICAgdGV4dDogW10sXHJcbiAgICAgIGltYWdlOiAnJyxcclxuICAgICAgYnRuVGV4dDogJycsXHJcbiAgICAgIHNsaWRlczogW10sXHJcbiAgICB9O1xyXG5cclxuICAgIGlmIChvcHRpb25zKSB7XHJcbiAgICAgIHRoaXMub3B0aW9ucyA9IE9iamVjdC5hc3NpZ24odGhpcy5vcHRpb25zLCBvcHRpb25zKTtcclxuICAgIH1cclxuICAgIHRoaXMuaW5pdCgpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQGRlc2NyaXB0aW9uINCY0L3QuNGG0LjQsNC70LjQt9Cw0YbQuNGPINGN0LvQtdC80LXQvdGC0L7QsiDRgdGC0YDQsNC90LjRhtGLXHJcbiAgICovXHJcbiAgaW5pdCgpIHtcclxuICAgIHRoaXMucGFnZSA9IG5ldyBET01QYXJzZXIoKS5wYXJzZUZyb21TdHJpbmcodGhpcy5nZXRQYWdlTWFya3VwKCksICd0ZXh0L2h0bWwnKS5ib2R5LmZpcnN0Q2hpbGQ7XHJcbiAgICB0aGlzLmFkZEJyZWFkQ3J1bWJzKHRoaXMub3B0aW9ucy5jcnVtYnMpO1xyXG4gICAgdGhpcy5hZGRUZXh0VG9QYWdlKHRoaXMub3B0aW9ucy50ZXh0KTtcclxuICAgIHRoaXMuYWRkR2FsZXJ5QnV0dG9uKCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBAcmV0dXJucyDQoNCw0LfQvNC10YLQutCwINGB0YLRgNCw0L3QuNGG0Ysg0LIg0YHRgtGA0L7QutC+0LLQvtC8INGE0L7RgNC80LDRgtC1XHJcbiAgICovXHJcbiAgZ2V0UGFnZU1hcmt1cCgpIHtcclxuICAgIHJldHVybiBgXHJcbiAgICA8c2VjdGlvbiBjbGFzcz1cImRldGFpbFwiPlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJjb250YWluZXJcIj5cclxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJkZXRhaWxfX3dyYXBwZXJcIj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImJyZWFkLWNydW1ic1wiPjwvZGl2PlxyXG4gICAgICAgICAgICA8aDIgY2xhc3M9XCJkZXRhaWxfX3RpdGxlXCI+JHt0aGlzLm9wdGlvbnMudGl0bGV9PC9oMj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImRldGFpbF9fdGV4dC13cmFwcGVyXCI+PC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkZXRhaWxfX2ltYWdlLXdyYXBwZXJcIj5cclxuICAgICAgICAgICAgICA8aW1nIHNyYz1cIiR7dGhpcy5vcHRpb25zLmltYWdlfVwiIGFsdD1cImltYWdlXCIgLz5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkZXRhaWxfX2J1dHRvbnNcIj48L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgPC9zZWN0aW9uPlxyXG4gICAgYDtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEBkZXNjcmlwdGlvbiDQlNC+0LHQsNCy0LvRj9C10YIg0Y3Qu9C10LzQtdC90YLRiyDQvdCw0LLQuNCz0LDRhtC40LggXCLQpdC70LXQsdC90YvQtSDQutGA0L7RiNC60LhcIlxyXG4gICAqIEBwYXJhbSB7Q3J1bWJzRGF0YVtdfSBkYXRhINCc0LDRgdGB0LjQsiDQvdCw0YHRgtGA0L7QtdC6INC00LvRjyDQvtGC0YDQuNGB0L7QstC60LggXCLQpdC70LXQsdC90YvRhSDQutGA0L7RiNC10LpcIlxyXG4gICAqL1xyXG4gIGFkZEJyZWFkQ3J1bWJzKGRhdGEpIHtcclxuICAgIGNvbnN0IGNydW1ic1dyYXBwZXIgPSB0aGlzLnBhZ2UucXVlcnlTZWxlY3RvcignLmJyZWFkLWNydW1icycpO1xyXG5cclxuICAgIGRhdGEuZm9yRWFjaCgoY3J1bWIsIGluZGV4LCBhcnJheSkgPT4ge1xyXG4gICAgICBpZiAoaW5kZXggIT09IGFycmF5Lmxlbmd0aCAtIDEpIHtcclxuICAgICAgICBjb25zdCBjcnVtYkl0ZW0gPSBgPGEgaHJlZj1cIiR7Y3J1bWIubGlua31cIiBjbGFzcz1cImJyZWFkLWNydW1ic19faXRlbSBibGFjay1jb2xvclwiPiR7Y3J1bWIudGl0bGV9PC9hPmA7XHJcbiAgICAgICAgY3J1bWJzV3JhcHBlci5hcHBlbmQobmV3IERPTVBhcnNlcigpLnBhcnNlRnJvbVN0cmluZyhjcnVtYkl0ZW0sICd0ZXh0L2h0bWwnKS5ib2R5LmZpcnN0Q2hpbGQpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGNvbnN0IGNydW1iSXRlbSA9IGA8c3BhbiBjbGFzcz1cImJyZWFkLWNydW1ic19faXRlbVwiPiR7Y3J1bWIudGl0bGV9PC9zcGFuPmA7XHJcbiAgICAgICAgY3J1bWJzV3JhcHBlci5hcHBlbmQobmV3IERPTVBhcnNlcigpLnBhcnNlRnJvbVN0cmluZyhjcnVtYkl0ZW0sICd0ZXh0L2h0bWwnKS5ib2R5LmZpcnN0Q2hpbGQpO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEBkZXNjcmlwdGlvbiDQlNC+0LHQsNCy0LvRj9C10YIg0YLQtdC60YHRgiDQvdCwINGB0YLRgNCw0L3QuNGG0YNcclxuICAgKiBAcGFyYW0ge3N0cmluZ1tdfSBkYXRhINCc0LDRgdGB0LjQsiDQtNC70Y8g0L7RgtGA0LjRgdC+0LLQutC4INC/0LDRgNCw0LPRgNCw0YTQvtCyINGBINGC0LXQutGB0YLQvtC8XHJcbiAgICovXHJcbiAgYWRkVGV4dFRvUGFnZShkYXRhKSB7XHJcbiAgICBjb25zdCB0ZXh0V3JhcHBlciA9IHRoaXMucGFnZS5xdWVyeVNlbGVjdG9yKCcuZGV0YWlsX190ZXh0LXdyYXBwZXInKTtcclxuXHJcbiAgICBkYXRhLmZvckVhY2goKGl0ZW0pID0+IHtcclxuICAgICAgY29uc3QgcGFyYWdyYXBoID0gYDxwIGNsYXNzPVwiZGV0YWlsX190ZXh0XCI+JHtpdGVtfTwvcD5gO1xyXG4gICAgICB0ZXh0V3JhcHBlci5hcHBlbmQobmV3IERPTVBhcnNlcigpLnBhcnNlRnJvbVN0cmluZyhwYXJhZ3JhcGgsICd0ZXh0L2h0bWwnKS5ib2R5LmZpcnN0Q2hpbGQpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBAZGVzY3JpcHRpb24g0JTQvtCx0LDQstC70Y/QtdGCINC60L3QvtC/0LrRgyDQvtGC0LrRgNGL0YLQuNGPINC+0LrQvdCwIFwi0JPQsNC70LXRgNC10Y9cIlxyXG4gICAqL1xyXG4gIGFkZEdhbGVyeUJ1dHRvbigpIHtcclxuICAgIGNvbnN0IGJ1dHRvbldyYXBwZXIgPSB0aGlzLnBhZ2UucXVlcnlTZWxlY3RvcignLmRldGFpbF9fYnV0dG9ucycpO1xyXG4gICAgdGhpcy5nYWxlcnlCdXR0b24gPSBuZXcgQnV0dG9uKFxyXG4gICAgICB7XHJcbiAgICAgICAgY2xhc3NOYW1lOiAnYnV0dG9uJyxcclxuICAgICAgICBhZGRDbGFzc05hbWU6ICd5ZWxsb3ctYnV0dG9uJyxcclxuICAgICAgICB0ZXh0OiB0aGlzLm9wdGlvbnMuYnRuVGV4dCxcclxuICAgICAgfSxcclxuICAgICAgdGhpcy5zaG93U2xpZGVzLmJpbmQodGhpcylcclxuICAgICk7XHJcbiAgICBidXR0b25XcmFwcGVyLmFwcGVuZCh0aGlzLmdhbGVyeUJ1dHRvbi5lbGVtZW50KTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEBkZXNjcmlwdGlvbiDQntGC0LrRgNGL0LLQsNC10YIg0L7QutC90L4g0YHQviDRgdC70LDQudC00LXRgNC+0LxcclxuICAgKi9cclxuICBzaG93U2xpZGVzKCkge1xyXG4gICAgbmV3IE1vZGFsKHRoaXMub3B0aW9ucy50aXRsZSwgbmV3IFNsaWRlcih0aGlzLm9wdGlvbnMuc2xpZGVzKS5lbGVtZW50KTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEBkZXNjcmlwdGlvbiDRg9C90LjRh9GC0L7QttCw0LXRgiDRjdC60LfQtdC80L/Qu9GP0YAg0LrQvtC80L/QvtC90LXQvdGC0LAg0YHRgNCw0L3QuNGG0YtcclxuICAgKi9cclxuICBkZXN0cm95KCkge1xyXG4gICAgdGhpcy5wYWdlLnJlbW92ZSgpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQHJldHVybnMgSFRNTCDRgNCw0LfQvNC10YLQutCwINGB0YLRgNCw0L3QuNGG0YtcclxuICAgKi9cclxuICBnZXQgZWxlbWVudCgpIHtcclxuICAgIHJldHVybiB0aGlzLnBhZ2U7XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCB7IE1haW5QYWdlIH0gZnJvbSAnLi4vY29tcG9uZW50cy9tYWluUGFnZSc7XHJcbmltcG9ydCB7IENhdGVnb3JpZXMgfSBmcm9tICcuLi9jb21wb25lbnRzL2NhdGVnb3JpZXMnO1xyXG5pbXBvcnQgeyBEZXRhaWxQYWdlIH0gZnJvbSAnLi4vY29tcG9uZW50cy9kZXRhaWxQYWdlJztcclxuXHJcbmV4cG9ydCBjb25zdCByb3V0ZXMgPSBbXHJcbiAgeyBwYXRoOiAnJywgY29tcG9uZW50OiBNYWluUGFnZSB9LFxyXG4gIHsgcGF0aDogJ3NwYWNlcnMnLCBjb21wb25lbnQ6IENhdGVnb3JpZXMgfSxcclxuICB7IHBhdGg6ICdyb2NrZXRzJywgY29tcG9uZW50OiBDYXRlZ29yaWVzIH0sXHJcbiAgeyBwYXRoOiAnZWZmZWN0JywgY29tcG9uZW50OiBDYXRlZ29yaWVzIH0sXHJcbiAgeyBwYXRoOiAnc3BhY2Vycy9nYWdhcmluJywgY29tcG9uZW50OiBEZXRhaWxQYWdlIH0sXHJcbiAgeyBwYXRoOiAnc3BhY2Vycy90aXRvdicsIGNvbXBvbmVudDogRGV0YWlsUGFnZSB9LFxyXG4gIHsgcGF0aDogJ3NwYWNlcnMvbGVvbm92JywgY29tcG9uZW50OiBEZXRhaWxQYWdlIH0sXHJcbiAgeyBwYXRoOiAnc3BhY2Vycy9zYXZpdHNrYXlhJywgY29tcG9uZW50OiBEZXRhaWxQYWdlIH0sXHJcbiAgeyBwYXRoOiAncm9ja2V0cy9zb3V6JywgY29tcG9uZW50OiBEZXRhaWxQYWdlIH0sXHJcbiAgeyBwYXRoOiAncm9ja2V0cy9wcm90b24nLCBjb21wb25lbnQ6IERldGFpbFBhZ2UgfSxcclxuICB7IHBhdGg6ICdyb2NrZXRzL2J1cmFuJywgY29tcG9uZW50OiBEZXRhaWxQYWdlIH0sXHJcbiAgeyBwYXRoOiAnZWZmZWN0L2Jsb29kJywgY29tcG9uZW50OiBEZXRhaWxQYWdlIH0sXHJcbiAgeyBwYXRoOiAnZWZmZWN0L2JvbmVzJywgY29tcG9uZW50OiBEZXRhaWxQYWdlIH0sXHJcbiAgeyBwYXRoOiAnZWZmZWN0L2VuZG9jcmluZScsIGNvbXBvbmVudDogRGV0YWlsUGFnZSB9LFxyXG4gIHsgcGF0aDogJ2VmZmVjdC9uZXJ2b3VzJywgY29tcG9uZW50OiBEZXRhaWxQYWdlIH0sXHJcbiAgeyBwYXRoOiAnZWZmZWN0L3Jlc3BpcmF0b3J5JywgY29tcG9uZW50OiBEZXRhaWxQYWdlIH0sXHJcbl07XHJcbiIsImltcG9ydCB7IFByZXZpZXcgfSBmcm9tICcuL3ByZXZpZXcnO1xyXG5pbXBvcnQgeyBUZW1hdGljQmxvY2sgfSBmcm9tICcuL3RlbWF0aWNCbG9jayc7XHJcblxyXG5leHBvcnQgY2xhc3MgTWFpblBhZ2Uge1xyXG4gIC8qKlxyXG4gICAqIEBkZXNjcmlwdGlvbiDQntCx0YrQtdC60YIg0YEg0L3QsNGB0YLRgNC+0LnQutCw0LzQuCDQtNC70Y8g0LrQvtC80L/QvtC90LXQvdGC0L7QsiBQcmV2aWV3INC4IENhdGVnb3JpZXNcclxuICAgKiBAcGFyYW0ge09iamVjdH0gc2V0dGluZ3NcclxuICAgKi9cclxuICBjb25zdHJ1Y3RvcihzZXR0aW5ncykge1xyXG4gICAgdGhpcy5wYWdlID0gZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpO1xyXG4gICAgdGhpcy5wcmV2aWV3ID0gbmV3IFByZXZpZXcoc2V0dGluZ3MucHJldmlld1NldHRpbmdzKTtcclxuICAgIHRoaXMudGVtYXRpY0Jsb2NrcyA9IFtdO1xyXG5cclxuICAgIHRoaXMucGFnZS5hcHBlbmRDaGlsZCh0aGlzLnByZXZpZXcuZWxlbWVudCk7XHJcbiAgICB0aGlzLmFkZFRlbWF0aWNCbG9ja3Moc2V0dGluZ3MpO1xyXG4gIH1cclxuXHJcbiAgYWRkVGVtYXRpY0Jsb2NrcyhzZXR0aW5ncykge1xyXG4gICAgc2V0dGluZ3MudGVtYXRpY0Jsb2NrLmZvckVhY2goKGJsb2NrU2V0dGluZ3MpID0+IHtcclxuICAgICAgY29uc3QgdGVtYXRpY0Jsb2NrID0gbmV3IFRlbWF0aWNCbG9jayhibG9ja1NldHRpbmdzKTtcclxuICAgICAgdGhpcy50ZW1hdGljQmxvY2tzLnB1c2godGVtYXRpY0Jsb2NrKTtcclxuICAgICAgdGhpcy5wYWdlLmFwcGVuZENoaWxkKHRlbWF0aWNCbG9jay5lbGVtZW50KTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgZGVzdHJveSgpIHtcclxuICAgIHRoaXMucHJldmlldy5kZXN0cm95KCk7XHJcbiAgICB0aGlzLnRlbWF0aWNCbG9ja3MuZm9yRWFjaCgoYmxvY2spID0+IGJsb2NrLmRlc3Ryb3koKSk7XHJcbiAgfVxyXG5cclxuICBnZXQgZWxlbWVudCgpIHtcclxuICAgIHJldHVybiB0aGlzLnBhZ2U7XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCB7IGNyZWF0ZUVsZW1lbnQgfSBmcm9tICcuLi9saWIvZnVuY3Rpb25zJztcclxuaW1wb3J0IHsgbWFpblBhZ2VEYXRhIH0gZnJvbSAnLi4vZGF0YS9kYXRhJztcclxuaW1wb3J0IHsgY2F0ZWdvcmllc1BhZ2VEYXRhIH0gZnJvbSAnLi4vZGF0YS9kYXRhJztcclxuaW1wb3J0IHsgZGV0YWlsUGFnZURhdGEgfSBmcm9tICcuLi9kYXRhL2RhdGEnO1xyXG5pbXBvcnQgeyBQYWdlNDA0IH0gZnJvbSAnLi9wYWdlNDA0JztcclxuXHJcbmltcG9ydCB7IHJvdXRlcyB9IGZyb20gJy4uL3JvdXRlci9yb3V0ZXMnO1xyXG5pbXBvcnQgeyByb3V0ZXIgfSBmcm9tICcuLi9yb3V0ZXIvcm91dGVyJztcclxuXHJcbmV4cG9ydCBjbGFzcyBDb250ZW50IHtcclxuICBjb25zdHJ1Y3RvcigpIHtcclxuICAgIGNvbnN0IHNldHRpbmdzID0ge1xyXG4gICAgICBtYWluUGFnZURhdGEsXHJcbiAgICAgIGNhdGVnb3JpZXNQYWdlRGF0YSxcclxuICAgICAgZGV0YWlsUGFnZURhdGEsXHJcbiAgICB9O1xyXG4gICAgdGhpcy5yb3V0ZXMgPSByb3V0ZXM7XHJcblxyXG4gICAgdGhpcy5pbml0KHNldHRpbmdzKTtcclxuICB9XHJcbiAgaW5pdChzZXR0aW5ncykge1xyXG4gICAgdGhpcy5jb250ZW50ID0gY3JlYXRlRWxlbWVudCgnZGl2JywgJ2NvbnRlbnQnKTtcclxuXHJcbiAgICB0aGlzLnBhZ2VEYXRhO1xyXG4gICAgdGhpcy5kZXRhaWxzRGF0YTtcclxuICAgIHRoaXMuaWQgPSBudWxsO1xyXG4gICAgdGhpcy5hY3RpdmVQYWdlO1xyXG5cclxuICAgIHRoaXMuc3RhcnQoc2V0dGluZ3MpO1xyXG4gIH1cclxuXHJcbiAgc3RhcnQoc2V0dGluZ3MpIHtcclxuICAgIGlmICh0aGlzLnJvdXRlcykge1xyXG4gICAgICB0aGlzLmluaXRSb3V0ZXMoc2V0dGluZ3MpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgaW5pdFJvdXRlcyhzZXR0aW5ncykge1xyXG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2hhc2hjaGFuZ2UnLCB0aGlzLnJlbmRlclJvdXRlLmJpbmQodGhpcywgc2V0dGluZ3MpKTtcclxuICAgIHRoaXMucmVuZGVyUm91dGUoc2V0dGluZ3MpO1xyXG4gIH1cclxuXHJcbiAgcmVuZGVyUm91dGUoc2V0dGluZ3MpIHtcclxuICAgIGNvbnN0IHVybCA9IHJvdXRlci5nZXRVcmwoKTtcclxuICAgIGNvbnN0IHJvdXRlID0gcm91dGVzLmZpbmQoKHJvdXQpID0+IHJvdXQucGF0aCA9PT0gdXJsKTtcclxuXHJcbiAgICBpZiAodGhpcy5hY3RpdmVQYWdlKSB7XHJcbiAgICAgIHRoaXMuYWN0aXZlUGFnZS5kZXN0cm95KCk7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKHJvdXRlKSB7XHJcbiAgICAgIHdpbmRvdy5zY3JvbGxUbygwLCAwKTtcclxuXHJcbiAgICAgIHN3aXRjaCAodXJsKSB7XHJcbiAgICAgICAgY2FzZSAnJzpcclxuICAgICAgICAgIHRoaXMucGFnZURhdGEgPSBzZXR0aW5ncy5tYWluUGFnZURhdGE7XHJcbiAgICAgICAgICB0aGlzLmFwcGVuZEh0bWwocm91dGUsIHRoaXMucGFnZURhdGEpO1xyXG4gICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgY2FzZSAnc3BhY2Vycyc6XHJcbiAgICAgICAgY2FzZSAncm9ja2V0cyc6XHJcbiAgICAgICAgY2FzZSAnZWZmZWN0JzpcclxuICAgICAgICAgIHRoaXMucGFnZURhdGEgPSBzZXR0aW5ncy5jYXRlZ29yaWVzUGFnZURhdGFbdXJsXTtcclxuICAgICAgICAgIHRoaXMuYXBwZW5kSHRtbChyb3V0ZSwgdGhpcy5wYWdlRGF0YSk7XHJcbiAgICAgICAgICBicmVhaztcclxuICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgY29uc3QgZGV0YWlsRGF0YSA9IHNldHRpbmdzLmRldGFpbFBhZ2VEYXRhLmZpbmQoKGJsb2NrKSA9PiBibG9jay5pZCA9PT0gdXJsKTtcclxuICAgICAgICAgIHRoaXMuYXBwZW5kSHRtbChyb3V0ZSwgZGV0YWlsRGF0YSk7XHJcbiAgICAgICAgICBicmVhaztcclxuICAgICAgfVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5zaG93NDA0cGFnZSgpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgYXBwZW5kSHRtbChyb3V0ZSwgZGF0YSkge1xyXG4gICAgdGhpcy5hY3RpdmVQYWdlID0gbmV3IHJvdXRlLmNvbXBvbmVudChkYXRhKTtcclxuICAgIHRoaXMuY29udGVudC5hcHBlbmQodGhpcy5hY3RpdmVQYWdlLmVsZW1lbnQpO1xyXG4gIH1cclxuXHJcbiAgc2hvdzQwNHBhZ2UoKSB7XHJcbiAgICB0aGlzLmFjdGl2ZVBhZ2UgPSBuZXcgUGFnZTQwNCgpO1xyXG4gICAgdGhpcy5jb250ZW50LmFwcGVuZCh0aGlzLmFjdGl2ZVBhZ2UuZWxlbWVudCk7XHJcbiAgfVxyXG5cclxuICBnZXQgZWxlbWVudCgpIHtcclxuICAgIHJldHVybiB0aGlzLmNvbnRlbnQ7XHJcbiAgfVxyXG59XHJcbiIsImV4cG9ydCBjb25zdCByb3V0ZXIgPSB7XHJcbiAgZ2V0VXJsOiAoKSA9PiB7XHJcbiAgICByZXR1cm4gd2luZG93LmxvY2F0aW9uLmhhc2guc2xpY2UoMSk7XHJcbiAgfSxcclxufTtcclxuIiwiZXhwb3J0IGNsYXNzIFRleHRGaWVsZCB7XHJcbiAgLyoqXHJcbiAgICogQHR5cGVkZWYge09iamVjdH0gVGV4dEZpZWxkQ29uZmlnXHJcbiAgICogQHByb3BlcnR5IHtzdHJpbmd9IGNsYXNzTmFtZSBDU1Mg0LrQu9Cw0YHRgSDRgtC10LrRgdGC0L7QstC+0LPQviDQv9C+0LvRj1xyXG4gICAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBwbGFjZWhvbGRlciDQotC10LrRgdGCINC/0LvQtdC50YHRhdC+0LvQtNC10YDQsFxyXG4gICAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBmaWVsZE5hbWUg0JjQvNGPINC/0L7Qu9GPXHJcbiAgICovXHJcblxyXG4gIC8qKlxyXG4gICAqIEBwYXJhbSB7VGV4dEZpZWxkQ29uZmlnfSBvcHRpb25zINCe0LHRitC10LrRgiDRgSDQvdCw0YHRgtGA0L7QudC60LDQvNC4INC00LvRjyDRgtC10LrRgdGC0L7QstC+0LPQviDQv9C+0LvRj1xyXG4gICAqL1xyXG4gIGNvbnN0cnVjdG9yKG9wdGlvbnMpIHtcclxuICAgIHRoaXMub3B0aW9ucyA9IHtcclxuICAgICAgY2xhc3NOYW1lOiAnJyxcclxuICAgICAgcGxhY2Vob2xkZXI6ICcnLFxyXG4gICAgICBmaWVsZE5hbWU6ICcnLFxyXG4gICAgfTtcclxuXHJcbiAgICBpZiAob3B0aW9ucykge1xyXG4gICAgICB0aGlzLm9wdGlvbnMgPSBPYmplY3QuYXNzaWduKHRoaXMub3B0aW9ucywgb3B0aW9ucyk7XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy5pbml0KCk7XHJcbiAgfVxyXG4gIC8qKlxyXG4gICAqIEBkZXNjcmlwdGlvbiDQmNC90LjRhtC40LDQu9C40LfQsNGG0LjRjyDRjdC70LXQvNC10L3RgtC+0LJcclxuICAgKi9cclxuICBpbml0KCkge1xyXG4gICAgY29uc3QgdGV4dEZpZWxkID0gYDxpbnB1dCB0eXBlPVwidGV4dFwiIGNsYXNzPVwiJHt0aGlzLm9wdGlvbnMuY2xhc3NOYW1lfVwiIHBsYWNlaG9sZGVyPVwiJHt0aGlzLm9wdGlvbnMucGxhY2Vob2xkZXJ9XCIgLz5gO1xyXG4gICAgdGhpcy50ZXh0RmllbGQgPSBuZXcgRE9NUGFyc2VyKCkucGFyc2VGcm9tU3RyaW5nKHRleHRGaWVsZCwgJ3RleHQvaHRtbCcpLmJvZHkuZmlyc3RDaGlsZDtcclxuXHJcbiAgICB0aGlzLnRleHRGaWVsZC5hZGRFdmVudExpc3RlbmVyKCdpbnB1dCcsICgpID0+ICh0aGlzLnZhbGlkID8gdGhpcy50ZXh0RmllbGQuY2xhc3NMaXN0LnJlbW92ZSgnYW5rZXRhX19maWx0ZXJfX2ludmFsaWQnKSA6IG51bGwpKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEBkZXNjcmlwdGlvbiDQlNC+0LHQsNCy0LvRj9C10YIg0L3QtdCy0LDQu9C40LTQvdC+0LzRgyDQv9C+0LvRjiDQtNC+0L/QvtC70L3QuNGC0LXQu9GM0L3Ri9C5INC60LvQsNGB0YFcclxuICAgKi9cclxuICB2YWxpZGF0ZSgpIHtcclxuICAgIGlmICghdGhpcy52YWxpZCkge1xyXG4gICAgICB0aGlzLnRleHRGaWVsZC5jbGFzc0xpc3QuYWRkKCdhbmtldGFfX2ZpbHRlcl9faW52YWxpZCcpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQHJldHVybnMg0JLQvtC30LLRgNCw0YnQsNC10YIg0L3QsNC30LLQsNC90LjQtSDRgtC10LrRgdGC0L7QstC+0LPQviDQv9C+0LvRj1xyXG4gICAqL1xyXG4gIGdldCBmaWVsZE5hbWUoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5vcHRpb25zLmZpZWxkTmFtZTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEByZXR1cm5zINCS0L7Qt9Cy0YDQsNGJ0LDQtdGCINC30L3QsNGH0LXQvdC40LUg0YLQtdC60YHRgtC+0LLQvtCz0L4g0L/QvtC70Y9cclxuICAgKi9cclxuICBnZXQgdmFsdWUoKSB7XHJcbiAgICByZXR1cm4gdGhpcy50ZXh0RmllbGQudmFsdWU7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBAcmV0dXJucyDQktC+0LfQstGA0LDRidCw0LXRgiDQt9C90LDRh9C10L3QuNC1INC30LDQv9C+0LvQvdC10L3QviDQv9C+0LvQtSDQuNC70Lgg0L3QtdGCXHJcbiAgICovXHJcbiAgZ2V0IHZhbGlkKCkge1xyXG4gICAgaWYgKHRoaXMudmFsdWUpIHtcclxuICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIGZhbHNlO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQHJldHVybnMg0JLQvtC30LLRgNCw0YnQsNC10YIgSFRNTCDQtdC70LXQvNC10L3RgiDRgtC10LrRgdGC0L7QstC+0LPQviDQv9C+0LvRj1xyXG4gICAqL1xyXG4gIGdldCBlbGVtZW50KCkge1xyXG4gICAgcmV0dXJuIHRoaXMudGV4dEZpZWxkO1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgeyBUZXh0RmllbGQgfSBmcm9tICcuLi9saWIvdGVzdEZpZWxkJztcclxuaW1wb3J0IHsgQnV0dG9uIH0gZnJvbSAnLi4vbGliL2J1dHRvbic7XHJcbmltcG9ydCB7IE1vZGFsIH0gZnJvbSAnLi9tb2RhbCc7XHJcblxyXG5leHBvcnQgY2xhc3MgQW5rZXRhIHtcclxuICBjb25zdHJ1Y3RvcigpIHtcclxuICAgIHRoaXMuaW5pdCgpO1xyXG4gIH1cclxuICAvKipcclxuICAgKiBAZGVzY3JpcHRpb24g0JjQvdC40YbQuNCw0LvQuNC30LDRhtC40Y8g0Y3Qu9C10LzQtdC90YLQvtCyXHJcbiAgICovXHJcbiAgaW5pdCgpIHtcclxuICAgIHRoaXMuYW5rZXRhID0gbmV3IERPTVBhcnNlcigpLnBhcnNlRnJvbVN0cmluZyh0aGlzLmdldEFua2V0YU1hcmt1cCgpLCAndGV4dC9odG1sJykuYm9keS5maXJzdENoaWxkO1xyXG4gICAgdGhpcy5hZGRGaWx0ZXJzKCk7XHJcbiAgICB0aGlzLmFkZEJ1dHRvbigpO1xyXG4gICAgdGhpcy5tb2RhbCA9IG5ldyBNb2RhbCgn0JfQsNGP0LLQutCwINCyINC60L7RgdC80L7QvdCw0LLRgtGLJywgdGhpcy5lbGVtZW50KTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEByZXR1cm5zINCg0LDQt9C80LXRgtC60LAg0LDQvdC60LXRgtGLXHJcbiAgICovXHJcbiAgZ2V0QW5rZXRhTWFya3VwKCkge1xyXG4gICAgcmV0dXJuIGBcclxuICAgIDxkaXYgY2xhc3M9XCJhbmtldGFcIj5cclxuICAgICA8ZGl2IGNsYXNzPVwiYW5rZXRhX19jb250ZW50XCI+XHJcbiAgICAgICA8ZGl2IGNsYXNzPVwiYW5rZXRhX19pbWFnZS13cmFwcGVyXCI+XHJcbiAgICAgICAgIDxpbWcgc3JjPVwiLi9pbWFnZXMvYW5rZXRhLmpwZ1wiIGFsdD1cImltYWdlXCIgLz5cclxuICAgICAgIDwvZGl2PlxyXG4gICAgICAgPGRpdiBjbGFzcz1cImFua2V0YV9fZmlsdGVycy13cmFwcGVyXCI+XHJcbiAgICAgICAgICA8aDMgY2xhc3M9XCJhbmtldGFfX3RpdGxlXCI+0JfQsNC/0L7Qu9C90LjRgtC1INCy0YHQtSDQv9C+0LvRjyE8L2gzPlxyXG4gICAgICAgICAgPGRpdiBjbGFzcz1cImFua2V0YV9fZmlsdGVyc1wiPlxyXG4gICBcclxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJhbmtldGFfX2J1dHRvbnMtd3JhcHBlclwiPjwvZGl2PlxyXG4gICAgICAgPC9kaXY+XHJcbiAgICAgPC9kaXY+XHJcbiAgIDwvZGl2PlxyXG5gO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQHJldHVybnMg0KDQsNC30LzQtdGC0LrQsCDQv9C+0LfQtNGA0LDQstC70LXQvdC40Y8g0L4g0L/RgNC40LXQvNC1INCw0L3QutC10YLRi1xyXG4gICAqL1xyXG4gIGdldFJlc3VsdE1hcmt1cCgpIHtcclxuICAgIHJldHVybiBgXHJcbiAgICAgICA8ZGl2IGNsYXNzPVwiYW5rZXRhXCI+XHJcbiAgICAgICAgIDxkaXYgY2xhc3M9XCJhbmtldGFfX2NvbnRlbnRcIj5cclxuICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYW5rZXRhX19yZXN1bHRcIiA+XHJcbiAgICAgICAgICAgICA8aDMgY2xhc3M9XCJhbmtldGFfX3Jlc3VsdC10aXRsZVwiPiR7dGhpcy5maWx0ZXJzLmZpcnN0TmFtZS52YWx1ZX0sINC/0L7QtNC30YDQsNCy0LvRj9C10LwhPC9oMz5cclxuICAgICAgICAgICAgIDxwIGNsYXNzPVwiYW5rZXRhX19yZXN1bHQtdGV4dFwiPlxyXG4gICAgICAgICAgICAgICDQktCw0YjQsCDQt9Cw0Y/QstC60LAg0L3QsCDQv9C+0YHRgtGD0L/Qu9C10L3QuNC1INCyINC+0YLRgNGP0LQg0LrQvtGB0LzQvtC90LDQstGC0L7QsiDQv9GA0LjQvdGP0YLQsC4g0JIg0LHQu9C40LbQsNC50YjQtdC1INCy0YDQtdC80Y8g0LzRiyDRgNCw0YHRgdC80L7RgtGA0LjQvCDQktCw0YjRgyDQutCw0L3QtNC40LTQsNGC0YPRgNGDINC4INC+INGA0LXQt9GD0LvRjNGC0LDRgtCw0YVcclxuICAgICAgICAgICAgICAg0YHQvtC+0LHRidC40Lwg0LIg0YjQutC+0LvRgyDihJYke3RoaXMuZmlsdGVycy5zY2hvb2wudmFsdWV9LlxyXG4gICAgICAgICAgICAgPC9wPlxyXG4gICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICA8L2Rpdj5cclxuICAgICAgIDwvZGl2PlxyXG4gICAgYDtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEBkZXNjcmlwdGlvbiDQodC+0LfQtNCw0LXRgiDQvtCx0YrQtdC60YIg0YEg0YLQtdC60YHRgtC+0LLRi9C80Lgg0L/QvtC70Y/QvNC4INC60L7QvNC/0L7QvdC10L3RgtCwXHJcbiAgICovXHJcbiAgYWRkRmlsdGVycygpIHtcclxuICAgIGNvbnN0IGZpbHRlcnNDb250YWluZXIgPSB0aGlzLmFua2V0YS5xdWVyeVNlbGVjdG9yKCcuYW5rZXRhX19maWx0ZXJzJyk7XHJcbiAgICB0aGlzLmZpbHRlcnMgPSB7fTtcclxuXHJcbiAgICB0aGlzLmZpbHRlck9wdGlvbnMuZm9yRWFjaCgoZmlsdGVyKSA9PiB7XHJcbiAgICAgIHRoaXMuZmlsdGVyc1tmaWx0ZXIuZmllbGROYW1lXSA9IG5ldyBUZXh0RmllbGQoZmlsdGVyKTtcclxuICAgICAgZmlsdGVyc0NvbnRhaW5lci5wcmVwZW5kKHRoaXMuZmlsdGVyc1tmaWx0ZXIuZmllbGROYW1lXS5lbGVtZW50KTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQGRlc2NyaXB0aW9uINCU0L7QsdCw0LLQu9GP0LXRgiDQutC90L7Qv9C60YMg0L/RgNC40LXQvNGPINC30LDRj9Cy0LrQuFxyXG4gICAqL1xyXG4gIGFkZEJ1dHRvbigpIHtcclxuICAgIGNvbnN0IGJ1dHRvbkNvbnRhaW5lciA9IHRoaXMuYW5rZXRhLnF1ZXJ5U2VsZWN0b3IoJy5hbmtldGFfX2J1dHRvbnMtd3JhcHBlcicpO1xyXG4gICAgY29uc3QgYnRuQ29uZmlnID0ge1xyXG4gICAgICBjbGFzc05hbWU6ICdidXR0b24nLFxyXG4gICAgICBhZGRDbGFzc05hbWU6ICd5ZWxsb3ctYnV0dG9uJyxcclxuICAgICAgdGV4dDogJ9Cf0L7QtNCw0YLRjCDQt9Cw0Y/QstC60YMnLFxyXG4gICAgfTtcclxuICAgIHRoaXMuYnV0dG9uID0gbmV3IEJ1dHRvbihidG5Db25maWcsIHRoaXMuYWNjZXB0QW5rZXRhLmJpbmQodGhpcykpO1xyXG4gICAgYnV0dG9uQ29udGFpbmVyLmFwcGVuZCh0aGlzLmJ1dHRvbi5lbGVtZW50KTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEBkZXNjcmlwdGlvbiDQn9GA0L7QstC+0LTQuNGCINCy0LDQu9C40LTQsNGG0LjRjyDQv9C+0LvQtdC5INCx0LvQvtC60LAg0YTQuNC70YzRgtGA0L7Qsiwg0Lgg0LIg0YHQu9GD0YfQsNC1INGD0YHQv9C10YXQsCDQstGL0LLQvtC00LjRgiDRgdC+0L7QsdGJ0LXQvdC40LUg0L4g0L/RgNC40LXQvNC1INC30LDRj9Cy0LrQuFxyXG4gICAqL1xyXG4gIGFjY2VwdEFua2V0YSgpIHtcclxuICAgIE9iamVjdC52YWx1ZXModGhpcy5maWx0ZXJzKS5mb3JFYWNoKChmaWx0ZXIpID0+IHtcclxuICAgICAgZmlsdGVyLnZhbGlkYXRlKCk7XHJcbiAgICB9KTtcclxuXHJcbiAgICBpZiAoT2JqZWN0LnZhbHVlcyh0aGlzLmZpbHRlcnMpLmV2ZXJ5KChmaWx0ZXIpID0+IGZpbHRlci52YWxpZCkpIHtcclxuICAgICAgY29uc3QgcmVzdWx0ID0gbmV3IERPTVBhcnNlcigpLnBhcnNlRnJvbVN0cmluZyh0aGlzLmdldFJlc3VsdE1hcmt1cCgpLCAndGV4dC9odG1sJykuYm9keS5maXJzdENoaWxkO1xyXG5cclxuICAgICAgdGhpcy5tb2RhbC5hZGRDb250ZW50KHJlc3VsdCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBAcmV0dXJucyDQktC+0LfQstGA0LDRidCw0LXRgiDQvNCw0YHRgdC40LIg0YEg0L3QsNGB0YLRgNC+0LnQutCw0LzQuCDQv9C+0LvQtdC5INCx0LvQvtC60LAg0YTQuNC70YzRgtGA0L7QslxyXG4gICAqL1xyXG4gIGdldCBmaWx0ZXJPcHRpb25zKCkge1xyXG4gICAgcmV0dXJuIFtcclxuICAgICAge1xyXG4gICAgICAgIGNsYXNzTmFtZTogJ2Fua2V0YV9fZmlsdGVyJyxcclxuICAgICAgICBwbGFjZWhvbGRlcjogJ9Ca0LvQsNGB0YEnLFxyXG4gICAgICAgIGZpZWxkTmFtZTogJ2NsYXNzJyxcclxuICAgICAgfSxcclxuICAgICAge1xyXG4gICAgICAgIGNsYXNzTmFtZTogJ2Fua2V0YV9fZmlsdGVyJyxcclxuICAgICAgICBwbGFjZWhvbGRlcjogJ9Cd0L7QvNC10YAg0YjQutC+0LvRiycsXHJcbiAgICAgICAgZmllbGROYW1lOiAnc2Nob29sJyxcclxuICAgICAgfSxcclxuICAgICAge1xyXG4gICAgICAgIGNsYXNzTmFtZTogJ2Fua2V0YV9fZmlsdGVyJyxcclxuICAgICAgICBwbGFjZWhvbGRlcjogJ9CY0LzRjycsXHJcbiAgICAgICAgZmllbGROYW1lOiAnZmlyc3ROYW1lJyxcclxuICAgICAgfSxcclxuICAgICAge1xyXG4gICAgICAgIGNsYXNzTmFtZTogJ2Fua2V0YV9fZmlsdGVyJyxcclxuICAgICAgICBwbGFjZWhvbGRlcjogJ9Ck0LDQvNC40LvQuNGPJyxcclxuICAgICAgICBmaWVsZE5hbWU6ICdsYXN0TmFtZScsXHJcbiAgICAgIH0sXHJcbiAgICBdO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQHJldHVybnMgSFRNTCDQsNC90LrQtdGC0YtcclxuICAgKi9cclxuICBnZXQgZWxlbWVudCgpIHtcclxuICAgIHJldHVybiB0aGlzLmFua2V0YTtcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IHsgQnV0dG9uIH0gZnJvbSAnLi4vbGliL2J1dHRvbic7XHJcbmltcG9ydCB7IEFua2V0YSB9IGZyb20gJy4vYW5rZXRhJztcclxuXHJcbmV4cG9ydCBjbGFzcyBIZWFkZXIge1xyXG4gIC8qKlxyXG4gICAqIEB0eXBlZGVmIHtPYmplY3R9IEJ1dHRvbnNPYmpcclxuICAgKiBAcHJvcGVydHkge3N0cmluZ30gY2xhc3NOYW1lINCa0LvQsNGB0YEgQ1NTINC00LvRjyDQutC90L7Qv9C60LhcclxuICAgKiBAcHJvcGVydHkge3N0cmluZ30gYWRkQ2xhc3NOYW1lINCU0L7Qv9C+0LvQvdC40YLQtdC70YzQvdGL0Lkg0LrQu9Cw0YHRgSBDU1Mg0LTQu9GPINC60L3QvtC/0LrQuFxyXG4gICAqIEBwcm9wZXJ0eSB7c3RyaW5nfSB0ZXh0INCi0LXQutGB0YIg0L3QsCDQutC90L7Qv9C60LVcclxuICAgKi9cclxuXHJcbiAgLyoqXHJcbiAgICogQHR5cGVkZWYge09iamVjdH0gTWVudUl0ZW1zQXJyXHJcbiAgICogQHByb3BlcnR5IHtzdHJpbmd9IHRpdGxlINCi0LXQutGBINGN0LvQtdC80LXQvdGC0LAg0LzQtdC90Y5cclxuICAgKiBAcHJvcGVydHkge3N0cmluZ30gbmFtZSDQmNC80Y8g0Y3Qu9C10LzQtdC90YLQsCDQvNC10L3RjlxyXG4gICAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBsaW5rTmFtZSDQodGB0YvQu9C60LAg0LTQu9GPINCw0YLRgNC40LHRg9GA0LAgaHJlZlxyXG4gICAqL1xyXG5cclxuICAvKipcclxuICAgKiBAdHlwZWRlZiB7T2JqZWN0fSBIZWFkZXJPcHRpb25zXHJcbiAgICogQHByb3BlcnR5IHtNZW51SXRlbXNBcnJ9IG1lbnVJdGVtcyDQnNCw0YHRgdC40LIg0Y3Qu9C10LzQtdC90YLQvtCyINC80LXQvdGOINC00LXRgdC60YLQvtC/XHJcbiAgICogQHByb3BlcnR5IHtNZW51SXRlbXNBcnJ9IG1vYmlsZU1lbnVJdGVtcyDQnNCw0YHRgdC40LIg0Y3Qu9C10LzQtdC90YLQvtCyINC80L7QsdC40LvRjNC90L7Qs9C+INC80LXQvdGOXHJcbiAgICogQHByb3BlcnR5IHtzdHJpbmd9IGxvZ29JY29uTGluayDQodGB0YvQu9C60LAg0L3QsCDQuNC30L7QsdGA0LDQttC10L3QuNC1INC00LvRjyDQu9C+0LPQvtGC0LjQv9CwXHJcbiAgICogQHByb3BlcnR5IHtzdHJpbmd9IGxvZ29IcmVmINCh0YHRi9C70LrQsCDQtNC70Y8g0LDRgtGA0LjQsdGD0YDQsCBocmVmXHJcbiAgICogQHByb3BlcnR5IHtzdHJpbmd9IHRpdGxlINCX0LDQs9C+0LvQvtCy0L7QuiBIZWFkZXJcclxuICAgKiBAcHJvcGVydHkge0J1dHRvbnNPYmp9IGJ1dHRvblNldHRpbmdzINCe0LHRitC10LrRgiDRgSDQvdCw0YHRgtGA0L7QudC60LDQvNC4INC00LvRjyDQutC90L7Qv9C60LhcclxuICAgKi9cclxuXHJcbiAgLyoqXHJcbiAgICogQHBhcmFtIHtIZWFkZXJPcHRpb25zfSBvcHRpb25zXHJcbiAgICovXHJcbiAgY29uc3RydWN0b3Iob3B0aW9ucykge1xyXG4gICAgdGhpcy5vcHRpb25zID0ge1xyXG4gICAgICBtZW51SXRlbXM6IFtdLFxyXG4gICAgICBtb2JpbGVNZW51SXRlbXM6IFtdLFxyXG4gICAgICBsb2dvSWNvbkxpbms6ICcnLFxyXG4gICAgICBsb2dvSHJlZjogJy8jJyxcclxuICAgICAgdGl0bGU6ICcnLFxyXG4gICAgICBidXR0b25TZXR0aW5nczoge30sXHJcbiAgICB9O1xyXG5cclxuICAgIGlmIChvcHRpb25zKSB7XHJcbiAgICAgIHRoaXMub3B0aW9ucyA9IE9iamVjdC5hc3NpZ24odGhpcy5vcHRpb25zLCBvcHRpb25zKTtcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLmJ1dHRvbiA9IG5ldyBCdXR0b24odGhpcy5vcHRpb25zLmJ1dHRvblNldHRpbmdzKTtcclxuXHJcbiAgICB0aGlzLmluaXQoKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEBkZXNjcmlwdGlvbiDQmNC90LjRhtC40LDQu9C40LfQsNGG0LjRjyDRjdC70LXQvNC10L3RgtC+0LIsINGD0YHRgtCw0L3QvtCy0LrQsCDRgdC70YPRiNCw0YLQtdC70LXQuSDRgdC+0LHRi9GC0LjQuVxyXG4gICAqL1xyXG4gIGluaXQoKSB7XHJcbiAgICB0aGlzLmhlYWRlciA9IG5ldyBET01QYXJzZXIoKS5wYXJzZUZyb21TdHJpbmcodGhpcy5nZXRIZWFkZXJIdG1sU3RyaW5nKHRoaXMub3B0aW9ucyksICd0ZXh0L2h0bWwnKS5ib2R5LmZpcnN0Q2hpbGQ7XHJcblxyXG4gICAgY29uc3QgaGVhZGVyQnV0dG9uID0gdGhpcy5oZWFkZXIucXVlcnlTZWxlY3RvcignLmhlYWRlcl9fYnRuJyk7XHJcbiAgICBoZWFkZXJCdXR0b24uYXBwZW5kKG5ldyBCdXR0b24odGhpcy5vcHRpb25zLmJ1dHRvblNldHRpbmdzLCB0aGlzLmZpbGxRdWVzdGlvbm5haXJlKS5lbGVtZW50KTtcclxuXHJcbiAgICBjb25zdCBtb2JpbGVIZWFkZXJCdXR0b24gPSB0aGlzLmhlYWRlci5xdWVyeVNlbGVjdG9yKCcubW9iaWxlLWhlYWRlcl9fYnRuJyk7XHJcbiAgICBtb2JpbGVIZWFkZXJCdXR0b24uYXBwZW5kKG5ldyBCdXR0b24odGhpcy5vcHRpb25zLmJ1dHRvblNldHRpbmdzKS5lbGVtZW50KTtcclxuXHJcbiAgICB0aGlzLmFkZE1lbnVJdGVtcygpO1xyXG5cclxuICAgIHRoaXMubW9iaWxlTWVudSA9IHRoaXMuaGVhZGVyLnF1ZXJ5U2VsZWN0b3IoJy5tb2JpbGUtbWVudScpO1xyXG4gICAgdGhpcy5tb2JpbGVNZW51U2hvd0J1dHRvbiA9IHRoaXMuaGVhZGVyLnF1ZXJ5U2VsZWN0b3IoJy5tb2JpbGUtaGVhZGVyX19tZW51Jyk7XHJcbiAgICB0aGlzLm1vYmlsZU1lbnVTaG93QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5zaG93TW9iaWxlTWVudS5iaW5kKHRoaXMpKTtcclxuXHJcbiAgICB0aGlzLm1vYmlsZU1lbnVIaWRlQnV0dG9uID0gdGhpcy5oZWFkZXIucXVlcnlTZWxlY3RvcignLm1vYmlsZS1tZW51X19jbG9zZScpO1xyXG4gICAgdGhpcy5tb2JpbGVNZW51SGlkZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuaGlkZU1vYmlsZU1lbnUuYmluZCh0aGlzKSk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBAcmV0dXJucyDQoNCw0LfQvNC10YLQutCwINC60L7QvNC/0L7QvdC10L3RgtCwINCyINGB0YLRgNC+0LrQvtCy0L7QvCDRhNC+0YDQvNCw0YLQtVxyXG4gICAqL1xyXG4gIGdldEhlYWRlckh0bWxTdHJpbmcoKSB7XHJcbiAgICByZXR1cm4gYFxyXG4gICAgPGhlYWRlciBjbGFzcz1cImhlYWRlclwiPlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJjb250YWluZXJcIj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImhlYWRlcl9fY29udGVudC13cmFwcGVyXCI+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJoZWFkZXJfX3dyYXBwZXJcIj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJoZWFkZXJfX2xvZ29cIj5cclxuICAgICAgICAgICAgICAgIDxhIGhyZWY9XCIke3RoaXMub3B0aW9ucy5sb2dvSHJlZn1cIiBjbGFzcz1cImhlYWRlcl9fbG9nby1saW5rXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9XCIke3RoaXMub3B0aW9ucy5sb2dvSWNvbkxpbmt9XCIgYWx0PVwibG9nb1wiIC8+XHJcbiAgICAgICAgICAgICAgICA8L2E+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJoZWFkZXJfX3RpdGxlXCI+JHt0aGlzLm9wdGlvbnMudGl0bGV9PC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiaGVhZGVyX19idG5cIj4gIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwibWVudVwiPjwvZGl2PlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwibW9iaWxlLWhlYWRlclwiPlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwibW9iaWxlLWhlYWRlcl9fbWVudVwiPlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm1vYmlsZS1tZW51X19saW5lXCI+PC9kaXY+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwibW9iaWxlLWhlYWRlcl9fdGl0bGVcIj4ke3RoaXMub3B0aW9ucy50aXRsZX08L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm1vYmlsZS1oZWFkZXJfX2J0blwiPiAgPC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtb2JpbGUtbWVudSBtb2JpbGUtbWVudV9faGlkZGVuXCI+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibW9iaWxlLW1lbnVfX2hlYWRcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibW9iaWxlLW1lbnVfX2Nsb3NlXCI+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm1vYmlsZS1tZW51X19jb250ZW50XCI+PC9kaXY+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgPC9oZWFkZXI+XHJcbiAgICBgO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQGRlc2NyaXB0aW9uINCU0L7QsdCw0LLQu9GP0LXRgiDRjdC70LXQvNC10L3RgtGLINC00LXRgdC60YLQvtC/0L3QvtCz0L4g0Lgg0LzQvtCx0LjQu9GM0L3QvtCz0L4g0LzQtdC90Y5cclxuICAgKi9cclxuICBhZGRNZW51SXRlbXMoKSB7XHJcbiAgICBjb25zdCBtYWluTWVudUNvbnRhaW50ZXIgPSB0aGlzLmhlYWRlci5xdWVyeVNlbGVjdG9yKCcubWVudScpO1xyXG4gICAgY29uc3QgbW9iaWxlTWVudUNvbnRhaW50ZXIgPSB0aGlzLmhlYWRlci5xdWVyeVNlbGVjdG9yKCcubW9iaWxlLW1lbnVfX2NvbnRlbnQnKTtcclxuXHJcbiAgICB0aGlzLm9wdGlvbnMubWVudUl0ZW1zLmZvckVhY2goKGl0ZW0pID0+IHtcclxuICAgICAgY29uc3QgbWVudUl0ZW0gPSBuZXcgRE9NUGFyc2VyKCkucGFyc2VGcm9tU3RyaW5nKGA8YSBocmVmPVwiJHtpdGVtLmxpbmtOYW1lfVwiIGNsYXNzPVwibWVudV9faXRlbVwiID4ke2l0ZW0udGl0bGV9PC9hPmAsICd0ZXh0L2h0bWwnKS5ib2R5XHJcbiAgICAgICAgLmZpcnN0Q2hpbGQ7XHJcblxyXG4gICAgICBtYWluTWVudUNvbnRhaW50ZXIuYXBwZW5kKG1lbnVJdGVtKTtcclxuICAgIH0pO1xyXG5cclxuICAgIHRoaXMub3B0aW9ucy5tb2JpbGVNZW51SXRlbXMuZm9yRWFjaCgoaXRlbSkgPT4ge1xyXG4gICAgICBjb25zdCBtZW51SXRlbSA9IG5ldyBET01QYXJzZXIoKS5wYXJzZUZyb21TdHJpbmcoYDxhIGhyZWY9XCIke2l0ZW0ubGlua05hbWV9XCIgY2xhc3M9XCJtb2JpbGUtbWVudV9faXRlbVwiID4ke2l0ZW0udGl0bGV9PC9hPmAsICd0ZXh0L2h0bWwnKS5ib2R5XHJcbiAgICAgICAgLmZpcnN0Q2hpbGQ7XHJcblxyXG4gICAgICBtb2JpbGVNZW51Q29udGFpbnRlci5hcHBlbmQobWVudUl0ZW0pO1xyXG4gICAgICBtZW51SXRlbS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuaGlkZU1vYmlsZU1lbnUuYmluZCh0aGlzKSk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEBkZXNjcmlwdGlvbiDQodC60YDRi9Cy0LDQtdGCINC80L7QsdC40LvRjNC90L7QtSDQvNC10L3RjlxyXG4gICAqL1xyXG4gIGhpZGVNb2JpbGVNZW51KCkge1xyXG4gICAgdGhpcy5tb2JpbGVNZW51LmNsYXNzTGlzdC5hZGQoJ21vYmlsZS1tZW51X19oaWRkZW4nKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEBkZXNjcmlwdGlvbiDQntGC0L7QsdGA0LDQttCw0LXRgiDQvNC+0LHQuNC70YzQvdC+0LUg0LzQtdC90Y5cclxuICAgKi9cclxuICBzaG93TW9iaWxlTWVudSgpIHtcclxuICAgIHRoaXMubW9iaWxlTWVudS5jbGFzc0xpc3QucmVtb3ZlKCdtb2JpbGUtbWVudV9faGlkZGVuJyk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBAZGVzY3JpcHRpb24g0JjQvdC40YbQuNCw0LvQuNC30LDRhtC40Y8g0Lgg0L7RgtC+0LHRgNCw0LbQtdC90LjQtSDQt9Cw0Y/QstC60Lgg0LIg0L7RgtGA0Y/QtCDQutC+0YHQvNC+0L3QsNCy0YLQvtCyXHJcbiAgICovXHJcbiAgZmlsbFF1ZXN0aW9ubmFpcmUoKSB7XHJcbiAgICBuZXcgQW5rZXRhKCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBAcmV0dXJucyDQktC+0LfQstGA0LDRidCw0LXRgiDRgNCw0LfQvNC10YLQutGDINC60L7QvNC/0L7QvdC10L3RgtCwXHJcbiAgICovXHJcbiAgZ2V0IGVsZW1lbnQoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5oZWFkZXI7XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCB7IEZvb3RlciB9IGZyb20gJy4vZm9vdGVyJztcclxuaW1wb3J0IHsgZm9vdGVyU2V0dGluZ3MgfSBmcm9tICcuLi9kYXRhL2RhdGEnO1xyXG5pbXBvcnQgeyBDb250ZW50IH0gZnJvbSAnLi9jb250ZW50JztcclxuaW1wb3J0IHsgSGVhZGVyIH0gZnJvbSAnLi9oZWFkZXInO1xyXG5pbXBvcnQgeyBoZWFkZXJTZXR0aW5ncyB9IGZyb20gJy4uL2RhdGEvZGF0YSc7XHJcblxyXG5leHBvcnQgY2xhc3MgQXBwIHtcclxuICBjb25zdHJ1Y3RvcigpIHtcclxuICAgIHRoaXMuYXBwID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2FwcCcpO1xyXG4gICAgdGhpcy5pbml0KCk7XHJcbiAgfVxyXG4gIGluaXQoKSB7XHJcbiAgICB0aGlzLmFwcC5hcHBlbmQobmV3IEhlYWRlcihoZWFkZXJTZXR0aW5ncykuZWxlbWVudCwgbmV3IENvbnRlbnQoKS5lbGVtZW50LCBuZXcgRm9vdGVyKGZvb3RlclNldHRpbmdzKS5lbGVtZW50KTtcclxuICB9XHJcblxyXG4gIGdldCBlbGVtZW50KCkge1xyXG4gICAgcmV0dXJuIHRoaXMuYXBwO1xyXG4gIH1cclxufVxyXG4iLCJyZXF1aXJlLmNvbnRleHQoJy4vaW1hZ2VzJywgdHJ1ZSwgL1xcLihwbmd8anBnfHN2Z3xnaWYpJC8pO1xyXG5pbXBvcnQgeyBzdHlsZXMgfSBmcm9tICcuL3N0eWxlcy9zdHlsZXMuc2Nzcyc7XHJcbmltcG9ydCB7IEFwcCB9IGZyb20gJy4vamF2YXNjcmlwdC9jb21wb25lbnRzL2FwcCc7XHJcblxyXG4oKCkgPT4ge1xyXG4gIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCAoKSA9PiB7XHJcbiAgICBjb25zdCBhcHAgPSBuZXcgQXBwKCk7XHJcbiAgICBkb2N1bWVudC5ib2R5LmFwcGVuZChhcHAuZWxlbWVudCk7XHJcbiAgfSk7XHJcbn0pKCk7XHJcbiJdLCJuYW1lcyI6WyJtYXAiLCJ3ZWJwYWNrQ29udGV4dCIsInJlcSIsImlkIiwid2VicGFja0NvbnRleHRSZXNvbHZlIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm8iLCJlIiwiRXJyb3IiLCJjb2RlIiwia2V5cyIsIk9iamVjdCIsInJlc29sdmUiLCJtb2R1bGUiLCJleHBvcnRzIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJ1bmRlZmluZWQiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwiZyIsImdsb2JhbFRoaXMiLCJ0aGlzIiwiRnVuY3Rpb24iLCJ3aW5kb3ciLCJvYmoiLCJwcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwic2NyaXB0VXJsIiwiaW1wb3J0U2NyaXB0cyIsImxvY2F0aW9uIiwiZG9jdW1lbnQiLCJjdXJyZW50U2NyaXB0Iiwic3JjIiwic2NyaXB0cyIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwibGVuZ3RoIiwicmVwbGFjZSIsInAiLCJjcmVhdGVFbGVtZW50IiwidGFnTmFtZSIsImNsYXNzTmFtZSIsImFkZGl0aW9uYWxDbGFzcyIsImVsZW1lbnQiLCJjbGFzc0xpc3QiLCJhZGQiLCJGb290ZXIiLCJjb25zdHJ1Y3RvciIsInNldHRpbmdzIiwiZGVmcyIsInRleHQiLCJhc3NpZ24iLCJpbml0IiwibGF5b3V0IiwiY29udGFpbmVyIiwiY29udGVudCIsImlubmVyVGV4dCIsImFwcGVuZCIsImZvb3RlclNldHRpbmdzIiwiaGVhZGVyU2V0dGluZ3MiLCJtZW51SXRlbXMiLCJ0aXRsZSIsIm5hbWUiLCJsaW5rTmFtZSIsIm1vYmlsZU1lbnVJdGVtcyIsImxvZ29JY29uTGluayIsImxvZ29IcmVmIiwiYnV0dG9uU2V0dGluZ3MiLCJhZGRDbGFzc05hbWUiLCJtYWluUGFnZURhdGEiLCJwcmV2aWV3U2V0dGluZ3MiLCJzbGlkZXIiLCJzbGlkZXMiLCJ0aGVtZSIsInNsb2dhbiIsInNsb2dhbkF1dGhvciIsInRlbWF0aWNCbG9jayIsImltYWdlIiwibGluayIsImJ1dHRvblRleHQiLCJjYXRlZ29yaWVzUGFnZURhdGEiLCJzcGFjZXJzIiwibWFpbkltYWdlIiwiY3J1bWJzIiwiYmxvY2tzIiwiZGVzY3JpcHRpb24iLCJyb2NrZXRzIiwiZWZmZWN0IiwiZGV0YWlsUGFnZURhdGEiLCJidG5UZXh0IiwiUGFnZTQwNCIsIkRPTVBhcnNlciIsInBhcnNlRnJvbVN0cmluZyIsImJvZHkiLCJmaXJzdENoaWxkIiwiZGVzdHJveSIsInJlbW92ZSIsIlNsaWRlciIsImFkZEV2ZW50TGlzdGVuZXJzIiwiZGlyZWN0aW9uIiwiZ2V0U2xpZGVySHRtbFN0cmluZyIsInNsaWRlckNvbnRhaW5lciIsInF1ZXJ5U2VsZWN0b3IiLCJzbGlkZXNSb3ciLCJzdHlsZSIsIndpZHRoIiwic2xpZGVzUm93V2lkdGgiLCJhZGRTbGlkZXJJdGVtcyIsImdldEJ1dHRvbnMiLCJmb3JFYWNoIiwic2xpZGUiLCJzbGlkZUl0ZW1TcnQiLCJzbGlkZUl0ZW0iLCJzbGlkZVdpZHRoIiwiYnV0dG9uQ29udGFpbmVyIiwicHJldkJ1dHRvbiIsIm5leHRCdXR0b24iLCJldmVudExpc3RlbmVycyIsImxpc3RlbmVyIiwidGFyZ2V0SXRlbSIsImFkZEV2ZW50TGlzdGVuZXIiLCJldmVudCIsImNhbGxiYWNrIiwiYmluZCIsInJlbW92ZUV2ZW50TGlzdGVuZXJzIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsInNob3dOZXh0U2xpZGUiLCJwcmVwZW5kIiwibGFzdEVsZW1lbnRDaGlsZCIsImJ1dHRvbnNEaXNhYmxlZCIsInNob3dQcmV2aW91c1NsaWRlIiwiZmlyc3RFbGVtZW50Q2hpbGQiLCJmaW5pc2hBbmltYXRpb24iLCJzZXRUaW1lb3V0IiwidHJhbnNpdGlvbiIsImF1dG9QbGF5IiwiZGVsYXkiLCJzZXRJbnRlcnZhbCIsInZhbHVlIiwic2xpZGVyQnV0dG9ucyIsImJ1dHRvbiIsImRpc2FibGVkIiwiUHJldmlldyIsIm9wdGlvbnMiLCJwcmV2aWV3IiwiZ2V0UHJldmlld0h0bWwiLCJhcHBlbmRTbGlkZXIiLCJUZW1hdGljQmxvY2siLCJibG9jayIsImdldEJsb2NrSHRtbFN0cmluZyIsImFkZFRleHRUb0Jsb2NrIiwidGV4dFdyYXBwZXIiLCJwYXJhZ3JhcGgiLCJ0ZXh0TWFya3VwIiwiQ2F0ZWdvcmllc0l0ZW0iLCJpdGVtIiwiZ2V0SXRlbU1hcmt1cEh0bWwiLCJDYXRlZ29yaWVzIiwiY2F0ZWdvcnkiLCJnZXRDYXRlZ29yeU1hcmt1cCIsImFwcGVuZENydW1icyIsImFwcGVuZENhdGVnb3Jpc0l0ZW0iLCJjcnVtYnNXcmFwcGVyIiwiY3J1bWIiLCJpbmRleCIsImFycmF5IiwiY3J1bWJFbGVtIiwid3JhcHBlciIsIkJ1dHRvbiIsImNvbmZpZyIsInZhbCIsIk1vZGFsIiwiYWRkRGVmYXV0bEJ1dHRvbiIsImFkZExpc3RlbmVycyIsIm1vZGFsIiwiZ2V0TW9kYWxNYXJrdXAiLCJ0aXRsZUNvbnRhaW5lciIsImNvbnRlbnRDb250YWluZXIiLCJhY3Rpb25zIiwiY2xvc2VJY29uQnRuIiwic2hvdyIsImFkZFRpdGxlIiwiYWRkQ29udGVudCIsImhpZGUiLCJhY3Rpb25CdXR0b24iLCJIVE1MRWxlbWVudCIsImlubmVySFRNTCIsIkRldGFpbFBhZ2UiLCJwYWdlIiwiZ2V0UGFnZU1hcmt1cCIsImFkZEJyZWFkQ3J1bWJzIiwiYWRkVGV4dFRvUGFnZSIsImFkZEdhbGVyeUJ1dHRvbiIsImRhdGEiLCJjcnVtYkl0ZW0iLCJidXR0b25XcmFwcGVyIiwiZ2FsZXJ5QnV0dG9uIiwic2hvd1NsaWRlcyIsInJvdXRlcyIsInBhdGgiLCJjb21wb25lbnQiLCJjcmVhdGVEb2N1bWVudEZyYWdtZW50IiwidGVtYXRpY0Jsb2NrcyIsImFwcGVuZENoaWxkIiwiYWRkVGVtYXRpY0Jsb2NrcyIsImJsb2NrU2V0dGluZ3MiLCJwdXNoIiwiQ29udGVudCIsInBhZ2VEYXRhIiwiZGV0YWlsc0RhdGEiLCJhY3RpdmVQYWdlIiwic3RhcnQiLCJpbml0Um91dGVzIiwicmVuZGVyUm91dGUiLCJ1cmwiLCJoYXNoIiwic2xpY2UiLCJyb3V0ZSIsImZpbmQiLCJyb3V0Iiwic2Nyb2xsVG8iLCJhcHBlbmRIdG1sIiwiZGV0YWlsRGF0YSIsInNob3c0MDRwYWdlIiwiVGV4dEZpZWxkIiwicGxhY2Vob2xkZXIiLCJmaWVsZE5hbWUiLCJ0ZXh0RmllbGQiLCJ2YWxpZCIsInZhbGlkYXRlIiwiQW5rZXRhIiwiYW5rZXRhIiwiZ2V0QW5rZXRhTWFya3VwIiwiYWRkRmlsdGVycyIsImFkZEJ1dHRvbiIsImdldFJlc3VsdE1hcmt1cCIsImZpbHRlcnMiLCJmaXJzdE5hbWUiLCJzY2hvb2wiLCJmaWx0ZXJzQ29udGFpbmVyIiwiZmlsdGVyT3B0aW9ucyIsImZpbHRlciIsImFjY2VwdEFua2V0YSIsInZhbHVlcyIsImV2ZXJ5IiwicmVzdWx0IiwiSGVhZGVyIiwiaGVhZGVyIiwiZ2V0SGVhZGVySHRtbFN0cmluZyIsImZpbGxRdWVzdGlvbm5haXJlIiwiYWRkTWVudUl0ZW1zIiwibW9iaWxlTWVudSIsIm1vYmlsZU1lbnVTaG93QnV0dG9uIiwic2hvd01vYmlsZU1lbnUiLCJtb2JpbGVNZW51SGlkZUJ1dHRvbiIsImhpZGVNb2JpbGVNZW51IiwibWFpbk1lbnVDb250YWludGVyIiwibW9iaWxlTWVudUNvbnRhaW50ZXIiLCJtZW51SXRlbSIsIkFwcCIsImFwcCJdLCJzb3VyY2VSb290IjoiIn0=