(()=>{var t={8430:(t,e,s)=>{var i={"./anketa.jpg":5187,"./body_background.jpg":2203,"./category/category_experiments.jpg":1616,"./category/category_kosmo.jpg":3245,"./category/category_rocket.jpg":2726,"./group/impact/adaptation/adaptation1.jpg":7106,"./group/impact/adaptation/adaptation2.jpg":8292,"./group/impact/adaptation/adaptation3.jpg":8300,"./group/impact/adaptation/adaptation4.jpg":7603,"./group/impact/adaptation/adaptation5.jpg":1744,"./group/impact/blood/blood1.jpg":9831,"./group/impact/blood/blood2.jpg":5765,"./group/impact/blood/blood3.jpg":8531,"./group/impact/blood/blood4.jpg":8942,"./group/impact/blood/blood5.jpg":4442,"./group/impact/bones/bones1.jpg":447,"./group/impact/bones/bones2.jpg":5456,"./group/impact/bones/bones3.jpg":816,"./group/impact/bones/bones4.jpg":4665,"./group/impact/bones/bones5.jpg":7845,"./group/impact/endocrine/endocrine1.jpg":1367,"./group/impact/endocrine/endocrine2.jpg":8984,"./group/impact/endocrine/endocrine3.jpg":38,"./group/impact/endocrine/endocrine4.jpg":8070,"./group/impact/endocrine/endocrine5.jpg":3831,"./group/impact/nervous/nervous1.jpg":2388,"./group/impact/nervous/nervous2.jpg":8527,"./group/impact/nervous/nervous3.jpg":8295,"./group/impact/nervous/nervous4.jpg":8826,"./group/impact/nervous/nervous5.jpg":7255,"./group/impact/nervous/nervous6.jpg":396,"./group/impact/respiratory/respiratory1.jpg":3304,"./group/impact/respiratory/respiratory2.jpg":2744,"./group/impact/respiratory/respiratory3.jpg":2229,"./group/impact/respiratory/respiratory4.jpg":1059,"./group/impact/respiratory/respiratory5.jpg":2520,"./group/panorama1.jpg":698,"./group/panorama2.jpg":2596,"./group/panorama20x5.jpg":1062,"./group/panorama3.jpg":8277,"./group/rockets/buran/buran1.jpg":8458,"./group/rockets/buran/buran2.jpg":3998,"./group/rockets/buran/buran3.jpg":958,"./group/rockets/buran/buran4.jpg":9050,"./group/rockets/buran/buran5.jpg":7198,"./group/rockets/proton/proton1.jpg":8176,"./group/rockets/proton/proton2.jpg":4051,"./group/rockets/proton/proton3.jpg":1558,"./group/rockets/proton/proton4.jpg":892,"./group/rockets/proton/proton5.jpg":2601,"./group/rockets/souz/souz1.jpg":1261,"./group/rockets/souz/souz2.jpg":2861,"./group/rockets/souz/souz3.jpg":4830,"./group/rockets/souz/souz4.jpg":9655,"./group/spacers/gagarin/gagarin1.jpg":358,"./group/spacers/gagarin/gagarin10.jpg":6745,"./group/spacers/gagarin/gagarin11.jpg":7205,"./group/spacers/gagarin/gagarin2.jpg":7387,"./group/spacers/gagarin/gagarin3.jpg":4103,"./group/spacers/gagarin/gagarin4.jpg":5534,"./group/spacers/gagarin/gagarin5.jpg":3192,"./group/spacers/gagarin/gagarin6.jpg":1697,"./group/spacers/gagarin/gagarin7.jpg":8784,"./group/spacers/gagarin/gagarin8.jpg":5558,"./group/spacers/gagarin/gagarin9.jpg":936,"./group/spacers/leonov/leonov1.jpg":9262,"./group/spacers/leonov/leonov2.jpg":1013,"./group/spacers/leonov/leonov3.jpg":1550,"./group/spacers/leonov/leonov4.jpg":2795,"./group/spacers/leonov/leonov5.jpg":8732,"./group/spacers/leonov/leonov6.jpg":4334,"./group/spacers/leonov/leonov7.jpg":94,"./group/spacers/leonov/leonov8.jpg":2185,"./group/spacers/savitskaya/savitskaya1.jpg":9617,"./group/spacers/savitskaya/savitskaya10.jpg":7958,"./group/spacers/savitskaya/savitskaya2.jpg":7939,"./group/spacers/savitskaya/savitskaya3.jpg":410,"./group/spacers/savitskaya/savitskaya4.jpg":5314,"./group/spacers/savitskaya/savitskaya5.jpg":5511,"./group/spacers/savitskaya/savitskaya6.jpg":5720,"./group/spacers/savitskaya/savitskaya7.jpg":359,"./group/spacers/savitskaya/savitskaya8.jpg":867,"./group/spacers/savitskaya/savitskaya9.jpg":6156,"./group/spacers/titov/titov1.jpg":270,"./group/spacers/titov/titov2.jpg":8961,"./group/spacers/titov/titov3.jpg":169,"./group/spacers/titov/titov4.jpg":4489,"./group/spacers/titov/titov5.jpg":4241,"./group/spacers/titov/titov6.jpg":8835,"./group/spacers/titov/titov7.jpg":6780,"./logo.jpg":924,"./placeholder16x9.jpg":9069,"./placeholder5x5.jpg":5717,"./slider/btn_next.png":1363,"./slider/btn_prev.png":7839,"./slider/slider_item1.jpg":9930,"./slider/slider_item2.jpg":7887,"./slider/slider_item3.jpg":4204,"./slider/slider_item4.jpg":2875,"./slider/slider_item5.jpg":8059};function a(t){var e=r(t);return s(e)}function r(t){if(!s.o(i,t)){var e=new Error("Cannot find module '"+t+"'");throw e.code="MODULE_NOT_FOUND",e}return i[t]}a.keys=function(){return Object.keys(i)},a.resolve=r,t.exports=a,a.id=8430},5187:(t,e,s)=>{"use strict";t.exports=s.p+"images/anketa.jpg"},2203:(t,e,s)=>{"use strict";t.exports=s.p+"images/body_background.jpg"},1616:(t,e,s)=>{"use strict";t.exports=s.p+"images/category/category_experiments.jpg"},3245:(t,e,s)=>{"use strict";t.exports=s.p+"images/category/category_kosmo.jpg"},2726:(t,e,s)=>{"use strict";t.exports=s.p+"images/category/category_rocket.jpg"},7106:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/impact/adaptation/adaptation1.jpg"},8292:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/impact/adaptation/adaptation2.jpg"},8300:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/impact/adaptation/adaptation3.jpg"},7603:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/impact/adaptation/adaptation4.jpg"},1744:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/impact/adaptation/adaptation5.jpg"},9831:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/impact/blood/blood1.jpg"},5765:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/impact/blood/blood2.jpg"},8531:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/impact/blood/blood3.jpg"},8942:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/impact/blood/blood4.jpg"},4442:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/impact/blood/blood5.jpg"},447:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/impact/bones/bones1.jpg"},5456:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/impact/bones/bones2.jpg"},816:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/impact/bones/bones3.jpg"},4665:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/impact/bones/bones4.jpg"},7845:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/impact/bones/bones5.jpg"},1367:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/impact/endocrine/endocrine1.jpg"},8984:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/impact/endocrine/endocrine2.jpg"},38:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/impact/endocrine/endocrine3.jpg"},8070:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/impact/endocrine/endocrine4.jpg"},3831:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/impact/endocrine/endocrine5.jpg"},2388:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/impact/nervous/nervous1.jpg"},8527:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/impact/nervous/nervous2.jpg"},8295:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/impact/nervous/nervous3.jpg"},8826:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/impact/nervous/nervous4.jpg"},7255:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/impact/nervous/nervous5.jpg"},396:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/impact/nervous/nervous6.jpg"},3304:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/impact/respiratory/respiratory1.jpg"},2744:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/impact/respiratory/respiratory2.jpg"},2229:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/impact/respiratory/respiratory3.jpg"},1059:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/impact/respiratory/respiratory4.jpg"},2520:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/impact/respiratory/respiratory5.jpg"},698:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/panorama1.jpg"},2596:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/panorama2.jpg"},1062:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/panorama20x5.jpg"},8277:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/panorama3.jpg"},8458:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/rockets/buran/buran1.jpg"},3998:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/rockets/buran/buran2.jpg"},958:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/rockets/buran/buran3.jpg"},9050:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/rockets/buran/buran4.jpg"},7198:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/rockets/buran/buran5.jpg"},8176:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/rockets/proton/proton1.jpg"},4051:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/rockets/proton/proton2.jpg"},1558:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/rockets/proton/proton3.jpg"},892:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/rockets/proton/proton4.jpg"},2601:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/rockets/proton/proton5.jpg"},1261:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/rockets/souz/souz1.jpg"},2861:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/rockets/souz/souz2.jpg"},4830:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/rockets/souz/souz3.jpg"},9655:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/rockets/souz/souz4.jpg"},358:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/spacers/gagarin/gagarin1.jpg"},6745:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/spacers/gagarin/gagarin10.jpg"},7205:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/spacers/gagarin/gagarin11.jpg"},7387:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/spacers/gagarin/gagarin2.jpg"},4103:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/spacers/gagarin/gagarin3.jpg"},5534:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/spacers/gagarin/gagarin4.jpg"},3192:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/spacers/gagarin/gagarin5.jpg"},1697:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/spacers/gagarin/gagarin6.jpg"},8784:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/spacers/gagarin/gagarin7.jpg"},5558:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/spacers/gagarin/gagarin8.jpg"},936:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/spacers/gagarin/gagarin9.jpg"},9262:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/spacers/leonov/leonov1.jpg"},1013:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/spacers/leonov/leonov2.jpg"},1550:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/spacers/leonov/leonov3.jpg"},2795:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/spacers/leonov/leonov4.jpg"},8732:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/spacers/leonov/leonov5.jpg"},4334:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/spacers/leonov/leonov6.jpg"},94:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/spacers/leonov/leonov7.jpg"},2185:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/spacers/leonov/leonov8.jpg"},9617:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/spacers/savitskaya/savitskaya1.jpg"},7958:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/spacers/savitskaya/savitskaya10.jpg"},7939:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/spacers/savitskaya/savitskaya2.jpg"},410:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/spacers/savitskaya/savitskaya3.jpg"},5314:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/spacers/savitskaya/savitskaya4.jpg"},5511:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/spacers/savitskaya/savitskaya5.jpg"},5720:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/spacers/savitskaya/savitskaya6.jpg"},359:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/spacers/savitskaya/savitskaya7.jpg"},867:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/spacers/savitskaya/savitskaya8.jpg"},6156:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/spacers/savitskaya/savitskaya9.jpg"},270:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/spacers/titov/titov1.jpg"},8961:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/spacers/titov/titov2.jpg"},169:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/spacers/titov/titov3.jpg"},4489:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/spacers/titov/titov4.jpg"},4241:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/spacers/titov/titov5.jpg"},8835:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/spacers/titov/titov6.jpg"},6780:(t,e,s)=>{"use strict";t.exports=s.p+"images/group/spacers/titov/titov7.jpg"},924:(t,e,s)=>{"use strict";t.exports=s.p+"images/logo.jpg"},9069:(t,e,s)=>{"use strict";t.exports=s.p+"images/placeholder16x9.jpg"},5717:(t,e,s)=>{"use strict";t.exports=s.p+"images/placeholder5x5.jpg"},1363:(t,e,s)=>{"use strict";t.exports=s.p+"images/slider/btn_next.png"},7839:(t,e,s)=>{"use strict";t.exports=s.p+"images/slider/btn_prev.png"},9930:(t,e,s)=>{"use strict";t.exports=s.p+"images/slider/slider_item1.jpg"},7887:(t,e,s)=>{"use strict";t.exports=s.p+"images/slider/slider_item2.jpg"},4204:(t,e,s)=>{"use strict";t.exports=s.p+"images/slider/slider_item3.jpg"},2875:(t,e,s)=>{"use strict";t.exports=s.p+"images/slider/slider_item4.jpg"},8059:(t,e,s)=>{"use strict";t.exports=s.p+"images/slider/slider_item5.jpg"}},e={};function s(i){var a=e[i];if(void 0!==a)return a.exports;var r=e[i]={exports:{}};return t[i](r,r.exports,s),r.exports}s.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),s.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{var t;s.g.importScripts&&(t=s.g.location+"");var e=s.g.document;if(!t&&e&&(e.currentScript&&(t=e.currentScript.src),!t)){var i=e.getElementsByTagName("script");i.length&&(t=i[i.length-1].src)}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),s.p=t})(),(()=>{"use strict";function t(t,e="",s=""){const i=document.createElement(t);return e&&i.classList.add(e),s&&i.classList.add(s),i}class e{constructor(t){this.defs={text:""},t&&(this.defs=Object.assign(this.defs,t)),this.init()}init(){this.layout=t("footer","footer");const e=t("div","container"),s=t("div","footer__content");this.defs.text&&(s.innerText=this.defs.text),e.append(s),this.layout.append(e)}get element(){return this.layout}}const i={text:'Шадрова Ольга Владимировна, класс 11 "В", ГБОУ школа №2009'},a={menuItems:[{title:"Космонавты",name:"spacers",linkName:"/#spacers"},{title:"Ракеты",name:"rockets",linkName:"/#rockets"},{title:"Влияние на организм",name:"effect",linkName:"/#effect"}],mobileMenuItems:[{title:"Главная",name:"main",linkName:"/#"},{title:"Космонавты",name:"spacers",linkName:"/#spacers"},{title:"Ракеты",name:"rockets",linkName:"/#rockets"},{title:"Влияние на организм",name:"effect",linkName:"/#effect"}],logoIconLink:'./images/logo.jpg" alt="logo"',logoHref:"/#",title:"Ольга Шадрова",buttonSettings:{className:"button",addClassName:"yellow-button",text:"Cтать космонавтом"}},r={previewSettings:{slider:{slides:["./images/slider/slider_item1.jpg","./images/slider/slider_item2.jpg","./images/slider/slider_item3.jpg","./images/slider/slider_item4.jpg","./images/slider/slider_item5.jpg"]},theme:"Влияние космического пространства на организм человека",slogan:"Космонавтика имеет безграничное будущее, и ее перспективы беспредельны, как сама Вселенная.",sloganAuthor:"С.П. Королев"},tematicBlock:[{image:"./images/category/category_kosmo.jpg",title:"Российские и советские космонавты",text:["Юрий Гагарин – «Кедр», Алексей Леонов – «Алмаз», Сергей Крикалев – «Базальт», Светлана Савицкая – «Памир-2». Кто из детей хотя бы раз не мечтал стать космонавтом и с орбиты подать собственные позывные, которые услышит весь мир? Кому не хотелось хотя бы однажды, надев скафандр, оказаться в сверкающей бездне открытого космоса?","Но какой бы романтичной ни казалась профессия космонавт, она требует очень серьезной подготовки: долгого обучения, изматывающих физических тренировок, психологического напряжения. Только выдержав все подготовительные этапы, человек может стать покорителем космоса – сильным духом и здоровьем, для которого не существует границ в пространстве и времени."],link:"/#spacers",buttonText:"Узнать подробнее"},{image:"./images/category/category_rocket.jpg",title:"Космические аппараты",text:['Человек - земное существо, но сколько веков и тысячелетий бы не прошло, его все так же манит небесная даль звезд и планет, и в прошлом веке наконец многовековая мечта осуществилась: с помощью технологий мы не только запустили научно-исследовательское оборудование в далекие космические дали, но и сами смогли высадиться за пределами планеты Земля, успешно "погуляв" по Луне и вернувшись обратно.'],link:"/#rockets",buttonText:"Узнать подробнее"},{image:"./images/category/category_experiments.jpg",title:"Влияние космического пространства на организм человека",text:["Тема космического пространства и возможности жизни в нём никогда не потеряет своей актуальности, ведь космос - это неизвестность, которая таит в себе много нового, разгадка которого может вывести человечество на новый уровень развития.","Однако человеку, изъявившему желание полететь в космос, во время полёта и после приземления на Землю предстоит столкнуться с множеством трудностей."],link:"/#effect",buttonText:"Узнать подробнее"}]},o={spacers:{mainImage:"./images/group/panorama1.jpg",crumbs:[{title:"Главная",link:"/#"},{title:"Космонавты",link:null}],title:"Космонавты",text:"Среди всех достижений человечества, вызывающих гордость, особое место занимают подвиги российских космонавтов. Для многих поколений космонавты были человеческим идеалом – героями, покорителями местности, о которой нам мало что известно, смелыми и мужественными. До сих пор в школьных сочинениях дети пишут, что мечтают стать космонавтами.",blocks:[{id:"spacers/gagarin",image:"./images/group/spacers/gagarin/gagarin1.jpg",title:"Юрий Алексеевич Гагарин",description:"Первый человек в космосе",link:"/#spacers/gagarin"},{id:"spacers/titov",image:"./images/group/spacers/titov/titov3.jpg",title:"Герман Степанович Титов",description:"Первый человек, совершивший длительный космический полет",link:"/#spacers/titov"},{id:"spacers/leonov",image:"./images/group/spacers/leonov/leonov4.jpg",title:"Алексей Архипович Леонов",description:"Первый человек в открытом космосе",link:"/#spacers/leonov"},{image:"./images/group/spacers/savitskaya/savitskaya1.jpg",title:"Светлана Евгеньевна Савицкая",description:"Первая женщина, вышедшая в открытый космос",link:"/#spacers/savitskaya"}]},rockets:{mainImage:"./images/group/panorama2.jpg",crumbs:[{title:"Главная",link:"/#"},{title:"Космические аппараты",link:null}],title:"Космические аппараты",text:"В нaстoящee врeмя нaшa стрaнa являeтся oдним из лидeрoв нayчнo-тeхничeскoгo прoгрeссa блaгoдaря пoстoяннoмy внeдрeнию сoврeмeнных тeхнoлoгий рaкeтнo-кoсмичeскoй oтрaсли. Дoстижeния СССР, Рoссийскoй Фeдeрaции в кoсмичeскoй oтрaсли впeчaтляют. Нaши инoстрaнныe кoллeги дaвнo признaли бoльшиe зaслyги Рoссии в oблaсти oсвoeния кoсмoсa. С yвeрeннoстью мoжнo скaзaть, чтo oтeчeствeннaя кoсмичeскaя oтрaсль являeтся в мирe oднoй из сaмых рaзвитых и мoщных.",blocks:[{image:"./images/group/rockets/souz/souz1.jpg",title:'Ракета-носитель "Союз"⁠⁠',description:"Ракета среднего класса",link:"/#rockets/souz"},{image:"./images/group/rockets/proton/proton1.jpg",title:'Ракета-носитель "Протон"',description:"Ракета тяжелого класса",link:"/#rockets/proton"},{image:"./images/group/rockets/buran/buran1.jpg",title:'Космический корабль "Буран"',description:"Многоразовый космический корабль",link:"/#rockets/buran"}]},effect:{mainImage:"./images/group/panorama3.jpg",crumbs:[{title:"Главная",link:"/#"},{title:"Влияние на организм",link:null}],title:"Влияние космического пространства на организм человека",text:"Космическое пространство таит в себе много опасностей, которые способны повлиять не только на физическое, но и на психическое состояние человека. К таким опасностям относятся: <br /><br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-\tКосмическое излучение; <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-\tПроблемы с психикой; <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-\tКосмический грибок; <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- Микрогравитация; <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- Проблемы с иммунитетом; <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- Ухудшение зрения; <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- Мышечная атрофия; <br /><br /> и многие другие.",blocks:[{image:"./images/group/impact/blood/blood2.jpg",title:"Кровеносная система",description:"Уменьшение объёма крови",link:"/#effect/blood"},{image:"./images/group/impact/bones/bones4.jpg",title:"Опорно-двигательный аппарат",description:"Кости теряют свою плотность",link:"/#effect/bones"},{image:"./images/group/impact/endocrine/endocrine1.jpg",title:"Эндокринная система",description:"Опасность анемии",link:"/#effect/endocrine"},{image:"./images/group/impact/nervous/nervous2.jpg",title:"Нервная система",description:"Влияние на психику",link:"/#effect/nervous"},{image:"./images/group/impact/respiratory/respiratory1.jpg",title:"Респираторная система",description:"Уменьшение объема легких",link:"/#effect/respiratory"},{image:"./images/group/impact/adaptation/adaptation5.jpg",title:"Адаптация после полета",description:"С какими трудностями сталкиваются космонавты после возвращения на Землю",link:"/#effect/adaptation"}]}},n=[{id:"spacers/gagarin",crumbs:[{link:"/#",title:"Главная"},{link:"/#spacers",title:"Космонавты"},{link:null,title:"Гагарин"}],title:"Юрий Алексеевич Гагарин",text:["Гагарин – первый космонавт СССР и мира, ставший символом развития советской авиации и науки в целом, человек, навсегда вписавший свое имя в историю исследования космического пространства.","Имя Юрия Гагарина с детства знакомо всем россиянам. Он первым из всех живущих на Земле людей побывал в космосе. Прославленный летчик-космонавт стал легендой и образцом для подражания не только для советских граждан, но и для многих жителей других стран мира. После полета в космос Гагарин активно занимался международной общественной деятельностью."],image:"./images/group/spacers/gagarin/gagarin7.jpg",btnText:"Галерея",slides:["./images/group/spacers/gagarin/gagarin1.jpg","./images/group/spacers/gagarin/gagarin2.jpg","./images/group/spacers/gagarin/gagarin3.jpg","./images/group/spacers/gagarin/gagarin4.jpg","./images/group/spacers/gagarin/gagarin5.jpg","./images/group/spacers/gagarin/gagarin6.jpg","./images/group/spacers/gagarin/gagarin7.jpg","./images/group/spacers/gagarin/gagarin8.jpg","./images/group/spacers/gagarin/gagarin9.jpg","./images/group/spacers/gagarin/gagarin10.jpg","./images/group/spacers/gagarin/gagarin11.jpg"]},{id:"spacers/titov",crumbs:[{link:"/#",title:"Главная"},{link:"/#spacers",title:"Космонавты"},{link:null,title:"Титов"}],title:"Герман Степанович Титов",text:["Герман Титов – известный космонавт, дублер Юрия Гагарина. Первый человек, пробывший в космосе больше суток. Самый молодой из всех космонавтов в истории мировой космонавтики. На момент старта ему было всего 25 лет. В 1961 году стал Героем Советского Союза. Доцент, доктор военных наук.","Говорят, что в памяти остаются только первые. Неправда. Во всяком случае, когда речь идет о Германе Титове – втором человеке после Гагарина, полетевшем к звездам. Несмотря на то, что он стал вторым, его имя навсегда впечатано в историю развития космонавтики.","Все люди ищут свое место в жизни, он не стал исключением. С ранних лет его приучили к мысли, что гарантом успеха является напряженная работа, будь то учеба или добывание обычного куска хлеба. Герман всегда рассчитывал только на свои силы, верил исключительно в себя, а не в счастливое стечение обстоятельств. И если ему сопутствовала удача, то это не от большого везения, а в результате упорного труда. Он принадлежал к тем людям, которых считали одержимыми."],image:"./images/group/spacers/titov/titov1.jpg",btnText:"Галерея",slides:["./images/group/spacers/titov/titov1.jpg","./images/group/spacers/titov/titov2.jpg","./images/group/spacers/titov/titov3.jpg","./images/group/spacers/titov/titov4.jpg","./images/group/spacers/titov/titov5.jpg","./images/group/spacers/titov/titov6.jpg","./images/group/spacers/titov/titov7.jpg"]},{id:"spacers/leonov",crumbs:[{link:"/#",title:"Главная"},{link:"/#spacers",title:"Космонавты"},{link:null,title:"Леонов"}],title:"Алексей Архипович Леонов",text:["Алексей Леонов – летчик-космонавт Советского Союза №11. Впервые совершил выход в космическое пространство. Два раза удостоен звания Герой Советского Союза, имел звание генерал-майора авиации.","Имя Алексея Леонова уже давно не на слуху. Многим оно ничего не говорит, так как космонавтикой интересуются единицы. Уже давно забыли, что он был в числе первых космонавтов СССР, не говоря уже о том, чем его полет отличался от полетов его коллег. Но, по мнению людей компетентных в этом вопросе, вклад Леонова в развитие космонавтики не менее важен, чем достижение Гагарина. Ведь он стал первым, кто покинул космический корабль и вышел в открытый космос. Помимо этого Леонов был творческим человеком, поэтому смог оценить красоту планеты Земля «со стороны»."],image:"./images/group/spacers/leonov/leonov7.jpg",btnText:"Галерея",slides:["./images/group/spacers/leonov/leonov1.jpg","./images/group/spacers/leonov/leonov2.jpg","./images/group/spacers/leonov/leonov3.jpg","./images/group/spacers/leonov/leonov4.jpg","./images/group/spacers/leonov/leonov5.jpg","./images/group/spacers/leonov/leonov6.jpg","./images/group/spacers/leonov/leonov7.jpg","./images/group/spacers/leonov/leonov8.jpg"]},{id:"spacers/savitskaya",crumbs:[{link:"/#",title:"Главная"},{link:"/#spacers",title:"Космонавты"},{link:null,title:"Савицкая"}],title:"Светлана Евгеньевна Савицкая",text:["Светлана Савицкая – известный советский космонавт, летчик-испытатель, общественный деятель, педагог. Имеет научную степень кандидата технических наук, звание полковника ВВС СССР. Она единственная женщина в СССР, кто удостоился стать дважды Героем Советского Союза.","Ее имя навсегда вписано в историю космонавтики, ее биография – пример для подражания не только для женщин, но и для многих мужчин. Вторая женщина-космонавт Светлана Савицкая, «маршальская дочка», первая в мире среди женщин, кто побывал в открытом космосе. Она стала достойным продолжателем Валентины Терешковой, «девушки из народа», 53-м космонавтом Советского Союза и 111-м в истории мировой космонавтики."],image:"./images/group/spacers/savitskaya/savitskaya4.jpg",btnText:"Галерея",slides:["./images/group/spacers/savitskaya/savitskaya1.jpg","./images/group/spacers/savitskaya/savitskaya2.jpg","./images/group/spacers/savitskaya/savitskaya3.jpg","./images/group/spacers/savitskaya/savitskaya4.jpg","./images/group/spacers/savitskaya/savitskaya5.jpg","./images/group/spacers/savitskaya/savitskaya6.jpg","./images/group/spacers/savitskaya/savitskaya7.jpg","./images/group/spacers/savitskaya/savitskaya8.jpg","./images/group/spacers/savitskaya/savitskaya9.jpg","./images/group/spacers/savitskaya/savitskaya10.jpg"]},{id:"rockets/souz",crumbs:[{link:"/#",title:"Главная"},{link:"/#rockets",title:"Космические аппараты"},{link:null,title:"Союз"}],title:'Ракета-носитель "Союз"',text:["Ракета-носитель «Союз-ФГ» — ракета среднего класса, разработана и производится в РКЦ «Прогресс» (г. Самара). Она предназначена для выведения на околоземную орбиту автоматических космических аппаратов социально-экономического, научно-исследовательского и специального назначения.","Ракеты-носители «Союз» в сочетании с разгонным блоком «Фрегат» предназначены для запусков космических аппаратов на околоземные орбиты различных высот и наклонений, включая геопереходные и геостационарную, а также отлетные траектории."],image:"./images/group/rockets/souz/souz1.jpg",btnText:"Галерея",slides:["./images/group/rockets/souz/souz1.jpg","./images/group/rockets/souz/souz2.jpg","./images/group/rockets/souz/souz3.jpg","./images/group/rockets/souz/souz4.jpg"]},{id:"rockets/proton",crumbs:[{link:"/#",title:"Главная"},{link:"/#rockets",title:"Космические аппараты"},{link:null,title:"Протон"}],title:'Ракета-носитель "Протон"',text:["«Протон» (УР-500 — Универсальная ракета, «Протон-К», «Протон-М») — одноразовая ракета-носитель (РН) тяжёлого класса, предназначенная для выведения автоматических космических аппаратов на орбиту Земли и далее в космическое пространство. Cпособна выводить на геостационарную орбиту (ГСО) грузы до 3,3 т. ","РН «Протон» явилась средством выведения всех советских и российских орбитальных станций «Салют-ДОС» и «Алмаз», модулей станций «Мир» и МКС, планировавшихся пилотируемых космических кораблей ТКС и Л-1/«Зонд» (советской лунно-облётной программы), а также тяжёлых ИСЗ различного назначения и межпланетных станций. "],image:"./images/group/rockets/proton/proton2.jpg",btnText:"Галерея",slides:["./images/group/rockets/proton/proton1.jpg","./images/group/rockets/proton/proton2.jpg","./images/group/rockets/proton/proton3.jpg","./images/group/rockets/proton/proton4.jpg","./images/group/rockets/proton/proton5.jpg"]},{id:"rockets/buran",crumbs:[{link:"/#",title:"Главная"},{link:"/#rockets",title:"Космические аппараты"},{link:null,title:"Буран"}],title:'Космический корабль "Буран"',text:["«Буран» — многоразовый космический корабль, способный как доставлять различные грузы на орбиту, так и возвращать их на Землю. Специалисты считают, что ракетоплан гипотетически мог спасти «Мир»: в его грузовой отсек спокойно поместился бы любой модуль советской орбитальной станции, затопленной в 2001 году. В том же отсеке конструкторы предлагали для пилотируемых испытательных полётов разместить спускаемый аппарат «Союза». В случае нештатной ситуации это позволило бы экипажу «эвакуироваться» с орбиты."],image:"./images/group/rockets/buran/buran3.jpg",btnText:"Галерея",slides:["./images/group/rockets/buran/buran1.jpg","./images/group/rockets/buran/buran2.jpg","./images/group/rockets/buran/buran3.jpg","./images/group/rockets/buran/buran4.jpg","./images/group/rockets/buran/buran5.jpg"]},{id:"effect/blood",crumbs:[{link:"/#",title:"Главная"},{link:"/#effect",title:"Влияние на организм"},{link:null,title:"Кровеностная система"}],title:"Воздействие на кровеносную систему",text:["Система кровообращения приспособлена к земной гравитации. Сердце расположено высоко по отношению к остальным органам, чтобы лучше снабжать кровью верхнюю часть тела и, конечно же, мозг. Но больше крови всё равно поступает в нижнюю часть тела и меньше — в верхнюю.","В условиях микрогравитации всё тело получает кровь (и остальные жидкости) в равном количестве. Из-за этого ноги становятся худее, а голова увеличивается в размерах. Это сбивает с толку организм: мозг получает сигналы об избытке жидкости в верхней части тела, и поэтому почки начинают активно удалять жидкость из организма, и человек не испытывает чувство жажды.","Такое поведение тела может привести к обезвоживанию, если космонавт не заставляет себя пить, даже когда ему этого не хочется."],image:"./images/group/impact/blood/blood5.jpg",btnText:"Галерея",slides:["./images/group/impact/blood/blood1.jpg","./images/group/impact/blood/blood2.jpg","./images/group/impact/blood/blood3.jpg","./images/group/impact/blood/blood4.jpg","./images/group/impact/blood/blood5.jpg"]},{id:"effect/bones",crumbs:[{link:"/#",title:"Главная"},{link:"/#effect",title:"Влияние на организм"},{link:null,title:"Опорно-двигательный аппарат"}],title:"Воздействие на опорно-двигательный аппарат",text:["Кости теряют свою плотность. Это явление связано с тем, что нахождение в невесомости с каждым месяцем уменьшает плотность костей космонавта на 1% из-за вымывания кальция. Это увеличивает вероятность перелома по возвращении на Землю."],image:"./images/group/impact/bones/bones5.jpg",btnText:"Галерея",slides:["./images/group/impact/bones/bones1.jpg","./images/group/impact/bones/bones2.jpg","./images/group/impact/bones/bones3.jpg","./images/group/impact/bones/bones4.jpg","./images/group/impact/bones/bones5.jpg"]},{id:"effect/endocrine",crumbs:[{link:"/#",title:"Главная"},{link:"/#effect",title:"Влияние на организм"},{link:null,title:"Энокринная система"}],title:"Воздействие на эндокринную систему",text:["Исследование гормональных изменений во время космического полёта — очень сложный процесс. Эндокринологам сложно отличить влияние микрогравитации от влияния стресса во время взлёта, пребывания на орбите и посадки. Хотя кое-что об эндокринной системе во время пребывания в космосе известно. ","Например, по-другому работает гормон эритропоэтин, из-за чего у космонавтов чаще, чем у обычных людей, наблюдается анемия. Гормоны, связанные с положительными эмоциональными реакциями вроде допамина, почему-то активизируются. А из-за снижения физических нагрузок падает и чувствительность к инсулину, что может привести к непредсказуемым последствиям."],image:"./images/group/impact/endocrine/endocrine5.jpg",btnText:"Галерея",slides:["./images/group/impact/endocrine/endocrine1.jpg","./images/group/impact/endocrine/endocrine2.jpg","./images/group/impact/endocrine/endocrine3.jpg","./images/group/impact/endocrine/endocrine4.jpg","./images/group/impact/endocrine/endocrine5.jpg"]},{id:"effect/nervous",crumbs:[{link:"/#",title:"Главная"},{link:"/#effect",title:"Влияние на организм"},{link:null,title:"Нервная система"}],title:"Воздействие на нервную систему",text:["Одна из проблем, с которыми сталкивается космонавт, — это то, что на орбите нет разделения на день и ночь. Космонавты видят рассвет и закат по несколько раз за день. В итоге у них нарушается работа циркадных ритмов, что может привести к постоянному ощущению усталости и дискомфорта.","Ещё одно испытание для нервной системы — условия микрогравитации. Мозг человека должен управлять конечностями в среде, где вертикальная ось тела больше не доминирует. На орбите становится сложнее делать хватательные движения: в невесомости легче промахнуться мимо нужного предмета, и это тоже вводит мозг в заблуждение. Мышцы двигаются по-новому и посылают в мозг сигналы, которые он не знает, как интерпретировать.","В итоге центральная нервная система адаптируется к новым условиям, но на это может потребоваться до шести месяцев."],image:"./images/group/impact/nervous/nervous5.jpg",btnText:"Галерея",slides:["./images/group/impact/nervous/nervous1.jpg","./images/group/impact/nervous/nervous2.jpg","./images/group/impact/nervous/nervous3.jpg","./images/group/impact/nervous/nervous4.jpg","./images/group/impact/nervous/nervous5.jpg","./images/group/impact/nervous/nervous6.jpg"]},{id:"effect/respiratory",crumbs:[{link:"/#",title:"Главная"},{link:"/#effect",title:"Влияние на организм"},{link:null,title:"Респираторная система"}],title:"Воздействие на респираторную систему",text:["Закаченный внутрь МКС воздух помогает космонавтам дышать без помощи каких-либо устройств, но человек дышит на орбите всё равно не так, как на Земле. Основная проблема заключается в изменении кровообращения — целостность дыхательного процесса нарушается из-за неустойчивости движения крови в невесомости. Это приводит к тому, что респираторная система пропускает меньшие потоки воздуха, хотя это и не влияет на жизнеспособность организма. Из-за этого в количественном выражении уменьшается брюшной охват, но это не приводит к изменению паттернов дыхания."],image:"./images/group/impact/respiratory/respiratory3.jpg",btnText:"Галерея",slides:["./images/group/impact/respiratory/respiratory1.jpg","./images/group/impact/respiratory/respiratory2.jpg","./images/group/impact/respiratory/respiratory3.jpg","./images/group/impact/respiratory/respiratory4.jpg","./images/group/impact/respiratory/respiratory5.jpg"]},{id:"effect/adaptation",crumbs:[{link:"/#",title:"Главная"},{link:"/#effect",title:"Влияние на организм"},{link:null,title:"Адаптация"}],title:"Жизнь после нахождения в космическом пространстве",text:["Синдром космической адаптации — так называется состояние, которое испытывает человек как при привыкании к невесомости, так и после возвращения на Землю. Обычно он длится несколько суток и по симптомам напоминает морскую болезнь: слабость, тошнота, головокружение, потеря аппетита. Такие ощущения вызваны перестройкой организма — адаптацией вестибулярного аппарата и органов чувств, перераспределением крови внутри кровеносной системы.","Помимо навыков ходьбы, прибывшему на Землю космонавту приходится вновь учиться обращаться с предметами, которые больше не зависают в пространстве, а под действием гравитации падают вниз, пользоваться туалетом и ванной, есть обычную пищу и удерживать ее в желудке.","В настоящее время разработаны и опробованы эффективные технологии послеполетной реабилитации космонавтов. Это позволило ограничить длительность реабилитационного периода после длительного космического полета двумя-тремя неделями."],image:"./images/group/impact/adaptation/adaptation2.jpg",btnText:"Галерея",slides:["./images/group/impact/adaptation/adaptation1.jpg","./images/group/impact/adaptation/adaptation2.jpg","./images/group/impact/adaptation/adaptation3.jpg","./images/group/impact/adaptation/adaptation4.jpg","./images/group/impact/adaptation/adaptation5.jpg"]}];class p{constructor(){this.init()}init(){this.layout=(new DOMParser).parseFromString('\n    <div class="page404">\n        <h1 class="page404__title">Такой страницы не существует</h1>\n    </div>\n    ',"text/html").body.firstChild}destroy(){this.layout.remove()}get element(){return this.layout}}class g{constructor(t=[]){this.slides=t,this.init(),this.addEventListeners(),this.direction="next"}init(){this.slider=(new DOMParser).parseFromString(this.getSliderHtmlString(),"text/html").body.firstChild,this.sliderContainer=this.slider.querySelector(".slider__container"),this.slidesRow=this.slider.querySelector(".slider__row"),this.slidesRow.style.width=this.slidesRowWidth,this.addSliderItems(),this.getButtons()}getSliderHtmlString(){return'\n    <div class="slider">\n        <div class="slider__container">\n            <div class="slider__row"></div>\n        </div>\n    </div>\n    '}addSliderItems(){this.slides.forEach((t=>{const e=`\n        <div class="slider__item">\n            <img src="${t}" alt="slide" />\n        </div>\n        `,s=(new DOMParser).parseFromString(e,"text/html").body.firstChild;s.style.width=this.slideWidth,this.slidesRow.append(s)}))}getButtons(){const t=this.slider.querySelector(".slider__container");this.prevButton=(new DOMParser).parseFromString('\n    <button class="slider__btn-prev">\n        <img src="./images/slider/btn_prev.png" alt="button" />\n    </button>    \n    ',"text/html").body.firstChild,this.nextButton=(new DOMParser).parseFromString('\n    <button class="slider__btn-next">\n        <img src="./images/slider/btn_next.png" alt="button" />\n    </button>\n    ',"text/html").body.firstChild,t.append(this.prevButton,this.nextButton)}addEventListeners(){this.eventListeners.forEach((t=>{t.targetItem.addEventListener(t.event,t.callback.bind(this))}))}removeEventListeners(){this.eventListeners.forEach((t=>{t.targetItem.removeEventListener(t.event,t.callback)}))}showNextSlide(){"prev"===this.direction&&(this.direction="next",this.slidesRow.prepend(this.slidesRow.lastElementChild)),this.buttonsDisabled=!0,this.sliderContainer.style="justify-content: flex-start",this.slidesRow.style=`\n        width: ${this.slidesRowWidth};\n        transform: translateX(-${this.slideWidth})\n    `}showPreviousSlide(){"next"===this.direction&&(this.direction="prev",this.slidesRow.append(this.slidesRow.firstElementChild)),this.buttonsDisabled=!0,this.sliderContainer.style="justify-content: flex-end",this.slidesRow.style=`\n        width: ${this.slidesRowWidth};\n        transform: translateX(${this.slideWidth})\n    `}finishAnimation(){"next"===this.direction?this.slidesRow.append(this.slidesRow.firstElementChild):this.slidesRow.prepend(this.slidesRow.lastElementChild),this.slidesRow.style=`\n      transition: none;\n      transform: translateX(0);\n      width: ${this.slidesRowWidth};\n    `,this.buttonsDisabled=!1,setTimeout((()=>this.slidesRow.style.transition="0.3s"))}autoPlay(t){setInterval((()=>this.showNextSlide()),t)}destroy(){this.removeEventListeners(),this.slider.remove()}set buttonsDisabled(t){this.sliderButtons.forEach((e=>e.disabled=t))}get sliderButtons(){return[this.nextButton,this.prevButton]}get slideWidth(){return 100/this.slides.length+"%"}get slidesRowWidth(){return 100*this.slides.length+"%"}get eventListeners(){return[{targetItem:this.nextButton,event:"click",callback:this.showNextSlide},{targetItem:this.prevButton,event:"click",callback:this.showPreviousSlide},{targetItem:this.slidesRow,event:"transitionend",callback:this.finishAnimation}]}get element(){return this.slider}}class c{constructor(t){this.options={slider:{},theme:"",slogan:"",sloganAuthor:""},t&&(this.options=Object.assign(this.options,t)),this.init()}init(){this.preview=(new DOMParser).parseFromString(this.getPreviewHtml(),"text/html").body.firstChild,this.appendSlider(this.options.slider.slides)}getPreviewHtml(){return`\n        <div class="preview">\n          <div class="container">\n            <div class="preview__container">\n              <div class="preview__header">${this.options.theme}</div>\n              <div class="preview__wrapper">\n                <div class="preview__title-wrapper">\n                  <h3 class="preview__title">${this.options.slogan}</h3>\n                  <span class="preview__title-author">${this.options.sloganAuthor}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        `}appendSlider(t){const e=this.preview.querySelector(".preview__wrapper");this.slider=new g(t),e.prepend(this.slider.element),this.slider.autoPlay(5e3)}destroy(){this.slider.destroy(),this.preview.remove()}get element(){return this.preview}}class l{constructor(t){this.options={image:"",title:"",text:[],link:"",buttonText:""},t&&(this.options=Object.assign(this.options,t)),this.init(this.options)}init(t){this.block=(new DOMParser).parseFromString(this.getBlockHtmlString(),"text/html").body.firstChild,this.addTextToBlock(t)}getBlockHtmlString(){return`\n    <section class="category">\n    <div class="container">\n      <div class="category__wrapper">\n        <div class="category__content-wrapper">\n          <div class="category__left">\n            <div class="category__image">\n              <img src="${this.options.image}" alt="category_image" />\n            </div>\n          </div>\n          <div class="category__right">\n            <div class="category__title-wrapper">\n              <h2 class="category__title">${this.options.title}</h2>\n            </div>\n            <div class="category__text-wrapper">\n            </div>\n            <div class="category__buttons-wrapper">\n            <a href="${this.options.link}" class="link-button link-button__yellow">${this.options.buttonText}</a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n  `}addTextToBlock(t){const e=this.block.querySelector(".category__text-wrapper");t.text.forEach((t=>{const s=`<p class="category__text">${t}</p>`;e.append((new DOMParser).parseFromString(s,"text/html").body.firstChild)}))}destroy(){this.block.remove()}get element(){return this.block}}class u{constructor(t){this.options={id:"",image:"",title:"",description:"",link:""},t&&(this.options=Object.assign(this.options,t)),this.init()}init(){this.item=(new DOMParser).parseFromString(this.getItemMarkupHtml(),"text/html").body.firstChild}getItemMarkupHtml(){return`\n    <div class="group__item">\n        <div class="group__item-image">\n          <img src="${this.options.image}" alt="kosmo" />\n        </div>\n        <div class="group__item-content">\n          <a href="${this.options.link}" class="group__item-title">${this.options.title}</a>\n          <p class="group__item-description">${this.options.description}</p>\n        </div>\n    </div>\n    `}destroy(){this.item.remove()}get element(){return this.item}}class d{constructor(t){this.options={mainImage:"",crumbs:[],title:"",text:"",blocks:[]},t&&(this.options=Object.assign(this.options,t)),this.init()}init(){this.category=(new DOMParser).parseFromString(this.getCategoryMarkup(),"text/html").body.firstChild,this.appendCrumbs(this.options.crumbs),this.appendCategorisItem(this.options.blocks)}getCategoryMarkup(){return`\n    <section class="group">\n        <div class="container">\n          <div class="group__wrapper">\n            <div class="group__image-wrapper">\n              <img src="${this.options.mainImage}" alt="bg"  />\n            </div>\n            <div class="group__content">\n              <div class="bread-crumbs"></div>\n              <h2 class="group__title">${this.options.title}</h2>\n              <p class="grop__text">${this.options.text}</p>\n              <div class="group__items"></div>\n            </div>\n          </div>\n        </div>\n    </section>\n    `}appendCrumbs(t){const e=this.category.querySelector(".bread-crumbs");t.forEach(((t,s,i)=>{if(s!==i.length-1){const s=`\n            <a href="${t.link}" class="bread-crumbs__item white-color">${t.title}</a>\n            `;e.append((new DOMParser).parseFromString(s,"text/html").body.firstChild)}else{const s=`\n        <span class="bread-crumbs__item white-color">${t.title}</span>\n        `;e.append((new DOMParser).parseFromString(s,"text/html").body.firstChild)}}))}appendCategorisItem(t){const e=this.category.querySelector(".group__items");t.forEach((t=>e.append(new u(t).element)))}destroy(){this.category.remove()}get element(){return this.category}}class m{constructor(e,s){this.config={className:"",addClassName:"",text:""},this.callback=s,e&&(this.config=Object.assign(this.config,e)),this.button=t("button",this.config.className,this.config.addClassName),this.button.innerText=this.config.text,this.callback&&this.button.addEventListener("click",this.callback)}set disabled(t){this.button.disabled=t}get element(){return this.button}}class h{constructor(t="",e=null){this.title=t,this.content=e,this.init(),this.addDefautlButton(),this.addListeners()}init(){this.modal=(new DOMParser).parseFromString(this.getModalMarkup(),"text/html").body.firstChild,this.titleContainer=this.modal.querySelector(".modal__title"),this.contentContainer=this.modal.querySelector(".modal__content"),this.actions=this.modal.querySelector(".modal__actions"),this.closeIconBtn=this.modal.querySelector(".modal__close"),this.show(),this.title&&this.addTitle(this.title),this.content&&this.addContent(this.content)}addListeners(){this.closeIconBtn.addEventListener("click",this.hide.bind(this))}getModalMarkup(){return'\n        <div class="modal hidden">\n           <div class="modal__wrapper">\n             <div class="modal__header">\n               <div class="modal__title"></div>\n               <div class="modal__close"></div>\n             </div>\n             <div class="modal__content"></div>\n             <div class="modal__actions"></div>\n           </div>\n         </div>\n        '}addDefautlButton(){const t=new m({className:"button",addClassName:"yellow-button",text:"Закрыть"},this.hide.bind(this));this.actions.append(t.element)}show(){document.body.append(this.modal),setTimeout((()=>this.modal.classList.remove("hidden")),0)}hide(){this.modal.classList.add("hidden"),setTimeout((()=>this.modal.remove()),300)}addTitle(t){this.titleContainer.innerText=t||""}addContent(t){t&&t instanceof HTMLElement&&(this.contentContainer.innerHTML="",this.contentContainer.append(t))}get element(){return this.modal}}class v{constructor(t){this.options={id:"",crumbs:[],title:"",text:[],image:"",btnText:"",slides:[]},t&&(this.options=Object.assign(this.options,t)),this.init()}init(){this.page=(new DOMParser).parseFromString(this.getPageMarkup(),"text/html").body.firstChild,this.addBreadCrumbs(this.options.crumbs),this.addTextToPage(this.options.text),this.addGaleryButton()}getPageMarkup(){return`\n    <section class="detail">\n        <div class="container">\n          <div class="detail__wrapper">\n            <div class="bread-crumbs"></div>\n            <h2 class="detail__title">${this.options.title}</h2>\n            <div class="detail__text-wrapper"></div>\n            <div class="detail__image-wrapper">\n              <img src="${this.options.image}" alt="image" />\n            </div>\n            <div class="detail__buttons"></div>\n          </div>\n        </div>\n    </section>\n    `}addBreadCrumbs(t){const e=this.page.querySelector(".bread-crumbs");t.forEach(((t,s,i)=>{if(s!==i.length-1){const s=`<a href="${t.link}" class="bread-crumbs__item black-color">${t.title}</a>`;e.append((new DOMParser).parseFromString(s,"text/html").body.firstChild)}else{const s=`<span class="bread-crumbs__item">${t.title}</span>`;e.append((new DOMParser).parseFromString(s,"text/html").body.firstChild)}}))}addTextToPage(t){const e=this.page.querySelector(".detail__text-wrapper");t.forEach((t=>{const s=`<p class="detail__text">${t}</p>`;e.append((new DOMParser).parseFromString(s,"text/html").body.firstChild)}))}addGaleryButton(){const t=this.page.querySelector(".detail__buttons");this.galeryButton=new m({className:"button",addClassName:"yellow-button",text:this.options.btnText},this.showSlides.bind(this)),t.append(this.galeryButton.element)}showSlides(){new h(this.options.title,new g(this.options.slides).element)}destroy(){this.page.remove()}get element(){return this.page}}const b=[{path:"",component:class{constructor(t){this.page=document.createDocumentFragment(),this.preview=new c(t.previewSettings),this.tematicBlocks=[],this.page.appendChild(this.preview.element),this.addTematicBlocks(t)}addTematicBlocks(t){t.tematicBlock.forEach((t=>{const e=new l(t);this.tematicBlocks.push(e),this.page.appendChild(e.element)}))}destroy(){this.preview.destroy(),this.tematicBlocks.forEach((t=>t.destroy()))}get element(){return this.page}}},{path:"spacers",component:d},{path:"rockets",component:d},{path:"effect",component:d},{path:"spacers/gagarin",component:v},{path:"spacers/titov",component:v},{path:"spacers/leonov",component:v},{path:"spacers/savitskaya",component:v},{path:"rockets/souz",component:v},{path:"rockets/proton",component:v},{path:"rockets/buran",component:v},{path:"effect/blood",component:v},{path:"effect/bones",component:v},{path:"effect/endocrine",component:v},{path:"effect/nervous",component:v},{path:"effect/respiratory",component:v},{path:"effect/adaptation",component:v}];class j{constructor(){const t={mainPageData:r,categoriesPageData:o,detailPageData:n};this.routes=b,this.init(t)}init(e){this.content=t("div","content"),this.pageData,this.detailsData,this.id=null,this.activePage,this.start(e)}start(t){this.routes&&this.initRoutes(t)}initRoutes(t){window.addEventListener("hashchange",this.renderRoute.bind(this,t)),this.renderRoute(t)}renderRoute(t){const e=window.location.hash.slice(1),s=b.find((t=>t.path===e));if(this.activePage&&this.activePage.destroy(),s)switch(window.scrollTo(0,0),e){case"":this.pageData=t.mainPageData,this.appendHtml(s,this.pageData);break;case"spacers":case"rockets":case"effect":this.pageData=t.categoriesPageData[e],this.appendHtml(s,this.pageData);break;default:const i=t.detailPageData.find((t=>t.id===e));this.appendHtml(s,i)}else this.show404page()}appendHtml(t,e){this.activePage=new t.component(e),this.content.append(this.activePage.element)}show404page(){this.activePage=new p,this.content.append(this.activePage.element)}get element(){return this.content}}class k{constructor(t){this.options={className:"",placeholder:"",fieldName:""},t&&(this.options=Object.assign(this.options,t)),this.init()}init(){const t=`<input type="text" class="${this.options.className}" placeholder="${this.options.placeholder}" />`;this.textField=(new DOMParser).parseFromString(t,"text/html").body.firstChild,this.textField.addEventListener("input",(()=>this.valid?this.textField.classList.remove("anketa__filter__invalid"):null))}validate(){this.valid||this.textField.classList.add("anketa__filter__invalid")}get fieldName(){return this.options.fieldName}get value(){return this.textField.value}get valid(){return!!this.value}get element(){return this.textField}}class _{constructor(){this.init()}init(){this.anketa=(new DOMParser).parseFromString(this.getAnketaMarkup(),"text/html").body.firstChild,this.addFilters(),this.addButton(),this.modal=new h("Заявка в космонавты",this.element)}getAnketaMarkup(){return'\n    <div class="anketa">\n     <div class="anketa__content">\n       <div class="anketa__image-wrapper">\n         <img src="./images/anketa.jpg" alt="image" />\n       </div>\n       <div class="anketa__filters-wrapper">\n          <h3 class="anketa__title">Заполните все поля!</h3>\n          <div class="anketa__filters">\n   \n          <div class="anketa__buttons-wrapper"></div>\n       </div>\n     </div>\n   </div>\n'}getResultMarkup(){return`\n       <div class="anketa">\n         <div class="anketa__content">\n           <div class="anketa__result" >\n             <h3 class="anketa__result-title">${this.filters.firstName.value}, подзравляем!</h3>\n             <p class="anketa__result-text">\n               Ваша заявка на поступление в отряд космонавтов принята. В ближайшее время мы рассмотрим Вашу кандидатуру и о результатах\n               сообщим в школу №${this.filters.school.value}.\n             </p>\n           </div>\n         </div>\n       </div>\n    `}addFilters(){const t=this.anketa.querySelector(".anketa__filters");this.filters={},this.filterOptions.forEach((e=>{this.filters[e.fieldName]=new k(e),t.prepend(this.filters[e.fieldName].element)}))}addButton(){const t=this.anketa.querySelector(".anketa__buttons-wrapper");this.button=new m({className:"button",addClassName:"yellow-button",text:"Подать заявку"},this.acceptAnketa.bind(this)),t.append(this.button.element)}acceptAnketa(){if(Object.values(this.filters).forEach((t=>{t.validate()})),Object.values(this.filters).every((t=>t.valid))){const t=(new DOMParser).parseFromString(this.getResultMarkup(),"text/html").body.firstChild;this.modal.addContent(t)}}get filterOptions(){return[{className:"anketa__filter",placeholder:"Класс",fieldName:"class"},{className:"anketa__filter",placeholder:"Номер школы",fieldName:"school"},{className:"anketa__filter",placeholder:"Имя",fieldName:"firstName"},{className:"anketa__filter",placeholder:"Фамилия",fieldName:"lastName"}]}get element(){return this.anketa}}class y{constructor(t){this.options={menuItems:[],mobileMenuItems:[],logoIconLink:"",logoHref:"/#",title:"",buttonSettings:{}},t&&(this.options=Object.assign(this.options,t)),this.button=new m(this.options.buttonSettings),this.init()}init(){this.header=(new DOMParser).parseFromString(this.getHeaderHtmlString(this.options),"text/html").body.firstChild,this.header.querySelector(".header__btn").append(new m(this.options.buttonSettings,this.fillQuestionnaire).element),this.header.querySelector(".mobile-header__btn").append(new m(this.options.buttonSettings).element),this.addMenuItems(),this.mobileMenu=this.header.querySelector(".mobile-menu"),this.mobileMenuShowButton=this.header.querySelector(".mobile-header__menu"),this.mobileMenuShowButton.addEventListener("click",this.showMobileMenu.bind(this)),this.mobileMenuHideButton=this.header.querySelector(".mobile-menu__close"),this.mobileMenuHideButton.addEventListener("click",this.hideMobileMenu.bind(this))}getHeaderHtmlString(){return`\n    <header class="header">\n        <div class="container">\n            <div class="header__content-wrapper">\n            <div class="header__wrapper">\n                <div class="header__logo">\n                <a href="${this.options.logoHref}" class="header__logo-link">\n                    <img src="${this.options.logoIconLink}" alt="logo" />\n                </a>\n                </div>\n                <div class="header__title">${this.options.title}</div>\n                <div class="header__btn">  </div>\n                \n            </div>\n            <div class="menu"></div>\n            </div>\n        </div>\n        <div class="mobile-header">\n            <div class="mobile-header__menu">\n                <div class="mobile-menu__line"></div>\n            </div>\n            <div class="mobile-header__title">${this.options.title}</div>\n            <div class="mobile-header__btn">  </div>\n            <div class="mobile-menu mobile-menu__hidden">\n                <div class="mobile-menu__head">\n                    <div class="mobile-menu__close"></div>\n                </div>\n            <div class="mobile-menu__content"></div>\n          </div>\n        </div>\n      </header>\n    `}addMenuItems(){const t=this.header.querySelector(".menu"),e=this.header.querySelector(".mobile-menu__content");this.options.menuItems.forEach((e=>{const s=(new DOMParser).parseFromString(`<a href="${e.linkName}" class="menu__item" >${e.title}</a>`,"text/html").body.firstChild;t.append(s)})),this.options.mobileMenuItems.forEach((t=>{const s=(new DOMParser).parseFromString(`<a href="${t.linkName}" class="mobile-menu__item" >${t.title}</a>`,"text/html").body.firstChild;e.append(s),s.addEventListener("click",this.hideMobileMenu.bind(this))}))}hideMobileMenu(){this.mobileMenu.classList.add("mobile-menu__hidden")}showMobileMenu(){this.mobileMenu.classList.remove("mobile-menu__hidden")}fillQuestionnaire(){new _}get element(){return this.header}}class x{constructor(){this.app=document.querySelector("#app"),this.init()}init(){this.app.append(new y(a).element,(new j).element,new e(i).element)}get element(){return this.app}}s(8430),document.addEventListener("DOMContentLoaded",(()=>{const t=new x;document.body.append(t.element)}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,